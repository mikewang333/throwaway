{
    "openapi": "3.0.1",
    "info": {
        "title": "OData Service for namespace microsoft.graph",
        "description": "This OData service is located at https://graph.microsoft.com/v1.0",
        "version": "1.0.1",
        "x-ms-generated-by": {
            "toolName": "Microsoft.OpenApi.OData",
            "toolVersion": "1.0.9.0"
        }
    },
    "servers": [
        {
            "url": "https://graph.microsoft.com/v1.0"
        }
    ],
    "paths": {
        "/teams": {
            "description": "Provides operations to manage the collection of team entities.",
            "post": {
                "tags": [
                    "teams.team"
                ],
                "summary": "Create team",
                "description": "Create a new team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-post?view=graph-rest-1.0"
                },
                "operationId": "teams.team.CreateTeam",
                "requestBody": {
                    "description": "New entity",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.team"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            }
        },
        "/teams/{team-id}": {
            "description": "Provides operations to manage the collection of team entities.",
            "get": {
                "tags": [
                    "teams.team"
                ],
                "summary": "Get entity from teams by key",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-get?view=graph-rest-1.0"
                },
                "operationId": "teams.team.GetTeam",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "classification",
                                    "createdDateTime",
                                    "description",
                                    "displayName",
                                    "funSettings",
                                    "guestSettings",
                                    "internalId",
                                    "isArchived",
                                    "memberSettings",
                                    "messagingSettings",
                                    "specialization",
                                    "summary",
                                    "tenantId",
                                    "visibility",
                                    "webUrl",
                                    "allChannels",
                                    "channels",
                                    "group",
                                    "incomingChannels",
                                    "installedApps",
                                    "members",
                                    "operations",
                                    "photo",
                                    "primaryChannel",
                                    "tags",
                                    "template",
                                    "schedule"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "allChannels",
                                    "channels",
                                    "group",
                                    "incomingChannels",
                                    "installedApps",
                                    "members",
                                    "operations",
                                    "photo",
                                    "primaryChannel",
                                    "tags",
                                    "template",
                                    "schedule"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.team"
                ],
                "summary": "Update team",
                "description": "Update the properties of the specified team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-update?view=graph-rest-1.0"
                },
                "operationId": "teams.team.UpdateTeam",
                "requestBody": {
                    "description": "New property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.team"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.team"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.team"
                ],
                "summary": "Delete entity from teams",
                "operationId": "teams.team.DeleteTeam",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/allChannels": {
            "description": "Provides operations to manage the allChannels property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List allChannels",
                "description": "Get the list of channels either in this team or shared with this team (incoming channels).",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-list-allchannels?view=graph-rest-1.0"
                },
                "operationId": "teams.ListAllChannels",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "description",
                                    "description desc",
                                    "displayName",
                                    "displayName desc",
                                    "email",
                                    "email desc",
                                    "isFavoriteByDefault",
                                    "isFavoriteByDefault desc",
                                    "membershipType",
                                    "membershipType desc",
                                    "tenantId",
                                    "tenantId desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "description",
                                    "displayName",
                                    "email",
                                    "isFavoriteByDefault",
                                    "membershipType",
                                    "tenantId",
                                    "webUrl",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/allChannels/{channel-id}": {
            "description": "Provides operations to manage the allChannels property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get allChannels from teams",
                "description": "List of channels either hosted in or shared with the team (incoming channels).",
                "operationId": "teams.GetAllChannels",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "description",
                                    "displayName",
                                    "email",
                                    "isFavoriteByDefault",
                                    "membershipType",
                                    "tenantId",
                                    "webUrl",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ]
        },
        "/teams/{team-id}/allChannels/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.allChannels-f86a",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/channels": {
            "description": "Provides operations to manage the channels property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List channels",
                "description": "Retrieve the list of channels in this team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-list?view=graph-rest-1.0"
                },
                "operationId": "teams.ListChannels",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "description",
                                    "description desc",
                                    "displayName",
                                    "displayName desc",
                                    "email",
                                    "email desc",
                                    "isFavoriteByDefault",
                                    "isFavoriteByDefault desc",
                                    "membershipType",
                                    "membershipType desc",
                                    "tenantId",
                                    "tenantId desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "description",
                                    "displayName",
                                    "email",
                                    "isFavoriteByDefault",
                                    "membershipType",
                                    "tenantId",
                                    "webUrl",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Create channel",
                "description": "Create a new channel in a team, as specified in the request body.  When you create a channel, the maximum length of the channel's `displayName` is 50 characters. This is the name that appears to the user in Microsoft Teams. If you're creating a private channel, you can add a maximum of 200 members.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-post?view=graph-rest-1.0"
                },
                "operationId": "teams.CreateChannels",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.channel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/channels/{channel-id}": {
            "description": "Provides operations to manage the channels property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get channels from teams",
                "description": "The collection of channels and messages associated with the team.",
                "operationId": "teams.GetChannels",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "description",
                                    "displayName",
                                    "email",
                                    "isFavoriteByDefault",
                                    "membershipType",
                                    "tenantId",
                                    "webUrl",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property channels in teams",
                "operationId": "teams.UpdateChannels",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.channel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.channel"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property channels for teams",
                "operationId": "teams.DeleteChannels",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/filesFolder": {
            "description": "Provides operations to manage the filesFolder property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get filesFolder",
                "description": "Get the metadata for the location where the files of a channel are stored. ",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-get-filesfolder?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.GetFilesFolder",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdBy",
                                    "createdDateTime",
                                    "description",
                                    "eTag",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "name",
                                    "parentReference",
                                    "webUrl",
                                    "audio",
                                    "bundle",
                                    "content",
                                    "cTag",
                                    "deleted",
                                    "file",
                                    "fileSystemInfo",
                                    "folder",
                                    "image",
                                    "location",
                                    "malware",
                                    "package",
                                    "pendingOperations",
                                    "photo",
                                    "publication",
                                    "remoteItem",
                                    "root",
                                    "searchResult",
                                    "shared",
                                    "sharepointIds",
                                    "size",
                                    "specialFolder",
                                    "video",
                                    "webDavUrl",
                                    "createdByUser",
                                    "lastModifiedByUser",
                                    "workbook",
                                    "analytics",
                                    "children",
                                    "listItem",
                                    "permissions",
                                    "subscriptions",
                                    "thumbnails",
                                    "versions"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "createdByUser",
                                    "lastModifiedByUser",
                                    "workbook",
                                    "analytics",
                                    "children",
                                    "listItem",
                                    "permissions",
                                    "subscriptions",
                                    "thumbnails",
                                    "versions"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/filesFolder"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/filesFolder/content": {
            "description": "Provides operations to manage the media for the team entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get content for the navigation property filesFolder from teams",
                "description": "The content stream, if the item represents a file.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-get-filesfolder?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.GetFilesFolderContent",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "put": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update content for the navigation property filesFolder in teams",
                "description": "The content stream, if the item represents a file.",
                "operationId": "teams.channels.UpdateFilesFolderContent",
                "requestBody": {
                    "description": "New media content.",
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/members": {
            "description": "Provides operations to manage the members property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List members of a channel",
                "description": "Retrieve a list of conversationMembers from a channel. This method supports federation. Only a user who is a member of the shared channel can retrieve the channel member list.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-list-members?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.ListMembers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "displayName",
                                    "displayName desc",
                                    "roles",
                                    "roles desc",
                                    "visibleHistoryStartDateTime",
                                    "visibleHistoryStartDateTime desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "roles",
                                    "visibleHistoryStartDateTime"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Add member to channel",
                "description": "Add a conversationMember to a channel. This operation is allowed only for channels with a **membershipType** value of `private` or `shared`.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-post-members?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.CreateMembers",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/members"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/members/{conversationMember-id}": {
            "description": "Provides operations to manage the members property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get members from teams",
                "description": "A collection of membership records associated with the channel.",
                "operationId": "teams.channels.GetMembers",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "roles",
                                    "visibleHistoryStartDateTime"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property members in teams",
                "operationId": "teams.channels.UpdateMembers",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property members for teams",
                "operationId": "teams.channels.DeleteMembers",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "conversationMember-id",
                    "in": "path",
                    "description": "The unique identifier of conversationMember",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "conversationMember"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/members/{conversationMember-id}"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/members/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.members-8e98",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/members/add": {
            "description": "Provides operations to call the add method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action add",
                "description": "Add multiple members in a single request to a team. The response provides details about which memberships could and couldn't be created.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/conversationmembers-add?view=graph-rest-1.0"
                },
                "operationId": "teams.team.channels.channel.members.add",
                "requestBody": {
                    "description": "Action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "values": {
                                        "type": "array",
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                                                },
                                                {
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action",
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/members/add",
                "/teams/{team-id}/primaryChannel/members/add"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages": {
            "description": "Provides operations to manage the messages property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List channel messages",
                "description": "Retrieve the list of messages (without the replies) in a channel of a team.  To get the replies for a message, call the list message replies or the get message reply API.  This method supports federation. To list channel messages in application context, the request must be made from the tenant that the channel owner belongs to (represented by the **tenantId** property on the channel).",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-list-messages?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.ListMessages",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attachments",
                                    "attachments desc",
                                    "body",
                                    "body desc",
                                    "channelIdentity",
                                    "channelIdentity desc",
                                    "chatId",
                                    "chatId desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "deletedDateTime",
                                    "deletedDateTime desc",
                                    "etag",
                                    "etag desc",
                                    "eventDetail",
                                    "eventDetail desc",
                                    "from",
                                    "from desc",
                                    "importance",
                                    "importance desc",
                                    "lastEditedDateTime",
                                    "lastEditedDateTime desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "locale",
                                    "locale desc",
                                    "mentions",
                                    "mentions desc",
                                    "messageType",
                                    "messageType desc",
                                    "policyViolation",
                                    "policyViolation desc",
                                    "reactions",
                                    "reactions desc",
                                    "replyToId",
                                    "replyToId desc",
                                    "subject",
                                    "subject desc",
                                    "summary",
                                    "summary desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Send chatMessage in channel",
                "description": "Send a new chatMessage in the specified channel.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-post-messages?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.CreateMessages",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/messages"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}": {
            "description": "Provides operations to manage the messages property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get messages from teams",
                "description": "A collection of all the messages in the channel. A navigation property. Nullable.",
                "operationId": "teams.channels.GetMessages",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property messages in teams",
                "operationId": "teams.channels.UpdateMessages",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property messages for teams",
                "operationId": "teams.channels.DeleteMessages",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/hostedContents": {
            "description": "Provides operations to manage the hostedContents property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List hostedContents",
                "description": "Retrieve the list of chatMessageHostedContent objects from a message. This API only lists the hosted content objects. To get the content bytes, see get chatmessage hosted content",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/chatmessage-list-hostedcontents?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.messages.ListHostedContents",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "contentBytes",
                                    "contentBytes desc",
                                    "contentType",
                                    "contentType desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "contentBytes",
                                    "contentType"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Create new navigation property to hostedContents for teams",
                "operationId": "teams.channels.messages.CreateHostedContents",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/hostedContents",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/hostedContents/{chatMessageHostedContent-id}": {
            "description": "Provides operations to manage the hostedContents property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get hostedContents from teams",
                "description": "Content in a message hosted by Microsoft Teams - for example, images or code snippets.",
                "operationId": "teams.channels.messages.GetHostedContents",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "contentBytes",
                                    "contentType"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property hostedContents in teams",
                "operationId": "teams.channels.messages.UpdateHostedContents",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property hostedContents for teams",
                "operationId": "teams.channels.messages.DeleteHostedContents",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessageHostedContent-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessageHostedContent",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessageHostedContent"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents/{chatMessageHostedContent-id}",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/hostedContents/{chatMessageHostedContent-id}",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents/{chatMessageHostedContent-id}"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/hostedContents/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.hostedContents-80f2",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/softDelete": {
            "description": "Provides operations to call the softDelete method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action softDelete",
                "operationId": "teams.team.channels.channel.messages.chatMessage.softDelete",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/softDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/softDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/softDelete"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/undoSoftDelete": {
            "description": "Provides operations to call the undoSoftDelete method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action undoSoftDelete",
                "operationId": "teams.team.channels.channel.messages.chatMessage.undoSoftDelete",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/undoSoftDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/undoSoftDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/undoSoftDelete"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies": {
            "description": "Provides operations to manage the replies property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List replies",
                "description": "List all the replies to a message in a channel of a team. This method lists only the replies of the specified message, if any. To get the message itself, simply call get channel message.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/chatmessage-list-replies?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.messages.ListReplies",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attachments",
                                    "attachments desc",
                                    "body",
                                    "body desc",
                                    "channelIdentity",
                                    "channelIdentity desc",
                                    "chatId",
                                    "chatId desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "deletedDateTime",
                                    "deletedDateTime desc",
                                    "etag",
                                    "etag desc",
                                    "eventDetail",
                                    "eventDetail desc",
                                    "from",
                                    "from desc",
                                    "importance",
                                    "importance desc",
                                    "lastEditedDateTime",
                                    "lastEditedDateTime desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "locale",
                                    "locale desc",
                                    "mentions",
                                    "mentions desc",
                                    "messageType",
                                    "messageType desc",
                                    "policyViolation",
                                    "policyViolation desc",
                                    "reactions",
                                    "reactions desc",
                                    "replyToId",
                                    "replyToId desc",
                                    "subject",
                                    "subject desc",
                                    "summary",
                                    "summary desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Reply to a message in a channel",
                "description": "Create a new reply to a chatMessage in a specified channel.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-post-messagereply?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.messages.CreateReplies",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}": {
            "description": "Provides operations to manage the replies property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get replies from teams",
                "description": "Replies for a specified message. Supports $expand for channel messages.",
                "operationId": "teams.channels.messages.GetReplies",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property replies in teams",
                "operationId": "teams.channels.messages.UpdateReplies",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property replies for teams",
                "operationId": "teams.channels.messages.DeleteReplies",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents": {
            "description": "Provides operations to manage the hostedContents property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List hostedContents",
                "description": "Retrieve the list of chatMessageHostedContent objects from a message. This API only lists the hosted content objects. To get the content bytes, see get chatmessage hosted content",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/chatmessage-list-hostedcontents?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.messages.replies.ListHostedContents",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "contentBytes",
                                    "contentBytes desc",
                                    "contentType",
                                    "contentType desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "contentBytes",
                                    "contentType"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Create new navigation property to hostedContents for teams",
                "operationId": "teams.channels.messages.replies.CreateHostedContents",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/hostedContents",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/hostedContents",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents/{chatMessageHostedContent-id}": {
            "description": "Provides operations to manage the hostedContents property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get hostedContents from teams",
                "description": "Content in a message hosted by Microsoft Teams - for example, images or code snippets.",
                "operationId": "teams.channels.messages.replies.GetHostedContents",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "contentBytes",
                                    "contentType"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property hostedContents in teams",
                "operationId": "teams.channels.messages.replies.UpdateHostedContents",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property hostedContents for teams",
                "operationId": "teams.channels.messages.replies.DeleteHostedContents",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessageHostedContent-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessageHostedContent",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessageHostedContent"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/hostedContents/{chatMessageHostedContent-id}",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/hostedContents/{chatMessageHostedContent-id}",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents/{chatMessageHostedContent-id}"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.hostedContents-3bb6",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/softDelete": {
            "description": "Provides operations to call the softDelete method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action softDelete",
                "operationId": "teams.team.channels.channel.messages.chatMessage.replies.chatMessage.softDelete",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/softDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/softDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/softDelete"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/undoSoftDelete": {
            "description": "Provides operations to call the undoSoftDelete method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action undoSoftDelete",
                "operationId": "teams.team.channels.channel.messages.chatMessage.replies.chatMessage.undoSoftDelete",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/undoSoftDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/undoSoftDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/undoSoftDelete"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.replies-bdfc",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/delta()": {
            "description": "Provides operations to call the delta method.",
            "get": {
                "tags": [
                    "teams.Functions"
                ],
                "summary": "Invoke function delta",
                "operationId": "teams.team.channels.channel.messages.chatMessage.replies.delta",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attachments",
                                    "attachments desc",
                                    "body",
                                    "body desc",
                                    "channelIdentity",
                                    "channelIdentity desc",
                                    "chatId",
                                    "chatId desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "deletedDateTime",
                                    "deletedDateTime desc",
                                    "etag",
                                    "etag desc",
                                    "eventDetail",
                                    "eventDetail desc",
                                    "from",
                                    "from desc",
                                    "importance",
                                    "importance desc",
                                    "lastEditedDateTime",
                                    "lastEditedDateTime desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "locale",
                                    "locale desc",
                                    "mentions",
                                    "mentions desc",
                                    "messageType",
                                    "messageType desc",
                                    "policyViolation",
                                    "policyViolation desc",
                                    "reactions",
                                    "reactions desc",
                                    "replyToId",
                                    "replyToId desc",
                                    "subject",
                                    "subject desc",
                                    "summary",
                                    "summary desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "function",
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/delta()",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/delta()",
                "/teams/{team-id}/primaryChannel/messages/delta()"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.messages-6767",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/messages/delta()": {
            "description": "Provides operations to call the delta method.",
            "get": {
                "tags": [
                    "teams.Functions"
                ],
                "summary": "Invoke function delta",
                "operationId": "teams.team.channels.channel.messages.delta",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attachments",
                                    "attachments desc",
                                    "body",
                                    "body desc",
                                    "channelIdentity",
                                    "channelIdentity desc",
                                    "chatId",
                                    "chatId desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "deletedDateTime",
                                    "deletedDateTime desc",
                                    "etag",
                                    "etag desc",
                                    "eventDetail",
                                    "eventDetail desc",
                                    "from",
                                    "from desc",
                                    "importance",
                                    "importance desc",
                                    "lastEditedDateTime",
                                    "lastEditedDateTime desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "locale",
                                    "locale desc",
                                    "mentions",
                                    "mentions desc",
                                    "messageType",
                                    "messageType desc",
                                    "policyViolation",
                                    "policyViolation desc",
                                    "reactions",
                                    "reactions desc",
                                    "replyToId",
                                    "replyToId desc",
                                    "subject",
                                    "subject desc",
                                    "summary",
                                    "summary desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "function",
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/delta()",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/delta()",
                "/teams/{team-id}/primaryChannel/messages/delta()"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/completeMigration": {
            "description": "Provides operations to call the completeMigration method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action completeMigration",
                "description": "Complete the message migration process by removing `migration mode` from a channel in a team. `Migration mode` is a special state that prevents certain operations, like sending messages and adding members, during the data migration process. After a **completeMigration** request is made, you cannot import additional messages into the team. You can add members to the team after the request returns a successful response.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-completemigration?view=graph-rest-1.0"
                },
                "operationId": "teams.team.channels.channel.completeMigration",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/completeMigration",
                "/teams/{team-id}/primaryChannel/completeMigration"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/doesUserHaveAccess(userId='@userId',tenantId='@tenantId',userPrincipalName='@userPrincipalName')": {
            "description": "Provides operations to call the doesUserHaveAccess method.",
            "get": {
                "tags": [
                    "teams.Functions"
                ],
                "summary": "Invoke function doesUserHaveAccess",
                "operationId": "teams.team.channels.channel.doesUserHaveAccess",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "Usage: userId='@userId'",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "description": "Usage: tenantId='@tenantId'",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "userPrincipalName",
                        "in": "query",
                        "description": "Usage: userPrincipalName='@userPrincipalName'",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "function"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/doesUserHaveAccess(userId='@userId',tenantId='@tenantId',userPrincipalName='@userPrincipalName')"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/provisionEmail": {
            "description": "Provides operations to call the provisionEmail method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action provisionEmail",
                "description": "Provision an email address for a channel. Microsoft Teams doesn't automatically provision an email address for a **channel** by default. To have Teams provision an email address, you can call **provisionEmail**, or through the Teams user interface, select **Get email address**, which triggers Teams to generate an email address if it has not already provisioned one. To remove the email address of a **channel**, use the removeEmail method.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-provisionemail?view=graph-rest-1.0"
                },
                "operationId": "teams.team.channels.channel.provisionEmail",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/provisionEmail"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/removeEmail": {
            "description": "Provides operations to call the removeEmail method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action removeEmail",
                "description": "Remove the email address of a channel. You can remove an email address only if it was provisioned using the provisionEmail method or through the Microsoft Teams client.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-removeemail?view=graph-rest-1.0"
                },
                "operationId": "teams.team.channels.channel.removeEmail",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/removeEmail"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/sharedWithTeams": {
            "description": "Provides operations to manage the sharedWithTeams property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List sharedWithChannelTeamInfo",
                "description": "Get the list of teams that has been shared a specified channel. This operation is allowed only for channels with a **membershipType** value of `shared`.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/sharedwithchannelteaminfo-list?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.ListSharedWithTeams",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "displayName",
                                    "displayName desc",
                                    "tenantId",
                                    "tenantId desc",
                                    "isHostTeam",
                                    "isHostTeam desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "tenantId",
                                    "isHostTeam",
                                    "team",
                                    "allowedMembers"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "team",
                                    "allowedMembers"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Create new navigation property to sharedWithTeams for teams",
                "operationId": "teams.channels.CreateSharedWithTeams",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.sharedWithChannelTeamInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/sharedWithTeams"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/sharedWithTeams/{sharedWithChannelTeamInfo-id}": {
            "description": "Provides operations to manage the sharedWithTeams property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get sharedWithTeams from teams",
                "description": "A collection of teams with which a channel is shared.",
                "operationId": "teams.channels.GetSharedWithTeams",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "tenantId",
                                    "isHostTeam",
                                    "team",
                                    "allowedMembers"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "team",
                                    "allowedMembers"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property sharedWithTeams in teams",
                "operationId": "teams.channels.UpdateSharedWithTeams",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.sharedWithChannelTeamInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.sharedWithChannelTeamInfo"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property sharedWithTeams for teams",
                "operationId": "teams.channels.DeleteSharedWithTeams",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "sharedWithChannelTeamInfo-id",
                    "in": "path",
                    "description": "The unique identifier of sharedWithChannelTeamInfo",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "sharedWithChannelTeamInfo"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/sharedWithTeams/{sharedWithChannelTeamInfo-id}"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/sharedWithTeams/{sharedWithChannelTeamInfo-id}/allowedMembers": {
            "description": "Provides operations to manage the allowedMembers property of the microsoft.graph.sharedWithChannelTeamInfo entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List allowedMembers",
                "description": "Get the list of conversationMembers who can access a shared channel. This method does not return the following conversationMembers from the team:\n- Users with `Guest` role\n- Users who are externally authenticated in the tenant",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/sharedwithchannelteaminfo-list-allowedmembers?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.sharedWithTeams.ListAllowedMembers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "displayName",
                                    "displayName desc",
                                    "roles",
                                    "roles desc",
                                    "visibleHistoryStartDateTime",
                                    "visibleHistoryStartDateTime desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "roles",
                                    "visibleHistoryStartDateTime"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "sharedWithChannelTeamInfo-id",
                    "in": "path",
                    "description": "The unique identifier of sharedWithChannelTeamInfo",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "sharedWithChannelTeamInfo"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/sharedWithTeams/{sharedWithChannelTeamInfo-id}/allowedMembers"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/sharedWithTeams/{sharedWithChannelTeamInfo-id}/allowedMembers/{conversationMember-id}": {
            "description": "Provides operations to manage the allowedMembers property of the microsoft.graph.sharedWithChannelTeamInfo entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get allowedMembers from teams",
                "description": "A collection of team members who have access to the shared channel.",
                "operationId": "teams.channels.sharedWithTeams.GetAllowedMembers",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "roles",
                                    "visibleHistoryStartDateTime"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "sharedWithChannelTeamInfo-id",
                    "in": "path",
                    "description": "The unique identifier of sharedWithChannelTeamInfo",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "sharedWithChannelTeamInfo"
                },
                {
                    "name": "conversationMember-id",
                    "in": "path",
                    "description": "The unique identifier of conversationMember",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "conversationMember"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/sharedWithTeams/{sharedWithChannelTeamInfo-id}/allowedMembers/{conversationMember-id}"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/sharedWithTeams/{sharedWithChannelTeamInfo-id}/allowedMembers/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.allowedMembers-5a86",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "sharedWithChannelTeamInfo-id",
                    "in": "path",
                    "description": "The unique identifier of sharedWithChannelTeamInfo",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "sharedWithChannelTeamInfo"
                }
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/sharedWithTeams/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.sharedWithTeams-11a3",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/tabs": {
            "description": "Provides operations to manage the tabs property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List tabs in channel",
                "description": "Retrieve the list of tabs in the specified channel within a team. ",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-list-tabs?view=graph-rest-1.0"
                },
                "operationId": "teams.channels.ListTabs",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "configuration",
                                    "configuration desc",
                                    "displayName",
                                    "displayName desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "configuration",
                                    "displayName",
                                    "webUrl",
                                    "teamsApp"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "teamsApp"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Create new navigation property to tabs for teams",
                "operationId": "teams.channels.CreateTabs",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamsTab"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/tabs"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/tabs/{teamsTab-id}": {
            "description": "Provides operations to manage the tabs property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get tabs from teams",
                "description": "A collection of all the tabs in the channel. A navigation property.",
                "operationId": "teams.channels.GetTabs",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "configuration",
                                    "displayName",
                                    "webUrl",
                                    "teamsApp"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "teamsApp"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property tabs in teams",
                "operationId": "teams.channels.UpdateTabs",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamsTab"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamsTab"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property tabs for teams",
                "operationId": "teams.channels.DeleteTabs",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "teamsTab-id",
                    "in": "path",
                    "description": "The unique identifier of teamsTab",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamsTab"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/tabs/{teamsTab-id}"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/tabs/{teamsTab-id}/teamsApp": {
            "description": "Provides operations to manage the teamsApp property of the microsoft.graph.teamsTab entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get teamsApp from teams",
                "description": "The application that is linked to the tab. This cannot be changed after tab creation.",
                "operationId": "teams.channels.tabs.GetTeamsApp",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "distributionMethod",
                                    "externalId",
                                    "appDefinitions"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "appDefinitions"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                },
                {
                    "name": "teamsTab-id",
                    "in": "path",
                    "description": "The unique identifier of teamsTab",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamsTab"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/primaryChannel/tabs/{teamsTab-id}/teamsApp"
            ]
        },
        "/teams/{team-id}/channels/{channel-id}/tabs/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.tabs-f94d",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ]
        },
        "/teams/{team-id}/channels/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.channels-1a82",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/channels/getAllMessages()": {
            "description": "Provides operations to call the getAllMessages method.",
            "get": {
                "tags": [
                    "teams.Functions"
                ],
                "summary": "Invoke function getAllMessages",
                "operationId": "teams.team.channels.getAllMessages",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attachments",
                                    "attachments desc",
                                    "body",
                                    "body desc",
                                    "channelIdentity",
                                    "channelIdentity desc",
                                    "chatId",
                                    "chatId desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "deletedDateTime",
                                    "deletedDateTime desc",
                                    "etag",
                                    "etag desc",
                                    "eventDetail",
                                    "eventDetail desc",
                                    "from",
                                    "from desc",
                                    "importance",
                                    "importance desc",
                                    "lastEditedDateTime",
                                    "lastEditedDateTime desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "locale",
                                    "locale desc",
                                    "mentions",
                                    "mentions desc",
                                    "messageType",
                                    "messageType desc",
                                    "policyViolation",
                                    "policyViolation desc",
                                    "reactions",
                                    "reactions desc",
                                    "replyToId",
                                    "replyToId desc",
                                    "subject",
                                    "subject desc",
                                    "summary",
                                    "summary desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "function",
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/getAllMessages()"
            ]
        },
        "/teams/{team-id}/group": {
            "description": "Provides operations to manage the group property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.group"
                ],
                "summary": "Get group from teams",
                "operationId": "teams.GetGroup",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "deletedDateTime",
                                    "assignedLabels",
                                    "assignedLicenses",
                                    "classification",
                                    "createdDateTime",
                                    "description",
                                    "displayName",
                                    "expirationDateTime",
                                    "groupTypes",
                                    "hasMembersWithLicenseErrors",
                                    "isAssignableToRole",
                                    "licenseProcessingState",
                                    "mail",
                                    "mailEnabled",
                                    "mailNickname",
                                    "membershipRule",
                                    "membershipRuleProcessingState",
                                    "onPremisesDomainName",
                                    "onPremisesLastSyncDateTime",
                                    "onPremisesNetBiosName",
                                    "onPremisesProvisioningErrors",
                                    "onPremisesSamAccountName",
                                    "onPremisesSecurityIdentifier",
                                    "onPremisesSyncEnabled",
                                    "preferredDataLocation",
                                    "preferredLanguage",
                                    "proxyAddresses",
                                    "renewedDateTime",
                                    "securityEnabled",
                                    "securityIdentifier",
                                    "theme",
                                    "visibility",
                                    "allowExternalSenders",
                                    "autoSubscribeNewMembers",
                                    "hideFromAddressLists",
                                    "hideFromOutlookClients",
                                    "isSubscribedByMail",
                                    "unseenCount",
                                    "isArchived",
                                    "appRoleAssignments",
                                    "createdOnBehalfOf",
                                    "memberOf",
                                    "members",
                                    "membersWithLicenseErrors",
                                    "owners",
                                    "permissionGrants",
                                    "settings",
                                    "transitiveMemberOf",
                                    "transitiveMembers",
                                    "acceptedSenders",
                                    "calendar",
                                    "calendarView",
                                    "conversations",
                                    "events",
                                    "rejectedSenders",
                                    "threads",
                                    "drive",
                                    "drives",
                                    "sites",
                                    "extensions",
                                    "groupLifecyclePolicies",
                                    "planner",
                                    "onenote",
                                    "photo",
                                    "photos",
                                    "team"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "appRoleAssignments",
                                    "createdOnBehalfOf",
                                    "memberOf",
                                    "members",
                                    "membersWithLicenseErrors",
                                    "owners",
                                    "permissionGrants",
                                    "settings",
                                    "transitiveMemberOf",
                                    "transitiveMembers",
                                    "acceptedSenders",
                                    "calendar",
                                    "calendarView",
                                    "conversations",
                                    "events",
                                    "rejectedSenders",
                                    "threads",
                                    "drive",
                                    "drives",
                                    "sites",
                                    "extensions",
                                    "groupLifecyclePolicies",
                                    "planner",
                                    "onenote",
                                    "photo",
                                    "photos",
                                    "team"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/incomingChannels": {
            "description": "Provides operations to manage the incomingChannels property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List incomingChannels",
                "description": "Get the list of incoming channels (channels shared with a team).",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-list-incomingchannels?view=graph-rest-1.0"
                },
                "operationId": "teams.ListIncomingChannels",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "description",
                                    "description desc",
                                    "displayName",
                                    "displayName desc",
                                    "email",
                                    "email desc",
                                    "isFavoriteByDefault",
                                    "isFavoriteByDefault desc",
                                    "membershipType",
                                    "membershipType desc",
                                    "tenantId",
                                    "tenantId desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "description",
                                    "displayName",
                                    "email",
                                    "isFavoriteByDefault",
                                    "membershipType",
                                    "tenantId",
                                    "webUrl",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/incomingChannels/{channel-id}": {
            "description": "Provides operations to manage the incomingChannels property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get incomingChannels from teams",
                "description": "List of channels shared with the team.",
                "operationId": "teams.GetIncomingChannels",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "description",
                                    "displayName",
                                    "email",
                                    "isFavoriteByDefault",
                                    "membershipType",
                                    "tenantId",
                                    "webUrl",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "channel-id",
                    "in": "path",
                    "description": "The unique identifier of channel",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "channel"
                }
            ]
        },
        "/teams/{team-id}/incomingChannels/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.incomingChannels-728b",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/installedApps": {
            "description": "Provides operations to manage the installedApps property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.teamsAppInstallation"
                ],
                "summary": "List apps in team",
                "description": "Retrieve a list of apps installed in the specified team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-list-installedapps?view=graph-rest-1.0"
                },
                "operationId": "teams.ListInstalledApps",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "teamsApp",
                                    "teamsAppDefinition"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "teamsApp",
                                    "teamsAppDefinition"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.teamsAppInstallation"
                ],
                "summary": "Add app to team",
                "description": "Install an app to the specified team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-post-installedapps?view=graph-rest-1.0"
                },
                "operationId": "teams.CreateInstalledApps",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamsAppInstallation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/installedApps/{teamsAppInstallation-id}": {
            "description": "Provides operations to manage the installedApps property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.teamsAppInstallation"
                ],
                "summary": "Get installedApps from teams",
                "description": "The apps installed in this team.",
                "operationId": "teams.GetInstalledApps",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "teamsApp",
                                    "teamsAppDefinition"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "teamsApp",
                                    "teamsAppDefinition"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.teamsAppInstallation"
                ],
                "summary": "Update the navigation property installedApps in teams",
                "operationId": "teams.UpdateInstalledApps",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamsAppInstallation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamsAppInstallation"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.teamsAppInstallation"
                ],
                "summary": "Delete navigation property installedApps for teams",
                "operationId": "teams.DeleteInstalledApps",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamsAppInstallation-id",
                    "in": "path",
                    "description": "The unique identifier of teamsAppInstallation",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamsAppInstallation"
                }
            ]
        },
        "/teams/{team-id}/installedApps/{teamsAppInstallation-id}/upgrade": {
            "description": "Provides operations to call the upgrade method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action upgrade",
                "description": "Upgrade an app installation within a chat.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/chat-teamsappinstallation-upgrade?view=graph-rest-1.0"
                },
                "operationId": "teams.team.installedApps.teamsAppInstallation.upgrade",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamsAppInstallation-id",
                    "in": "path",
                    "description": "The unique identifier of teamsAppInstallation",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamsAppInstallation"
                }
            ]
        },
        "/teams/{team-id}/installedApps/{teamsAppInstallation-id}/teamsApp": {
            "description": "Provides operations to manage the teamsApp property of the microsoft.graph.teamsAppInstallation entity.",
            "get": {
                "tags": [
                    "teams.teamsAppInstallation"
                ],
                "summary": "Get teamsApp from teams",
                "description": "The app that is installed.",
                "operationId": "teams.installedApps.GetTeamsApp",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "distributionMethod",
                                    "externalId",
                                    "appDefinitions"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "appDefinitions"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamsAppInstallation-id",
                    "in": "path",
                    "description": "The unique identifier of teamsAppInstallation",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamsAppInstallation"
                }
            ]
        },
        "/teams/{team-id}/installedApps/{teamsAppInstallation-id}/teamsAppDefinition": {
            "description": "Provides operations to manage the teamsAppDefinition property of the microsoft.graph.teamsAppInstallation entity.",
            "get": {
                "tags": [
                    "teams.teamsAppInstallation"
                ],
                "summary": "Get teamsAppDefinition from teams",
                "description": "The details of this version of the app.",
                "operationId": "teams.installedApps.GetTeamsAppDefinition",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdBy",
                                    "description",
                                    "displayName",
                                    "lastModifiedDateTime",
                                    "publishingState",
                                    "shortDescription",
                                    "teamsAppId",
                                    "version",
                                    "bot"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "bot"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamsAppInstallation-id",
                    "in": "path",
                    "description": "The unique identifier of teamsAppInstallation",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamsAppInstallation"
                }
            ]
        },
        "/teams/{team-id}/installedApps/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.installedApps-d47b",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/members": {
            "description": "Provides operations to manage the members property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.conversationMember"
                ],
                "summary": "List members of team",
                "description": "Get the conversationMember collection of a team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-list-members?view=graph-rest-1.0"
                },
                "operationId": "teams.ListMembers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "displayName",
                                    "displayName desc",
                                    "roles",
                                    "roles desc",
                                    "visibleHistoryStartDateTime",
                                    "visibleHistoryStartDateTime desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "roles",
                                    "visibleHistoryStartDateTime"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.conversationMember"
                ],
                "summary": "Add member to team",
                "description": "Add a new conversationMember to a team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-post-members?view=graph-rest-1.0"
                },
                "operationId": "teams.CreateMembers",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/members/{conversationMember-id}": {
            "description": "Provides operations to manage the members property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.conversationMember"
                ],
                "summary": "Get members from teams",
                "description": "Members and owners of the team.",
                "operationId": "teams.GetMembers",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "roles",
                                    "visibleHistoryStartDateTime"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.conversationMember"
                ],
                "summary": "Update the navigation property members in teams",
                "operationId": "teams.UpdateMembers",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.conversationMember"
                ],
                "summary": "Delete navigation property members for teams",
                "operationId": "teams.DeleteMembers",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "conversationMember-id",
                    "in": "path",
                    "description": "The unique identifier of conversationMember",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "conversationMember"
                }
            ]
        },
        "/teams/{team-id}/members/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.members-717b",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/members/add": {
            "description": "Provides operations to call the add method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action add",
                "description": "Add multiple members in a single request to a team. The response provides details about which memberships could and couldn't be created.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/conversationmembers-add?view=graph-rest-1.0"
                },
                "operationId": "teams.team.members.add",
                "requestBody": {
                    "description": "Action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "values": {
                                        "type": "array",
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                                                },
                                                {
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action",
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/members/add",
                "/teams/{team-id}/primaryChannel/members/add"
            ]
        },
        "/teams/{team-id}/archive": {
            "description": "Provides operations to call the archive method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action archive",
                "description": "Archive the specified team. \nWhen a team is archived, users can no longer send or like messages on any channel in the team, edit the team's name, description, or other settings, or in general make most changes to the team.\nMembership changes to the team continue to be allowed. Archiving is an async operation. A team is archived once the async operation completes successfully, which may occur subsequent to a response from this API. To archive a team, the team and group must have an owner. To restore a team from its archived state, use the API to unarchive.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-archive?view=graph-rest-1.0"
                },
                "operationId": "teams.team.archive",
                "requestBody": {
                    "description": "Action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "shouldSetSpoSiteReadOnlyForMembers": {
                                        "type": "boolean",
                                        "default": false,
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/clone": {
            "description": "Provides operations to call the clone method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action clone",
                "description": "Create a copy of a team. This operation also creates a copy of the corresponding group.\nYou can specify which parts of the team to clone: When tabs are cloned, they are put into an unconfigured state \n-- they are displayed on the tab bar in Microsoft Teams, and the first time you open them, you'll go through the configuration screen. \n(If the person opening the tab does not have permission to configure apps, they will see a message explaining that the tab hasn't been configured.) Cloning is a long-running operation.\nAfter the POST clone returns, you need to GET the operation to see if it's 'running' or 'succeeded' or 'failed'. \nYou should continue to GET until the status is not 'running'. \nThe recommended delay between GETs is 5 seconds.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-clone?view=graph-rest-1.0"
                },
                "operationId": "teams.team.clone",
                "requestBody": {
                    "description": "Action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "displayName": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "mailNickname": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "classification": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "visibility": {
                                        "$ref": "#/components/schemas/microsoft.graph.teamVisibilityType"
                                    },
                                    "partsToClone": {
                                        "$ref": "#/components/schemas/microsoft.graph.clonableTeamParts"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/completeMigration": {
            "description": "Provides operations to call the completeMigration method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action completeMigration",
                "description": "Complete the message migration process by removing `migration mode` from a team. `Migration mode` is a special state where certain operations are barred, like message POST and membership operations during the data migration process. After a **completeMigration** request is made, you cannot import additional messages into the team. You can add members to the team after the request returns a successful response.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-completemigration?view=graph-rest-1.0"
                },
                "operationId": "teams.team.completeMigration",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/completeMigration",
                "/teams/{team-id}/primaryChannel/completeMigration"
            ]
        },
        "/teams/{team-id}/sendActivityNotification": {
            "description": "Provides operations to call the sendActivityNotification method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action sendActivityNotification",
                "description": "Send an activity feed notification in the scope of a team. For more details about sending notifications and the requirements for doing so, see\nsending Teams activity notifications.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-sendactivitynotification?view=graph-rest-1.0"
                },
                "operationId": "teams.team.sendActivityNotification",
                "requestBody": {
                    "description": "Action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "topic": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/microsoft.graph.teamworkActivityTopic"
                                            },
                                            {
                                                "type": "object",
                                                "nullable": true
                                            }
                                        ]
                                    },
                                    "activityType": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "chainId": {
                                        "type": "integer",
                                        "format": "int64",
                                        "nullable": true
                                    },
                                    "previewText": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/microsoft.graph.itemBody"
                                            },
                                            {
                                                "type": "object",
                                                "nullable": true
                                            }
                                        ]
                                    },
                                    "templateParameters": {
                                        "type": "array",
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/microsoft.graph.keyValuePair"
                                                },
                                                {
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            ]
                                        }
                                    },
                                    "recipient": {
                                        "anyOf": [
                                            {
                                                "$ref": "#/components/schemas/microsoft.graph.teamworkNotificationRecipient"
                                            },
                                            {
                                                "type": "object",
                                                "nullable": true
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/unarchive": {
            "description": "Provides operations to call the unarchive method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action unarchive",
                "description": "Restore an archived team. This restores users' ability to send messages and edit the team, abiding by tenant and team settings. Teams are archived using the archive API. Unarchiving is an async operation. A team is unarchived once the async operation completes successfully, which may occur subsequent to a response from this API.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-unarchive?view=graph-rest-1.0"
                },
                "operationId": "teams.team.unarchive",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/operations": {
            "description": "Provides operations to manage the operations property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.teamsAsyncOperation"
                ],
                "summary": "Get operations from teams",
                "description": "The async operations that ran or are running on this team.",
                "operationId": "teams.ListOperations",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attemptsCount",
                                    "attemptsCount desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "error",
                                    "error desc",
                                    "lastActionDateTime",
                                    "lastActionDateTime desc",
                                    "operationType",
                                    "operationType desc",
                                    "status",
                                    "status desc",
                                    "targetResourceId",
                                    "targetResourceId desc",
                                    "targetResourceLocation",
                                    "targetResourceLocation desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attemptsCount",
                                    "createdDateTime",
                                    "error",
                                    "lastActionDateTime",
                                    "operationType",
                                    "status",
                                    "targetResourceId",
                                    "targetResourceLocation"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.teamsAsyncOperation"
                ],
                "summary": "Create new navigation property to operations for teams",
                "operationId": "teams.CreateOperations",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamsAsyncOperation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/operations/{teamsAsyncOperation-id}": {
            "description": "Provides operations to manage the operations property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.teamsAsyncOperation"
                ],
                "summary": "Get operations from teams",
                "description": "The async operations that ran or are running on this team.",
                "operationId": "teams.GetOperations",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attemptsCount",
                                    "createdDateTime",
                                    "error",
                                    "lastActionDateTime",
                                    "operationType",
                                    "status",
                                    "targetResourceId",
                                    "targetResourceLocation"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.teamsAsyncOperation"
                ],
                "summary": "Update the navigation property operations in teams",
                "operationId": "teams.UpdateOperations",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamsAsyncOperation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamsAsyncOperation"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.teamsAsyncOperation"
                ],
                "summary": "Delete navigation property operations for teams",
                "operationId": "teams.DeleteOperations",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamsAsyncOperation-id",
                    "in": "path",
                    "description": "The unique identifier of teamsAsyncOperation",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamsAsyncOperation"
                }
            ]
        },
        "/teams/{team-id}/operations/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.operations-66af",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/photo": {
            "description": "Provides operations to manage the photo property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.profilePhoto"
                ],
                "summary": "Get photo from teams",
                "description": "The profile photo for the team.",
                "operationId": "teams.GetPhoto",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "height",
                                    "width"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.profilePhoto"
                ],
                "summary": "Update the navigation property photo in teams",
                "operationId": "teams.UpdatePhoto",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.profilePhoto"
                ],
                "summary": "Delete navigation property photo for teams",
                "operationId": "teams.DeletePhoto",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/photo/$value": {
            "description": "Provides operations to manage the media for the team entity.",
            "get": {
                "tags": [
                    "teams.profilePhoto"
                ],
                "summary": "Get media content for the navigation property photo from teams",
                "operationId": "teams.GetPhotoContent",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "put": {
                "tags": [
                    "teams.profilePhoto"
                ],
                "summary": "Update media content for the navigation property photo in teams",
                "operationId": "teams.UpdatePhotoContent",
                "requestBody": {
                    "description": "New media content.",
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/primaryChannel": {
            "description": "Provides operations to manage the primaryChannel property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get primaryChannel",
                "description": "Get the default channel, **General**, of a team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/team-get-primarychannel?view=graph-rest-1.0"
                },
                "operationId": "teams.GetPrimaryChannel",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "description",
                                    "displayName",
                                    "email",
                                    "isFavoriteByDefault",
                                    "membershipType",
                                    "tenantId",
                                    "webUrl",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "filesFolder",
                                    "members",
                                    "messages",
                                    "sharedWithTeams",
                                    "tabs"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property primaryChannel in teams",
                "operationId": "teams.UpdatePrimaryChannel",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.channel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.channel"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property primaryChannel for teams",
                "operationId": "teams.DeletePrimaryChannel",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/primaryChannel/filesFolder": {
            "description": "Provides operations to manage the filesFolder property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get filesFolder",
                "description": "Get the metadata for the location where the files of a channel are stored. ",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-get-filesfolder?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.GetFilesFolder",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdBy",
                                    "createdDateTime",
                                    "description",
                                    "eTag",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "name",
                                    "parentReference",
                                    "webUrl",
                                    "audio",
                                    "bundle",
                                    "content",
                                    "cTag",
                                    "deleted",
                                    "file",
                                    "fileSystemInfo",
                                    "folder",
                                    "image",
                                    "location",
                                    "malware",
                                    "package",
                                    "pendingOperations",
                                    "photo",
                                    "publication",
                                    "remoteItem",
                                    "root",
                                    "searchResult",
                                    "shared",
                                    "sharepointIds",
                                    "size",
                                    "specialFolder",
                                    "video",
                                    "webDavUrl",
                                    "createdByUser",
                                    "lastModifiedByUser",
                                    "workbook",
                                    "analytics",
                                    "children",
                                    "listItem",
                                    "permissions",
                                    "subscriptions",
                                    "thumbnails",
                                    "versions"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "createdByUser",
                                    "lastModifiedByUser",
                                    "workbook",
                                    "analytics",
                                    "children",
                                    "listItem",
                                    "permissions",
                                    "subscriptions",
                                    "thumbnails",
                                    "versions"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/filesFolder"
            ]
        },
        "/teams/{team-id}/primaryChannel/filesFolder/content": {
            "description": "Provides operations to manage the media for the team entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get content for the navigation property filesFolder from teams",
                "description": "The content stream, if the item represents a file.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-get-filesfolder?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.GetFilesFolderContent",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "put": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update content for the navigation property filesFolder in teams",
                "description": "The content stream, if the item represents a file.",
                "operationId": "teams.primaryChannel.UpdateFilesFolderContent",
                "requestBody": {
                    "description": "New media content.",
                    "content": {
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/primaryChannel/members": {
            "description": "Provides operations to manage the members property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List members of a channel",
                "description": "Retrieve a list of conversationMembers from a channel. This method supports federation. Only a user who is a member of the shared channel can retrieve the channel member list.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-list-members?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.ListMembers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "displayName",
                                    "displayName desc",
                                    "roles",
                                    "roles desc",
                                    "visibleHistoryStartDateTime",
                                    "visibleHistoryStartDateTime desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "roles",
                                    "visibleHistoryStartDateTime"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Add member to channel",
                "description": "Add a conversationMember to a channel. This operation is allowed only for channels with a **membershipType** value of `private` or `shared`.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-post-members?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.CreateMembers",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/members"
            ]
        },
        "/teams/{team-id}/primaryChannel/members/{conversationMember-id}": {
            "description": "Provides operations to manage the members property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get members from teams",
                "description": "A collection of membership records associated with the channel.",
                "operationId": "teams.primaryChannel.GetMembers",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "roles",
                                    "visibleHistoryStartDateTime"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property members in teams",
                "operationId": "teams.primaryChannel.UpdateMembers",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property members for teams",
                "operationId": "teams.primaryChannel.DeleteMembers",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "conversationMember-id",
                    "in": "path",
                    "description": "The unique identifier of conversationMember",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "conversationMember"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/members/{conversationMember-id}"
            ]
        },
        "/teams/{team-id}/primaryChannel/members/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.members-8411",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/primaryChannel/members/add": {
            "description": "Provides operations to call the add method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action add",
                "description": "Add multiple members in a single request to a team. The response provides details about which memberships could and couldn't be created.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/conversationmembers-add?view=graph-rest-1.0"
                },
                "operationId": "teams.team.primaryChannel.members.add",
                "requestBody": {
                    "description": "Action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "values": {
                                        "type": "array",
                                        "items": {
                                            "anyOf": [
                                                {
                                                    "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                                                },
                                                {
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action",
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/members/add",
                "/teams/{team-id}/members/add"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages": {
            "description": "Provides operations to manage the messages property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List channel messages",
                "description": "Retrieve the list of messages (without the replies) in a channel of a team.  To get the replies for a message, call the list message replies or the get message reply API.  This method supports federation. To list channel messages in application context, the request must be made from the tenant that the channel owner belongs to (represented by the **tenantId** property on the channel).",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-list-messages?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.ListMessages",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attachments",
                                    "attachments desc",
                                    "body",
                                    "body desc",
                                    "channelIdentity",
                                    "channelIdentity desc",
                                    "chatId",
                                    "chatId desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "deletedDateTime",
                                    "deletedDateTime desc",
                                    "etag",
                                    "etag desc",
                                    "eventDetail",
                                    "eventDetail desc",
                                    "from",
                                    "from desc",
                                    "importance",
                                    "importance desc",
                                    "lastEditedDateTime",
                                    "lastEditedDateTime desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "locale",
                                    "locale desc",
                                    "mentions",
                                    "mentions desc",
                                    "messageType",
                                    "messageType desc",
                                    "policyViolation",
                                    "policyViolation desc",
                                    "reactions",
                                    "reactions desc",
                                    "replyToId",
                                    "replyToId desc",
                                    "subject",
                                    "subject desc",
                                    "summary",
                                    "summary desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Send chatMessage in channel",
                "description": "Send a new chatMessage in the specified channel.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-post-messages?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.CreateMessages",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}": {
            "description": "Provides operations to manage the messages property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get messages from teams",
                "description": "A collection of all the messages in the channel. A navigation property. Nullable.",
                "operationId": "teams.primaryChannel.GetMessages",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property messages in teams",
                "operationId": "teams.primaryChannel.UpdateMessages",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property messages for teams",
                "operationId": "teams.primaryChannel.DeleteMessages",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/hostedContents": {
            "description": "Provides operations to manage the hostedContents property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List hostedContents",
                "description": "Retrieve the list of chatMessageHostedContent objects from a message. This API only lists the hosted content objects. To get the content bytes, see get chatmessage hosted content",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/chatmessage-list-hostedcontents?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.messages.ListHostedContents",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "contentBytes",
                                    "contentBytes desc",
                                    "contentType",
                                    "contentType desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "contentBytes",
                                    "contentType"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Create new navigation property to hostedContents for teams",
                "operationId": "teams.primaryChannel.messages.CreateHostedContents",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/hostedContents",
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/hostedContents/{chatMessageHostedContent-id}": {
            "description": "Provides operations to manage the hostedContents property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get hostedContents from teams",
                "description": "Content in a message hosted by Microsoft Teams - for example, images or code snippets.",
                "operationId": "teams.primaryChannel.messages.GetHostedContents",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "contentBytes",
                                    "contentType"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property hostedContents in teams",
                "operationId": "teams.primaryChannel.messages.UpdateHostedContents",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property hostedContents for teams",
                "operationId": "teams.primaryChannel.messages.DeleteHostedContents",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessageHostedContent-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessageHostedContent",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessageHostedContent"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/hostedContents/{chatMessageHostedContent-id}",
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents/{chatMessageHostedContent-id}",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents/{chatMessageHostedContent-id}"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/hostedContents/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.hostedContents-ed0a",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/softDelete": {
            "description": "Provides operations to call the softDelete method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action softDelete",
                "operationId": "teams.team.primaryChannel.messages.chatMessage.softDelete",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/softDelete",
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/softDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/softDelete"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/undoSoftDelete": {
            "description": "Provides operations to call the undoSoftDelete method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action undoSoftDelete",
                "operationId": "teams.team.primaryChannel.messages.chatMessage.undoSoftDelete",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/undoSoftDelete",
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/undoSoftDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/undoSoftDelete"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies": {
            "description": "Provides operations to manage the replies property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List replies",
                "description": "List all the replies to a message in a channel of a team. This method lists only the replies of the specified message, if any. To get the message itself, simply call get channel message.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/chatmessage-list-replies?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.messages.ListReplies",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attachments",
                                    "attachments desc",
                                    "body",
                                    "body desc",
                                    "channelIdentity",
                                    "channelIdentity desc",
                                    "chatId",
                                    "chatId desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "deletedDateTime",
                                    "deletedDateTime desc",
                                    "etag",
                                    "etag desc",
                                    "eventDetail",
                                    "eventDetail desc",
                                    "from",
                                    "from desc",
                                    "importance",
                                    "importance desc",
                                    "lastEditedDateTime",
                                    "lastEditedDateTime desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "locale",
                                    "locale desc",
                                    "mentions",
                                    "mentions desc",
                                    "messageType",
                                    "messageType desc",
                                    "policyViolation",
                                    "policyViolation desc",
                                    "reactions",
                                    "reactions desc",
                                    "replyToId",
                                    "replyToId desc",
                                    "subject",
                                    "subject desc",
                                    "summary",
                                    "summary desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Reply to a message in a channel",
                "description": "Create a new reply to a chatMessage in a specified channel.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-post-messagereply?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.messages.CreateReplies",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}": {
            "description": "Provides operations to manage the replies property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get replies from teams",
                "description": "Replies for a specified message. Supports $expand for channel messages.",
                "operationId": "teams.primaryChannel.messages.GetReplies",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property replies in teams",
                "operationId": "teams.primaryChannel.messages.UpdateReplies",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property replies for teams",
                "operationId": "teams.primaryChannel.messages.DeleteReplies",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents": {
            "description": "Provides operations to manage the hostedContents property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List hostedContents",
                "description": "Retrieve the list of chatMessageHostedContent objects from a message. This API only lists the hosted content objects. To get the content bytes, see get chatmessage hosted content",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/chatmessage-list-hostedcontents?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.messages.replies.ListHostedContents",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "contentBytes",
                                    "contentBytes desc",
                                    "contentType",
                                    "contentType desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "contentBytes",
                                    "contentType"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Create new navigation property to hostedContents for teams",
                "operationId": "teams.primaryChannel.messages.replies.CreateHostedContents",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/hostedContents",
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/hostedContents"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents/{chatMessageHostedContent-id}": {
            "description": "Provides operations to manage the hostedContents property of the microsoft.graph.chatMessage entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get hostedContents from teams",
                "description": "Content in a message hosted by Microsoft Teams - for example, images or code snippets.",
                "operationId": "teams.primaryChannel.messages.replies.GetHostedContents",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "contentBytes",
                                    "contentType"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property hostedContents in teams",
                "operationId": "teams.primaryChannel.messages.replies.UpdateHostedContents",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property hostedContents for teams",
                "operationId": "teams.primaryChannel.messages.replies.DeleteHostedContents",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessageHostedContent-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessageHostedContent",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessageHostedContent"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/hostedContents/{chatMessageHostedContent-id}",
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents/{chatMessageHostedContent-id}",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/hostedContents/{chatMessageHostedContent-id}"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/hostedContents/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.hostedContents-1d3a",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/softDelete": {
            "description": "Provides operations to call the softDelete method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action softDelete",
                "operationId": "teams.team.primaryChannel.messages.chatMessage.replies.chatMessage.softDelete",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/softDelete",
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/softDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/softDelete"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/{chatMessage-id1}/undoSoftDelete": {
            "description": "Provides operations to call the undoSoftDelete method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action undoSoftDelete",
                "operationId": "teams.team.primaryChannel.messages.chatMessage.replies.chatMessage.undoSoftDelete",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                },
                {
                    "name": "chatMessage-id1",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/undoSoftDelete",
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/{chatMessage-id1}/undoSoftDelete",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/undoSoftDelete"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.replies-eb7a",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/delta()": {
            "description": "Provides operations to call the delta method.",
            "get": {
                "tags": [
                    "teams.Functions"
                ],
                "summary": "Invoke function delta",
                "operationId": "teams.team.primaryChannel.messages.chatMessage.replies.delta",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attachments",
                                    "attachments desc",
                                    "body",
                                    "body desc",
                                    "channelIdentity",
                                    "channelIdentity desc",
                                    "chatId",
                                    "chatId desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "deletedDateTime",
                                    "deletedDateTime desc",
                                    "etag",
                                    "etag desc",
                                    "eventDetail",
                                    "eventDetail desc",
                                    "from",
                                    "from desc",
                                    "importance",
                                    "importance desc",
                                    "lastEditedDateTime",
                                    "lastEditedDateTime desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "locale",
                                    "locale desc",
                                    "mentions",
                                    "mentions desc",
                                    "messageType",
                                    "messageType desc",
                                    "policyViolation",
                                    "policyViolation desc",
                                    "reactions",
                                    "reactions desc",
                                    "replyToId",
                                    "replyToId desc",
                                    "subject",
                                    "subject desc",
                                    "summary",
                                    "summary desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "function",
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "chatMessage-id",
                    "in": "path",
                    "description": "The unique identifier of chatMessage",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "chatMessage"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/delta()",
                "/teams/{team-id}/channels/{channel-id}/messages/delta()",
                "/teams/{team-id}/primaryChannel/messages/delta()"
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.messages-d90b",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/primaryChannel/messages/delta()": {
            "description": "Provides operations to call the delta method.",
            "get": {
                "tags": [
                    "teams.Functions"
                ],
                "summary": "Invoke function delta",
                "operationId": "teams.team.primaryChannel.messages.delta",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attachments",
                                    "attachments desc",
                                    "body",
                                    "body desc",
                                    "channelIdentity",
                                    "channelIdentity desc",
                                    "chatId",
                                    "chatId desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "deletedDateTime",
                                    "deletedDateTime desc",
                                    "etag",
                                    "etag desc",
                                    "eventDetail",
                                    "eventDetail desc",
                                    "from",
                                    "from desc",
                                    "importance",
                                    "importance desc",
                                    "lastEditedDateTime",
                                    "lastEditedDateTime desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "locale",
                                    "locale desc",
                                    "mentions",
                                    "mentions desc",
                                    "messageType",
                                    "messageType desc",
                                    "policyViolation",
                                    "policyViolation desc",
                                    "reactions",
                                    "reactions desc",
                                    "replyToId",
                                    "replyToId desc",
                                    "subject",
                                    "subject desc",
                                    "summary",
                                    "summary desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "function",
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/messages/{chatMessage-id}/replies/delta()",
                "/teams/{team-id}/channels/{channel-id}/messages/delta()",
                "/teams/{team-id}/primaryChannel/messages/{chatMessage-id}/replies/delta()"
            ]
        },
        "/teams/{team-id}/primaryChannel/completeMigration": {
            "description": "Provides operations to call the completeMigration method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action completeMigration",
                "description": "Complete the message migration process by removing `migration mode` from a channel in a team. `Migration mode` is a special state that prevents certain operations, like sending messages and adding members, during the data migration process. After a **completeMigration** request is made, you cannot import additional messages into the team. You can add members to the team after the request returns a successful response.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-completemigration?view=graph-rest-1.0"
                },
                "operationId": "teams.team.primaryChannel.completeMigration",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/completeMigration",
                "/teams/{team-id}/completeMigration"
            ]
        },
        "/teams/{team-id}/primaryChannel/doesUserHaveAccess(userId='@userId',tenantId='@tenantId',userPrincipalName='@userPrincipalName')": {
            "description": "Provides operations to call the doesUserHaveAccess method.",
            "get": {
                "tags": [
                    "teams.Functions"
                ],
                "summary": "Invoke function doesUserHaveAccess",
                "operationId": "teams.team.primaryChannel.doesUserHaveAccess",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "Usage: userId='@userId'",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "tenantId",
                        "in": "query",
                        "description": "Usage: tenantId='@tenantId'",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    {
                        "name": "userPrincipalName",
                        "in": "query",
                        "description": "Usage: userPrincipalName='@userPrincipalName'",
                        "schema": {
                            "type": "string",
                            "nullable": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "function"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/doesUserHaveAccess(userId='@userId',tenantId='@tenantId',userPrincipalName='@userPrincipalName')"
            ]
        },
        "/teams/{team-id}/primaryChannel/provisionEmail": {
            "description": "Provides operations to call the provisionEmail method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action provisionEmail",
                "description": "Provision an email address for a channel. Microsoft Teams doesn't automatically provision an email address for a **channel** by default. To have Teams provision an email address, you can call **provisionEmail**, or through the Teams user interface, select **Get email address**, which triggers Teams to generate an email address if it has not already provisioned one. To remove the email address of a **channel**, use the removeEmail method.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-provisionemail?view=graph-rest-1.0"
                },
                "operationId": "teams.team.primaryChannel.provisionEmail",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/provisionEmail"
            ]
        },
        "/teams/{team-id}/primaryChannel/removeEmail": {
            "description": "Provides operations to call the removeEmail method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action removeEmail",
                "description": "Remove the email address of a channel. You can remove an email address only if it was provisioned using the provisionEmail method or through the Microsoft Teams client.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-removeemail?view=graph-rest-1.0"
                },
                "operationId": "teams.team.primaryChannel.removeEmail",
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/removeEmail"
            ]
        },
        "/teams/{team-id}/primaryChannel/sharedWithTeams": {
            "description": "Provides operations to manage the sharedWithTeams property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List sharedWithChannelTeamInfo",
                "description": "Get the list of teams that has been shared a specified channel. This operation is allowed only for channels with a **membershipType** value of `shared`.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/sharedwithchannelteaminfo-list?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.ListSharedWithTeams",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "displayName",
                                    "displayName desc",
                                    "tenantId",
                                    "tenantId desc",
                                    "isHostTeam",
                                    "isHostTeam desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "tenantId",
                                    "isHostTeam",
                                    "team",
                                    "allowedMembers"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "team",
                                    "allowedMembers"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Create new navigation property to sharedWithTeams for teams",
                "operationId": "teams.primaryChannel.CreateSharedWithTeams",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.sharedWithChannelTeamInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/sharedWithTeams"
            ]
        },
        "/teams/{team-id}/primaryChannel/sharedWithTeams/{sharedWithChannelTeamInfo-id}": {
            "description": "Provides operations to manage the sharedWithTeams property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get sharedWithTeams from teams",
                "description": "A collection of teams with which a channel is shared.",
                "operationId": "teams.primaryChannel.GetSharedWithTeams",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "tenantId",
                                    "isHostTeam",
                                    "team",
                                    "allowedMembers"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "team",
                                    "allowedMembers"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property sharedWithTeams in teams",
                "operationId": "teams.primaryChannel.UpdateSharedWithTeams",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.sharedWithChannelTeamInfo"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.sharedWithChannelTeamInfo"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property sharedWithTeams for teams",
                "operationId": "teams.primaryChannel.DeleteSharedWithTeams",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "sharedWithChannelTeamInfo-id",
                    "in": "path",
                    "description": "The unique identifier of sharedWithChannelTeamInfo",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "sharedWithChannelTeamInfo"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/sharedWithTeams/{sharedWithChannelTeamInfo-id}"
            ]
        },
        "/teams/{team-id}/primaryChannel/sharedWithTeams/{sharedWithChannelTeamInfo-id}/allowedMembers": {
            "description": "Provides operations to manage the allowedMembers property of the microsoft.graph.sharedWithChannelTeamInfo entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List allowedMembers",
                "description": "Get the list of conversationMembers who can access a shared channel. This method does not return the following conversationMembers from the team:\n- Users with `Guest` role\n- Users who are externally authenticated in the tenant",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/sharedwithchannelteaminfo-list-allowedmembers?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.sharedWithTeams.ListAllowedMembers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "displayName",
                                    "displayName desc",
                                    "roles",
                                    "roles desc",
                                    "visibleHistoryStartDateTime",
                                    "visibleHistoryStartDateTime desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "roles",
                                    "visibleHistoryStartDateTime"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "sharedWithChannelTeamInfo-id",
                    "in": "path",
                    "description": "The unique identifier of sharedWithChannelTeamInfo",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "sharedWithChannelTeamInfo"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/sharedWithTeams/{sharedWithChannelTeamInfo-id}/allowedMembers"
            ]
        },
        "/teams/{team-id}/primaryChannel/sharedWithTeams/{sharedWithChannelTeamInfo-id}/allowedMembers/{conversationMember-id}": {
            "description": "Provides operations to manage the allowedMembers property of the microsoft.graph.sharedWithChannelTeamInfo entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get allowedMembers from teams",
                "description": "A collection of team members who have access to the shared channel.",
                "operationId": "teams.primaryChannel.sharedWithTeams.GetAllowedMembers",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "roles",
                                    "visibleHistoryStartDateTime"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "sharedWithChannelTeamInfo-id",
                    "in": "path",
                    "description": "The unique identifier of sharedWithChannelTeamInfo",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "sharedWithChannelTeamInfo"
                },
                {
                    "name": "conversationMember-id",
                    "in": "path",
                    "description": "The unique identifier of conversationMember",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "conversationMember"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/sharedWithTeams/{sharedWithChannelTeamInfo-id}/allowedMembers/{conversationMember-id}"
            ]
        },
        "/teams/{team-id}/primaryChannel/sharedWithTeams/{sharedWithChannelTeamInfo-id}/allowedMembers/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.allowedMembers-2d1d",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "sharedWithChannelTeamInfo-id",
                    "in": "path",
                    "description": "The unique identifier of sharedWithChannelTeamInfo",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "sharedWithChannelTeamInfo"
                }
            ]
        },
        "/teams/{team-id}/primaryChannel/sharedWithTeams/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.sharedWithTeams-9fea",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/primaryChannel/tabs": {
            "description": "Provides operations to manage the tabs property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "List tabs in channel",
                "description": "Retrieve the list of tabs in the specified channel within a team. ",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/channel-list-tabs?view=graph-rest-1.0"
                },
                "operationId": "teams.primaryChannel.ListTabs",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "configuration",
                                    "configuration desc",
                                    "displayName",
                                    "displayName desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "configuration",
                                    "displayName",
                                    "webUrl",
                                    "teamsApp"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "teamsApp"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Create new navigation property to tabs for teams",
                "operationId": "teams.primaryChannel.CreateTabs",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamsTab"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/tabs"
            ]
        },
        "/teams/{team-id}/primaryChannel/tabs/{teamsTab-id}": {
            "description": "Provides operations to manage the tabs property of the microsoft.graph.channel entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get tabs from teams",
                "description": "A collection of all the tabs in the channel. A navigation property.",
                "operationId": "teams.primaryChannel.GetTabs",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "configuration",
                                    "displayName",
                                    "webUrl",
                                    "teamsApp"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "teamsApp"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Update the navigation property tabs in teams",
                "operationId": "teams.primaryChannel.UpdateTabs",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamsTab"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamsTab"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Delete navigation property tabs for teams",
                "operationId": "teams.primaryChannel.DeleteTabs",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamsTab-id",
                    "in": "path",
                    "description": "The unique identifier of teamsTab",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamsTab"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/tabs/{teamsTab-id}"
            ]
        },
        "/teams/{team-id}/primaryChannel/tabs/{teamsTab-id}/teamsApp": {
            "description": "Provides operations to manage the teamsApp property of the microsoft.graph.teamsTab entity.",
            "get": {
                "tags": [
                    "teams.channel"
                ],
                "summary": "Get teamsApp from teams",
                "description": "The application that is linked to the tab. This cannot be changed after tab creation.",
                "operationId": "teams.primaryChannel.tabs.GetTeamsApp",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "distributionMethod",
                                    "externalId",
                                    "appDefinitions"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "appDefinitions"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamsTab-id",
                    "in": "path",
                    "description": "The unique identifier of teamsTab",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamsTab"
                }
            ],
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/{channel-id}/tabs/{teamsTab-id}/teamsApp"
            ]
        },
        "/teams/{team-id}/primaryChannel/tabs/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.tabs-8cf3",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule": {
            "description": "Provides operations to manage the schedule property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Get schedule",
                "description": "Retrieve the properties and relationships of a schedule object. The schedule creation process conforms to the One API guideline for resource based long running operations (RELO).\nWhen clients use the PUT method, if the schedule is provisioned, the operation updates the schedule; otherwise, the operation starts the schedule provisioning process in the background. During schedule provisioning, clients can use the GET method to get the schedule and look at the `provisionStatus` property for the current state of the provisioning. If the provisioning failed, clients can get additional information from the `provisionStatusCode` property. Clients can also inspect the configuration of the schedule.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/schedule-get?view=graph-rest-1.0"
                },
                "operationId": "teams.GetSchedule",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "enabled",
                                    "offerShiftRequestsEnabled",
                                    "openShiftsEnabled",
                                    "provisionStatus",
                                    "provisionStatusCode",
                                    "swapShiftsRequestsEnabled",
                                    "timeClockEnabled",
                                    "timeOffRequestsEnabled",
                                    "timeZone",
                                    "workforceIntegrationIds",
                                    "offerShiftRequests",
                                    "openShiftChangeRequests",
                                    "openShifts",
                                    "schedulingGroups",
                                    "shifts",
                                    "swapShiftsChangeRequests",
                                    "timeOffReasons",
                                    "timeOffRequests",
                                    "timesOff"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "offerShiftRequests",
                                    "openShiftChangeRequests",
                                    "openShifts",
                                    "schedulingGroups",
                                    "shifts",
                                    "swapShiftsChangeRequests",
                                    "timeOffReasons",
                                    "timeOffRequests",
                                    "timesOff"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "put": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Update the navigation property schedule in teams",
                "operationId": "teams.UpdateSchedule",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.schedule"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Delete navigation property schedule for teams",
                "operationId": "teams.DeleteSchedule",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/share": {
            "description": "Provides operations to call the share method.",
            "post": {
                "tags": [
                    "teams.Actions"
                ],
                "summary": "Invoke action share",
                "description": "Share a schedule time range with schedule members.\nMake the collections of shift, openshift and timeOff items in the specified time range of the schedule viewable by the specified team members, including employees and managers.\nEach shift, openshift and timeOff instance in a schedule supports a draft version and a shared version of the item. The draft version is viewable by only managers, and the shared version is viewable by employees and managers. For each shift, openshift and timeOff instance in the specified time range, the share action updates the shared version from the draft version, so that in addition to managers, employees can also view the most current information about the item. The **notifyTeam** parameter further specifies which employees can view the item.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/schedule-share?view=graph-rest-1.0"
                },
                "operationId": "teams.team.schedule.share",
                "requestBody": {
                    "description": "Action parameters",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "notifyTeam": {
                                        "type": "boolean",
                                        "default": false,
                                        "nullable": true
                                    },
                                    "startDateTime": {
                                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    },
                                    "endDateTime": {
                                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "action"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/offerShiftRequests": {
            "description": "Provides operations to manage the offerShiftRequests property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "List offerShiftRequest",
                "description": "Retrieve the properties and relationships of all offerShiftRequest objects in a team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/offershiftrequest-list?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.ListOfferShiftRequests",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "lastModifiedBy",
                                    "lastModifiedBy desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "assignedTo",
                                    "assignedTo desc",
                                    "managerActionDateTime",
                                    "managerActionDateTime desc",
                                    "managerActionMessage",
                                    "managerActionMessage desc",
                                    "managerUserId",
                                    "managerUserId desc",
                                    "senderDateTime",
                                    "senderDateTime desc",
                                    "senderMessage",
                                    "senderMessage desc",
                                    "senderUserId",
                                    "senderUserId desc",
                                    "state",
                                    "state desc",
                                    "recipientActionDateTime",
                                    "recipientActionDateTime desc",
                                    "recipientActionMessage",
                                    "recipientActionMessage desc",
                                    "recipientUserId",
                                    "recipientUserId desc",
                                    "senderShiftId",
                                    "senderShiftId desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "assignedTo",
                                    "managerActionDateTime",
                                    "managerActionMessage",
                                    "managerUserId",
                                    "senderDateTime",
                                    "senderMessage",
                                    "senderUserId",
                                    "state",
                                    "recipientActionDateTime",
                                    "recipientActionMessage",
                                    "recipientUserId",
                                    "senderShiftId"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Create new navigation property to offerShiftRequests for teams",
                "operationId": "teams.schedule.CreateOfferShiftRequests",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.offerShiftRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/offerShiftRequests/{offerShiftRequest-id}": {
            "description": "Provides operations to manage the offerShiftRequests property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Get offerShiftRequests from teams",
                "operationId": "teams.schedule.GetOfferShiftRequests",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "assignedTo",
                                    "managerActionDateTime",
                                    "managerActionMessage",
                                    "managerUserId",
                                    "senderDateTime",
                                    "senderMessage",
                                    "senderUserId",
                                    "state",
                                    "recipientActionDateTime",
                                    "recipientActionMessage",
                                    "recipientUserId",
                                    "senderShiftId"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Update the navigation property offerShiftRequests in teams",
                "operationId": "teams.schedule.UpdateOfferShiftRequests",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.offerShiftRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.offerShiftRequest"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Delete navigation property offerShiftRequests for teams",
                "operationId": "teams.schedule.DeleteOfferShiftRequests",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "offerShiftRequest-id",
                    "in": "path",
                    "description": "The unique identifier of offerShiftRequest",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "offerShiftRequest"
                }
            ]
        },
        "/teams/{team-id}/schedule/offerShiftRequests/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.offerShiftRequests-9c52",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/openShiftChangeRequests": {
            "description": "Provides operations to manage the openShiftChangeRequests property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "List openShiftChangeRequests",
                "description": "Retrieve a list of openShiftChangeRequest objects in a team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/openshiftchangerequest-list?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.ListOpenShiftChangeRequests",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "lastModifiedBy",
                                    "lastModifiedBy desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "assignedTo",
                                    "assignedTo desc",
                                    "managerActionDateTime",
                                    "managerActionDateTime desc",
                                    "managerActionMessage",
                                    "managerActionMessage desc",
                                    "managerUserId",
                                    "managerUserId desc",
                                    "senderDateTime",
                                    "senderDateTime desc",
                                    "senderMessage",
                                    "senderMessage desc",
                                    "senderUserId",
                                    "senderUserId desc",
                                    "state",
                                    "state desc",
                                    "openShiftId",
                                    "openShiftId desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "assignedTo",
                                    "managerActionDateTime",
                                    "managerActionMessage",
                                    "managerUserId",
                                    "senderDateTime",
                                    "senderMessage",
                                    "senderUserId",
                                    "state",
                                    "openShiftId"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Create openShiftChangeRequest",
                "description": "Create instance of an openShiftChangeRequest object.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/openshiftchangerequest-post?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.CreateOpenShiftChangeRequests",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.openShiftChangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/openShiftChangeRequests/{openShiftChangeRequest-id}": {
            "description": "Provides operations to manage the openShiftChangeRequests property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Get openShiftChangeRequests from teams",
                "operationId": "teams.schedule.GetOpenShiftChangeRequests",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "assignedTo",
                                    "managerActionDateTime",
                                    "managerActionMessage",
                                    "managerUserId",
                                    "senderDateTime",
                                    "senderMessage",
                                    "senderUserId",
                                    "state",
                                    "openShiftId"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Update the navigation property openShiftChangeRequests in teams",
                "operationId": "teams.schedule.UpdateOpenShiftChangeRequests",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.openShiftChangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.openShiftChangeRequest"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Delete navigation property openShiftChangeRequests for teams",
                "operationId": "teams.schedule.DeleteOpenShiftChangeRequests",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "openShiftChangeRequest-id",
                    "in": "path",
                    "description": "The unique identifier of openShiftChangeRequest",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "openShiftChangeRequest"
                }
            ]
        },
        "/teams/{team-id}/schedule/openShiftChangeRequests/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.openShiftChangeRequests-179b",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/openShifts": {
            "description": "Provides operations to manage the openShifts property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "List openShifts",
                "description": "List openShift objects in a team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/openshift-list?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.ListOpenShifts",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "lastModifiedBy",
                                    "lastModifiedBy desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "draftOpenShift",
                                    "draftOpenShift desc",
                                    "schedulingGroupId",
                                    "schedulingGroupId desc",
                                    "sharedOpenShift",
                                    "sharedOpenShift desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "draftOpenShift",
                                    "schedulingGroupId",
                                    "sharedOpenShift"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Create new navigation property to openShifts for teams",
                "operationId": "teams.schedule.CreateOpenShifts",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.openShift"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/openShifts/{openShift-id}": {
            "description": "Provides operations to manage the openShifts property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Get openShifts from teams",
                "operationId": "teams.schedule.GetOpenShifts",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "draftOpenShift",
                                    "schedulingGroupId",
                                    "sharedOpenShift"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Update the navigation property openShifts in teams",
                "operationId": "teams.schedule.UpdateOpenShifts",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.openShift"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.openShift"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Delete navigation property openShifts for teams",
                "operationId": "teams.schedule.DeleteOpenShifts",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "openShift-id",
                    "in": "path",
                    "description": "The unique identifier of openShift",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "openShift"
                }
            ]
        },
        "/teams/{team-id}/schedule/openShifts/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.openShifts-bdbd",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/schedulingGroups": {
            "description": "Provides operations to manage the schedulingGroups property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "List scheduleGroups",
                "description": "Get the list of schedulingGroups in this schedule.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/schedule-list-schedulinggroups?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.ListSchedulingGroups",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "lastModifiedBy",
                                    "lastModifiedBy desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "displayName",
                                    "displayName desc",
                                    "isActive",
                                    "isActive desc",
                                    "userIds",
                                    "userIds desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "displayName",
                                    "isActive",
                                    "userIds"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Create schedulingGroup",
                "description": "Create a new schedulingGroup.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/schedule-post-schedulinggroups?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.CreateSchedulingGroups",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.schedulingGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/schedulingGroups/{schedulingGroup-id}": {
            "description": "Provides operations to manage the schedulingGroups property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Get schedulingGroups from teams",
                "description": "The logical grouping of users in the schedule (usually by role).",
                "operationId": "teams.schedule.GetSchedulingGroups",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "displayName",
                                    "isActive",
                                    "userIds"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Update the navigation property schedulingGroups in teams",
                "operationId": "teams.schedule.UpdateSchedulingGroups",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.schedulingGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.schedulingGroup"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Delete navigation property schedulingGroups for teams",
                "operationId": "teams.schedule.DeleteSchedulingGroups",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "schedulingGroup-id",
                    "in": "path",
                    "description": "The unique identifier of schedulingGroup",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "schedulingGroup"
                }
            ]
        },
        "/teams/{team-id}/schedule/schedulingGroups/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.schedulingGroups-256b",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/shifts": {
            "description": "Provides operations to manage the shifts property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "List shifts",
                "description": "Get the list of shift instances in a schedule.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/schedule-list-shifts?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.ListShifts",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "lastModifiedBy",
                                    "lastModifiedBy desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "draftShift",
                                    "draftShift desc",
                                    "schedulingGroupId",
                                    "schedulingGroupId desc",
                                    "sharedShift",
                                    "sharedShift desc",
                                    "userId",
                                    "userId desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "draftShift",
                                    "schedulingGroupId",
                                    "sharedShift",
                                    "userId"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Create shift",
                "description": "Create a new shift instance in a schedule. The duration of a shift cannot be less than 1 minute or longer than 24 hours.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/schedule-post-shifts?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.CreateShifts",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.shift"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/shifts/{shift-id}": {
            "description": "Provides operations to manage the shifts property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Get shifts from teams",
                "description": "The shifts in the schedule.",
                "operationId": "teams.schedule.GetShifts",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "draftShift",
                                    "schedulingGroupId",
                                    "sharedShift",
                                    "userId"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Update the navigation property shifts in teams",
                "operationId": "teams.schedule.UpdateShifts",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.shift"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.shift"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Delete navigation property shifts for teams",
                "operationId": "teams.schedule.DeleteShifts",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "shift-id",
                    "in": "path",
                    "description": "The unique identifier of shift",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "shift"
                }
            ]
        },
        "/teams/{team-id}/schedule/shifts/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.shifts-97aa",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/swapShiftsChangeRequests": {
            "description": "Provides operations to manage the swapShiftsChangeRequests property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "List swapShiftsChangeRequest",
                "description": "Retrieve a list of swapShiftsChangeRequest objects in the team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/swapshiftschangerequest-list?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.ListSwapShiftsChangeRequests",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "lastModifiedBy",
                                    "lastModifiedBy desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "assignedTo",
                                    "assignedTo desc",
                                    "managerActionDateTime",
                                    "managerActionDateTime desc",
                                    "managerActionMessage",
                                    "managerActionMessage desc",
                                    "managerUserId",
                                    "managerUserId desc",
                                    "senderDateTime",
                                    "senderDateTime desc",
                                    "senderMessage",
                                    "senderMessage desc",
                                    "senderUserId",
                                    "senderUserId desc",
                                    "state",
                                    "state desc",
                                    "recipientActionDateTime",
                                    "recipientActionDateTime desc",
                                    "recipientActionMessage",
                                    "recipientActionMessage desc",
                                    "recipientUserId",
                                    "recipientUserId desc",
                                    "senderShiftId",
                                    "senderShiftId desc",
                                    "recipientShiftId",
                                    "recipientShiftId desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "assignedTo",
                                    "managerActionDateTime",
                                    "managerActionMessage",
                                    "managerUserId",
                                    "senderDateTime",
                                    "senderMessage",
                                    "senderUserId",
                                    "state",
                                    "recipientActionDateTime",
                                    "recipientActionMessage",
                                    "recipientUserId",
                                    "senderShiftId",
                                    "recipientShiftId"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Create swapShiftsChangeRequest",
                "description": "Create an instance of a swapShiftsChangeRequest object.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/swapshiftschangerequest-post?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.CreateSwapShiftsChangeRequests",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.swapShiftsChangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/swapShiftsChangeRequests/{swapShiftsChangeRequest-id}": {
            "description": "Provides operations to manage the swapShiftsChangeRequests property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Get swapShiftsChangeRequests from teams",
                "operationId": "teams.schedule.GetSwapShiftsChangeRequests",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "assignedTo",
                                    "managerActionDateTime",
                                    "managerActionMessage",
                                    "managerUserId",
                                    "senderDateTime",
                                    "senderMessage",
                                    "senderUserId",
                                    "state",
                                    "recipientActionDateTime",
                                    "recipientActionMessage",
                                    "recipientUserId",
                                    "senderShiftId",
                                    "recipientShiftId"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Update the navigation property swapShiftsChangeRequests in teams",
                "operationId": "teams.schedule.UpdateSwapShiftsChangeRequests",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.swapShiftsChangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.swapShiftsChangeRequest"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Delete navigation property swapShiftsChangeRequests for teams",
                "operationId": "teams.schedule.DeleteSwapShiftsChangeRequests",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "swapShiftsChangeRequest-id",
                    "in": "path",
                    "description": "The unique identifier of swapShiftsChangeRequest",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "swapShiftsChangeRequest"
                }
            ]
        },
        "/teams/{team-id}/schedule/swapShiftsChangeRequests/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.swapShiftsChangeRequests-9390",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/timeOffReasons": {
            "description": "Provides operations to manage the timeOffReasons property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "List timeOffReasons",
                "description": "Get the list of timeOffReasons in a schedule.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/schedule-list-timeoffreasons?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.ListTimeOffReasons",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "lastModifiedBy",
                                    "lastModifiedBy desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "displayName",
                                    "displayName desc",
                                    "iconType",
                                    "iconType desc",
                                    "isActive",
                                    "isActive desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "displayName",
                                    "iconType",
                                    "isActive"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Create timeOffReason",
                "description": "Create a new timeOffReason.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/schedule-post-timeoffreasons?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.CreateTimeOffReasons",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.timeOffReason"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/timeOffReasons/{timeOffReason-id}": {
            "description": "Provides operations to manage the timeOffReasons property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Get timeOffReasons from teams",
                "description": "The set of reasons for a time off in the schedule.",
                "operationId": "teams.schedule.GetTimeOffReasons",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "displayName",
                                    "iconType",
                                    "isActive"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Update the navigation property timeOffReasons in teams",
                "operationId": "teams.schedule.UpdateTimeOffReasons",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.timeOffReason"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.timeOffReason"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Delete navigation property timeOffReasons for teams",
                "operationId": "teams.schedule.DeleteTimeOffReasons",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "timeOffReason-id",
                    "in": "path",
                    "description": "The unique identifier of timeOffReason",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "timeOffReason"
                }
            ]
        },
        "/teams/{team-id}/schedule/timeOffReasons/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.timeOffReasons-4024",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/timeOffRequests": {
            "description": "Provides operations to manage the timeOffRequests property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "List timeOffRequest",
                "description": "Retrieve a list of timeOffRequest objects in the team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/timeoffrequest-list?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.ListTimeOffRequests",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "lastModifiedBy",
                                    "lastModifiedBy desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "assignedTo",
                                    "assignedTo desc",
                                    "managerActionDateTime",
                                    "managerActionDateTime desc",
                                    "managerActionMessage",
                                    "managerActionMessage desc",
                                    "managerUserId",
                                    "managerUserId desc",
                                    "senderDateTime",
                                    "senderDateTime desc",
                                    "senderMessage",
                                    "senderMessage desc",
                                    "senderUserId",
                                    "senderUserId desc",
                                    "state",
                                    "state desc",
                                    "endDateTime",
                                    "endDateTime desc",
                                    "startDateTime",
                                    "startDateTime desc",
                                    "timeOffReasonId",
                                    "timeOffReasonId desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "assignedTo",
                                    "managerActionDateTime",
                                    "managerActionMessage",
                                    "managerUserId",
                                    "senderDateTime",
                                    "senderMessage",
                                    "senderUserId",
                                    "state",
                                    "endDateTime",
                                    "startDateTime",
                                    "timeOffReasonId"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Create new navigation property to timeOffRequests for teams",
                "operationId": "teams.schedule.CreateTimeOffRequests",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.timeOffRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/timeOffRequests/{timeOffRequest-id}": {
            "description": "Provides operations to manage the timeOffRequests property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Get timeOffRequests from teams",
                "operationId": "teams.schedule.GetTimeOffRequests",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "assignedTo",
                                    "managerActionDateTime",
                                    "managerActionMessage",
                                    "managerUserId",
                                    "senderDateTime",
                                    "senderMessage",
                                    "senderUserId",
                                    "state",
                                    "endDateTime",
                                    "startDateTime",
                                    "timeOffReasonId"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Update the navigation property timeOffRequests in teams",
                "operationId": "teams.schedule.UpdateTimeOffRequests",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.timeOffRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.timeOffRequest"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Delete navigation property timeOffRequests for teams",
                "operationId": "teams.schedule.DeleteTimeOffRequests",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "timeOffRequest-id",
                    "in": "path",
                    "description": "The unique identifier of timeOffRequest",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "timeOffRequest"
                }
            ]
        },
        "/teams/{team-id}/schedule/timeOffRequests/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.timeOffRequests-9411",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/timesOff": {
            "description": "Provides operations to manage the timesOff property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "List timesOff",
                "description": "Get the list of timeOff instances in a schedule.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/schedule-list-timesoff?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.ListTimesOff",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "lastModifiedBy",
                                    "lastModifiedBy desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "draftTimeOff",
                                    "draftTimeOff desc",
                                    "sharedTimeOff",
                                    "sharedTimeOff desc",
                                    "userId",
                                    "userId desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "draftTimeOff",
                                    "sharedTimeOff",
                                    "userId"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Create timeOff",
                "description": "Create a new timeOff instance in a schedule.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/schedule-post-timesoff?view=graph-rest-1.0"
                },
                "operationId": "teams.schedule.CreateTimesOff",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.timeOff"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/schedule/timesOff/{timeOff-id}": {
            "description": "Provides operations to manage the timesOff property of the microsoft.graph.schedule entity.",
            "get": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Get timesOff from teams",
                "description": "The instances of times off in the schedule.",
                "operationId": "teams.schedule.GetTimesOff",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "createdDateTime",
                                    "lastModifiedBy",
                                    "lastModifiedDateTime",
                                    "draftTimeOff",
                                    "sharedTimeOff",
                                    "userId"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Update the navigation property timesOff in teams",
                "operationId": "teams.schedule.UpdateTimesOff",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.timeOff"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.timeOff"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.schedule"
                ],
                "summary": "Delete navigation property timesOff for teams",
                "operationId": "teams.schedule.DeleteTimesOff",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "timeOff-id",
                    "in": "path",
                    "description": "The unique identifier of timeOff",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "timeOff"
                }
            ]
        },
        "/teams/{team-id}/schedule/timesOff/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.timesOff-16b4",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/tags": {
            "description": "Provides operations to manage the tags property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.teamworkTag"
                ],
                "summary": "List teamworkTags",
                "description": "Get a list of the tag objects and their properties.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/teamworktag-list?view=graph-rest-1.0"
                },
                "operationId": "teams.ListTags",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "description",
                                    "description desc",
                                    "displayName",
                                    "displayName desc",
                                    "memberCount",
                                    "memberCount desc",
                                    "tagType",
                                    "tagType desc",
                                    "teamId",
                                    "teamId desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "description",
                                    "displayName",
                                    "memberCount",
                                    "tagType",
                                    "teamId",
                                    "members"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "members"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.teamworkTag"
                ],
                "summary": "Create teamworkTag",
                "description": "Create a standard tag for members in a team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/teamworktag-post?view=graph-rest-1.0"
                },
                "operationId": "teams.CreateTags",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamworkTag"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/tags/{teamworkTag-id}": {
            "description": "Provides operations to manage the tags property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.teamworkTag"
                ],
                "summary": "Get tags from teams",
                "description": "The tags associated with the team.",
                "operationId": "teams.GetTags",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "description",
                                    "displayName",
                                    "memberCount",
                                    "tagType",
                                    "teamId",
                                    "members"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*",
                                    "members"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.teamworkTag"
                ],
                "summary": "Update the navigation property tags in teams",
                "operationId": "teams.UpdateTags",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamworkTag"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamworkTag"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.teamworkTag"
                ],
                "summary": "Delete navigation property tags for teams",
                "operationId": "teams.DeleteTags",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamworkTag-id",
                    "in": "path",
                    "description": "The unique identifier of teamworkTag",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamworkTag"
                }
            ]
        },
        "/teams/{team-id}/tags/{teamworkTag-id}/members": {
            "description": "Provides operations to manage the members property of the microsoft.graph.teamworkTag entity.",
            "get": {
                "tags": [
                    "teams.teamworkTag"
                ],
                "summary": "List members in a teamworkTag",
                "description": "Get a list of the members of a standard tag in a team and their properties.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/teamworktagmember-list?view=graph-rest-1.0"
                },
                "operationId": "teams.tags.ListMembers",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "displayName",
                                    "displayName desc",
                                    "tenantId",
                                    "tenantId desc",
                                    "userId",
                                    "userId desc"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "tenantId",
                                    "userId"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                },
                "x-ms-docs-operation-type": "operation"
            },
            "post": {
                "tags": [
                    "teams.teamworkTag"
                ],
                "summary": "Create teamworkTagMember",
                "description": "Create a new teamworkTagMember object in a team.",
                "externalDocs": {
                    "description": "Find more info here",
                    "url": "https://docs.microsoft.com/graph/api/teamworktagmember-post?view=graph-rest-1.0"
                },
                "operationId": "teams.tags.CreateMembers",
                "requestBody": {
                    "description": "New navigation property",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamworkTagMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamworkTag-id",
                    "in": "path",
                    "description": "The unique identifier of teamworkTag",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamworkTag"
                }
            ]
        },
        "/teams/{team-id}/tags/{teamworkTag-id}/members/{teamworkTagMember-id}": {
            "description": "Provides operations to manage the members property of the microsoft.graph.teamworkTag entity.",
            "get": {
                "tags": [
                    "teams.teamworkTag"
                ],
                "summary": "Get members from teams",
                "description": "Users assigned to the tag.",
                "operationId": "teams.tags.GetMembers",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "displayName",
                                    "tenantId",
                                    "userId"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "patch": {
                "tags": [
                    "teams.teamworkTag"
                ],
                "summary": "Update the navigation property members in teams",
                "operationId": "teams.tags.UpdateMembers",
                "requestBody": {
                    "description": "New navigation property values",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/microsoft.graph.teamworkTagMember"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "2XX": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamworkTagMember"
                                }
                            }
                        }
                    },
                    "4XX": {
                        "$ref": "#/components/responses/error"
                    },
                    "5XX": {
                        "$ref": "#/components/responses/error"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "delete": {
                "tags": [
                    "teams.teamworkTag"
                ],
                "summary": "Delete navigation property members for teams",
                "operationId": "teams.tags.DeleteMembers",
                "parameters": [
                    {
                        "name": "If-Match",
                        "in": "header",
                        "description": "ETag",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamworkTag-id",
                    "in": "path",
                    "description": "The unique identifier of teamworkTag",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamworkTag"
                },
                {
                    "name": "teamworkTagMember-id",
                    "in": "path",
                    "description": "The unique identifier of teamworkTagMember",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamworkTagMember"
                }
            ]
        },
        "/teams/{team-id}/tags/{teamworkTag-id}/members/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.members-cbc7",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                },
                {
                    "name": "teamworkTag-id",
                    "in": "path",
                    "description": "The unique identifier of teamworkTag",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "teamworkTag"
                }
            ]
        },
        "/teams/{team-id}/tags/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.tags-db00",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/{team-id}/template": {
            "description": "Provides operations to manage the template property of the microsoft.graph.team entity.",
            "get": {
                "tags": [
                    "teams.teamsTemplate"
                ],
                "summary": "Get template from teams",
                "description": "The template this team was created from. See available templates.",
                "operationId": "teams.GetTemplate",
                "parameters": [
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$expand",
                        "in": "query",
                        "description": "Expand related entities",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "*"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "operation"
            },
            "parameters": [
                {
                    "name": "team-id",
                    "in": "path",
                    "description": "The unique identifier of team",
                    "required": true,
                    "schema": {
                        "type": "string"
                    },
                    "x-ms-docs-key-type": "team"
                }
            ]
        },
        "/teams/$count": {
            "description": "Provides operations to count the resources in the collection.",
            "get": {
                "summary": "Get the number of the resource",
                "operationId": "Get.Count.teams-ff25",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                }
            }
        },
        "/teams/getAllMessages()": {
            "description": "Provides operations to call the getAllMessages method.",
            "get": {
                "tags": [
                    "teams.Functions"
                ],
                "summary": "Invoke function getAllMessages",
                "operationId": "teams.getAllMessages",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/top"
                    },
                    {
                        "$ref": "#/components/parameters/skip"
                    },
                    {
                        "$ref": "#/components/parameters/search"
                    },
                    {
                        "$ref": "#/components/parameters/filter"
                    },
                    {
                        "$ref": "#/components/parameters/count"
                    },
                    {
                        "name": "$select",
                        "in": "query",
                        "description": "Select properties to be returned",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "attachments",
                                    "body",
                                    "channelIdentity",
                                    "chatId",
                                    "createdDateTime",
                                    "deletedDateTime",
                                    "etag",
                                    "eventDetail",
                                    "from",
                                    "importance",
                                    "lastEditedDateTime",
                                    "lastModifiedDateTime",
                                    "locale",
                                    "mentions",
                                    "messageType",
                                    "policyViolation",
                                    "reactions",
                                    "replyToId",
                                    "subject",
                                    "summary",
                                    "webUrl",
                                    "hostedContents",
                                    "replies"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "$orderby",
                        "in": "query",
                        "description": "Order items by property values",
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "uniqueItems": true,
                            "type": "array",
                            "items": {
                                "enum": [
                                    "id",
                                    "id desc",
                                    "attachments",
                                    "attachments desc",
                                    "body",
                                    "body desc",
                                    "channelIdentity",
                                    "channelIdentity desc",
                                    "chatId",
                                    "chatId desc",
                                    "createdDateTime",
                                    "createdDateTime desc",
                                    "deletedDateTime",
                                    "deletedDateTime desc",
                                    "etag",
                                    "etag desc",
                                    "eventDetail",
                                    "eventDetail desc",
                                    "from",
                                    "from desc",
                                    "importance",
                                    "importance desc",
                                    "lastEditedDateTime",
                                    "lastEditedDateTime desc",
                                    "lastModifiedDateTime",
                                    "lastModifiedDateTime desc",
                                    "locale",
                                    "locale desc",
                                    "mentions",
                                    "mentions desc",
                                    "messageType",
                                    "messageType desc",
                                    "policyViolation",
                                    "policyViolation desc",
                                    "reactions",
                                    "reactions desc",
                                    "replyToId",
                                    "replyToId desc",
                                    "subject",
                                    "subject desc",
                                    "summary",
                                    "summary desc",
                                    "webUrl",
                                    "webUrl desc"
                                ],
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "this is a dummy response schema"
                    }
                },
                "x-ms-docs-operation-type": "function",
                "x-ms-pageable": {
                    "nextLinkName": "@odata.nextLink",
                    "operationName": "listMore"
                }
            },
            "x-ms-docs-grouped-path": [
                "/teams/{team-id}/channels/getAllMessages()"
            ]
        }
    },
    "components": {
        "schemas": {
            "microsoft.graph.entity": {
                "title": "entity",
                "required": [],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique idenfier for an entity. Read-only."
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "@odata.type",
                    "mapping": {
                        "#microsoft.graph.auditLogRoot": "#/components/schemas/microsoft.graph.auditLogRoot",
                        "#microsoft.graph.directoryAudit": "#/components/schemas/microsoft.graph.directoryAudit",
                        "#microsoft.graph.provisioningObjectSummary": "#/components/schemas/microsoft.graph.provisioningObjectSummary",
                        "#microsoft.graph.signIn": "#/components/schemas/microsoft.graph.signIn",
                        "#microsoft.graph.directoryObject": "#/components/schemas/microsoft.graph.directoryObject",
                        "#microsoft.graph.user": "#/components/schemas/microsoft.graph.user",
                        "#microsoft.graph.appRoleAssignment": "#/components/schemas/microsoft.graph.appRoleAssignment",
                        "#microsoft.graph.application": "#/components/schemas/microsoft.graph.application",
                        "#microsoft.graph.servicePrincipal": "#/components/schemas/microsoft.graph.servicePrincipal",
                        "#microsoft.graph.policyBase": "#/components/schemas/microsoft.graph.policyBase",
                        "#microsoft.graph.appManagementPolicy": "#/components/schemas/microsoft.graph.appManagementPolicy",
                        "#microsoft.graph.stsPolicy": "#/components/schemas/microsoft.graph.stsPolicy",
                        "#microsoft.graph.homeRealmDiscoveryPolicy": "#/components/schemas/microsoft.graph.homeRealmDiscoveryPolicy",
                        "#microsoft.graph.tokenIssuancePolicy": "#/components/schemas/microsoft.graph.tokenIssuancePolicy",
                        "#microsoft.graph.tokenLifetimePolicy": "#/components/schemas/microsoft.graph.tokenLifetimePolicy",
                        "#microsoft.graph.claimsMappingPolicy": "#/components/schemas/microsoft.graph.claimsMappingPolicy",
                        "#microsoft.graph.activityBasedTimeoutPolicy": "#/components/schemas/microsoft.graph.activityBasedTimeoutPolicy",
                        "#microsoft.graph.authorizationPolicy": "#/components/schemas/microsoft.graph.authorizationPolicy",
                        "#microsoft.graph.crossTenantAccessPolicy": "#/components/schemas/microsoft.graph.crossTenantAccessPolicy",
                        "#microsoft.graph.tenantAppManagementPolicy": "#/components/schemas/microsoft.graph.tenantAppManagementPolicy",
                        "#microsoft.graph.permissionGrantPolicy": "#/components/schemas/microsoft.graph.permissionGrantPolicy",
                        "#microsoft.graph.identitySecurityDefaultsEnforcementPolicy": "#/components/schemas/microsoft.graph.identitySecurityDefaultsEnforcementPolicy",
                        "#microsoft.graph.extensionProperty": "#/components/schemas/microsoft.graph.extensionProperty",
                        "#microsoft.graph.endpoint": "#/components/schemas/microsoft.graph.endpoint",
                        "#microsoft.graph.group": "#/components/schemas/microsoft.graph.group",
                        "#microsoft.graph.resourceSpecificPermissionGrant": "#/components/schemas/microsoft.graph.resourceSpecificPermissionGrant",
                        "#microsoft.graph.administrativeUnit": "#/components/schemas/microsoft.graph.administrativeUnit",
                        "#microsoft.graph.contract": "#/components/schemas/microsoft.graph.contract",
                        "#microsoft.graph.device": "#/components/schemas/microsoft.graph.device",
                        "#microsoft.graph.directoryObjectPartnerReference": "#/components/schemas/microsoft.graph.directoryObjectPartnerReference",
                        "#microsoft.graph.directoryRole": "#/components/schemas/microsoft.graph.directoryRole",
                        "#microsoft.graph.directoryRoleTemplate": "#/components/schemas/microsoft.graph.directoryRoleTemplate",
                        "#microsoft.graph.groupSettingTemplate": "#/components/schemas/microsoft.graph.groupSettingTemplate",
                        "#microsoft.graph.organization": "#/components/schemas/microsoft.graph.organization",
                        "#microsoft.graph.orgContact": "#/components/schemas/microsoft.graph.orgContact",
                        "#microsoft.graph.licenseDetails": "#/components/schemas/microsoft.graph.licenseDetails",
                        "#microsoft.graph.oAuth2PermissionGrant": "#/components/schemas/microsoft.graph.oAuth2PermissionGrant",
                        "#microsoft.graph.scopedRoleMembership": "#/components/schemas/microsoft.graph.scopedRoleMembership",
                        "#microsoft.graph.calendar": "#/components/schemas/microsoft.graph.calendar",
                        "#microsoft.graph.calendarGroup": "#/components/schemas/microsoft.graph.calendarGroup",
                        "#microsoft.graph.outlookItem": "#/components/schemas/microsoft.graph.outlookItem",
                        "#microsoft.graph.event": "#/components/schemas/microsoft.graph.event",
                        "#microsoft.graph.contact": "#/components/schemas/microsoft.graph.contact",
                        "#microsoft.graph.message": "#/components/schemas/microsoft.graph.message",
                        "#microsoft.graph.calendarSharingMessage": "#/components/schemas/microsoft.graph.calendarSharingMessage",
                        "#microsoft.graph.eventMessage": "#/components/schemas/microsoft.graph.eventMessage",
                        "#microsoft.graph.eventMessageRequest": "#/components/schemas/microsoft.graph.eventMessageRequest",
                        "#microsoft.graph.eventMessageResponse": "#/components/schemas/microsoft.graph.eventMessageResponse",
                        "#microsoft.graph.post": "#/components/schemas/microsoft.graph.post",
                        "#microsoft.graph.contactFolder": "#/components/schemas/microsoft.graph.contactFolder",
                        "#microsoft.graph.inferenceClassification": "#/components/schemas/microsoft.graph.inferenceClassification",
                        "#microsoft.graph.mailFolder": "#/components/schemas/microsoft.graph.mailFolder",
                        "#microsoft.graph.mailSearchFolder": "#/components/schemas/microsoft.graph.mailSearchFolder",
                        "#microsoft.graph.outlookUser": "#/components/schemas/microsoft.graph.outlookUser",
                        "#microsoft.graph.person": "#/components/schemas/microsoft.graph.person",
                        "#microsoft.graph.baseItem": "#/components/schemas/microsoft.graph.baseItem",
                        "#microsoft.graph.drive": "#/components/schemas/microsoft.graph.drive",
                        "#microsoft.graph.site": "#/components/schemas/microsoft.graph.site",
                        "#microsoft.graph.list": "#/components/schemas/microsoft.graph.list",
                        "#microsoft.graph.driveItem": "#/components/schemas/microsoft.graph.driveItem",
                        "#microsoft.graph.listItem": "#/components/schemas/microsoft.graph.listItem",
                        "#microsoft.graph.sharedDriveItem": "#/components/schemas/microsoft.graph.sharedDriveItem",
                        "#microsoft.graph.extension": "#/components/schemas/microsoft.graph.extension",
                        "#microsoft.graph.openTypeExtension": "#/components/schemas/microsoft.graph.openTypeExtension",
                        "#microsoft.graph.agreementAcceptance": "#/components/schemas/microsoft.graph.agreementAcceptance",
                        "#microsoft.graph.managedDevice": "#/components/schemas/microsoft.graph.managedDevice",
                        "#microsoft.graph.managedAppRegistration": "#/components/schemas/microsoft.graph.managedAppRegistration",
                        "#microsoft.graph.androidManagedAppRegistration": "#/components/schemas/microsoft.graph.androidManagedAppRegistration",
                        "#microsoft.graph.iosManagedAppRegistration": "#/components/schemas/microsoft.graph.iosManagedAppRegistration",
                        "#microsoft.graph.deviceManagementTroubleshootingEvent": "#/components/schemas/microsoft.graph.deviceManagementTroubleshootingEvent",
                        "#microsoft.graph.enrollmentTroubleshootingEvent": "#/components/schemas/microsoft.graph.enrollmentTroubleshootingEvent",
                        "#microsoft.graph.plannerUser": "#/components/schemas/microsoft.graph.plannerUser",
                        "#microsoft.graph.officeGraphInsights": "#/components/schemas/microsoft.graph.officeGraphInsights",
                        "#microsoft.graph.userSettings": "#/components/schemas/microsoft.graph.userSettings",
                        "#microsoft.graph.onenote": "#/components/schemas/microsoft.graph.onenote",
                        "#microsoft.graph.profilePhoto": "#/components/schemas/microsoft.graph.profilePhoto",
                        "#microsoft.graph.userActivity": "#/components/schemas/microsoft.graph.userActivity",
                        "#microsoft.graph.onlineMeeting": "#/components/schemas/microsoft.graph.onlineMeeting",
                        "#microsoft.graph.presence": "#/components/schemas/microsoft.graph.presence",
                        "#microsoft.graph.authentication": "#/components/schemas/microsoft.graph.authentication",
                        "#microsoft.graph.chat": "#/components/schemas/microsoft.graph.chat",
                        "#microsoft.graph.team": "#/components/schemas/microsoft.graph.team",
                        "#microsoft.graph.userTeamwork": "#/components/schemas/microsoft.graph.userTeamwork",
                        "#microsoft.graph.todo": "#/components/schemas/microsoft.graph.todo",
                        "#microsoft.graph.invitation": "#/components/schemas/microsoft.graph.invitation",
                        "#microsoft.graph.federatedIdentityCredential": "#/components/schemas/microsoft.graph.federatedIdentityCredential",
                        "#microsoft.graph.applicationTemplate": "#/components/schemas/microsoft.graph.applicationTemplate",
                        "#microsoft.graph.delegatedPermissionClassification": "#/components/schemas/microsoft.graph.delegatedPermissionClassification",
                        "#microsoft.graph.authenticationMethodConfiguration": "#/components/schemas/microsoft.graph.authenticationMethodConfiguration",
                        "#microsoft.graph.emailAuthenticationMethodConfiguration": "#/components/schemas/microsoft.graph.emailAuthenticationMethodConfiguration",
                        "#microsoft.graph.fido2AuthenticationMethodConfiguration": "#/components/schemas/microsoft.graph.fido2AuthenticationMethodConfiguration",
                        "#microsoft.graph.microsoftAuthenticatorAuthenticationMethodConfiguration": "#/components/schemas/microsoft.graph.microsoftAuthenticatorAuthenticationMethodConfiguration",
                        "#microsoft.graph.temporaryAccessPassAuthenticationMethodConfiguration": "#/components/schemas/microsoft.graph.temporaryAccessPassAuthenticationMethodConfiguration",
                        "#microsoft.graph.x509CertificateAuthenticationMethodConfiguration": "#/components/schemas/microsoft.graph.x509CertificateAuthenticationMethodConfiguration",
                        "#microsoft.graph.authenticationMethodsPolicy": "#/components/schemas/microsoft.graph.authenticationMethodsPolicy",
                        "#microsoft.graph.authenticationMethodTarget": "#/components/schemas/microsoft.graph.authenticationMethodTarget",
                        "#microsoft.graph.microsoftAuthenticatorAuthenticationMethodTarget": "#/components/schemas/microsoft.graph.microsoftAuthenticatorAuthenticationMethodTarget",
                        "#microsoft.graph.policyRoot": "#/components/schemas/microsoft.graph.policyRoot",
                        "#microsoft.graph.authenticationFlowsPolicy": "#/components/schemas/microsoft.graph.authenticationFlowsPolicy",
                        "#microsoft.graph.featureRolloutPolicy": "#/components/schemas/microsoft.graph.featureRolloutPolicy",
                        "#microsoft.graph.adminConsentRequestPolicy": "#/components/schemas/microsoft.graph.adminConsentRequestPolicy",
                        "#microsoft.graph.conditionalAccessPolicy": "#/components/schemas/microsoft.graph.conditionalAccessPolicy",
                        "#microsoft.graph.unifiedRoleManagementPolicy": "#/components/schemas/microsoft.graph.unifiedRoleManagementPolicy",
                        "#microsoft.graph.unifiedRoleManagementPolicyAssignment": "#/components/schemas/microsoft.graph.unifiedRoleManagementPolicyAssignment",
                        "#microsoft.graph.bitlocker": "#/components/schemas/microsoft.graph.bitlocker",
                        "#microsoft.graph.bitlockerRecoveryKey": "#/components/schemas/microsoft.graph.bitlockerRecoveryKey",
                        "#microsoft.graph.threatAssessmentRequest": "#/components/schemas/microsoft.graph.threatAssessmentRequest",
                        "#microsoft.graph.emailFileAssessmentRequest": "#/components/schemas/microsoft.graph.emailFileAssessmentRequest",
                        "#microsoft.graph.fileAssessmentRequest": "#/components/schemas/microsoft.graph.fileAssessmentRequest",
                        "#microsoft.graph.mailAssessmentRequest": "#/components/schemas/microsoft.graph.mailAssessmentRequest",
                        "#microsoft.graph.urlAssessmentRequest": "#/components/schemas/microsoft.graph.urlAssessmentRequest",
                        "#microsoft.graph.bookingAppointment": "#/components/schemas/microsoft.graph.bookingAppointment",
                        "#microsoft.graph.bookingBusiness": "#/components/schemas/microsoft.graph.bookingBusiness",
                        "#microsoft.graph.bookingCustomerBase": "#/components/schemas/microsoft.graph.bookingCustomerBase",
                        "#microsoft.graph.bookingCustomer": "#/components/schemas/microsoft.graph.bookingCustomer",
                        "#microsoft.graph.bookingCustomQuestion": "#/components/schemas/microsoft.graph.bookingCustomQuestion",
                        "#microsoft.graph.bookingService": "#/components/schemas/microsoft.graph.bookingService",
                        "#microsoft.graph.bookingStaffMemberBase": "#/components/schemas/microsoft.graph.bookingStaffMemberBase",
                        "#microsoft.graph.bookingStaffMember": "#/components/schemas/microsoft.graph.bookingStaffMember",
                        "#microsoft.graph.bookingCurrency": "#/components/schemas/microsoft.graph.bookingCurrency",
                        "#microsoft.graph.authoredNote": "#/components/schemas/microsoft.graph.authoredNote",
                        "#microsoft.graph.subjectRightsRequest": "#/components/schemas/microsoft.graph.subjectRightsRequest",
                        "#microsoft.graph.channel": "#/components/schemas/microsoft.graph.channel",
                        "#microsoft.graph.teamsAppInstallation": "#/components/schemas/microsoft.graph.teamsAppInstallation",
                        "#microsoft.graph.userScopeTeamsAppInstallation": "#/components/schemas/microsoft.graph.userScopeTeamsAppInstallation",
                        "#microsoft.graph.conversationMember": "#/components/schemas/microsoft.graph.conversationMember",
                        "#microsoft.graph.aadUserConversationMember": "#/components/schemas/microsoft.graph.aadUserConversationMember",
                        "#microsoft.graph.anonymousGuestConversationMember": "#/components/schemas/microsoft.graph.anonymousGuestConversationMember",
                        "#microsoft.graph.azureCommunicationServicesUserConversationMember": "#/components/schemas/microsoft.graph.azureCommunicationServicesUserConversationMember",
                        "#microsoft.graph.microsoftAccountUserConversationMember": "#/components/schemas/microsoft.graph.microsoftAccountUserConversationMember",
                        "#microsoft.graph.skypeForBusinessUserConversationMember": "#/components/schemas/microsoft.graph.skypeForBusinessUserConversationMember",
                        "#microsoft.graph.skypeUserConversationMember": "#/components/schemas/microsoft.graph.skypeUserConversationMember",
                        "#microsoft.graph.teamsAsyncOperation": "#/components/schemas/microsoft.graph.teamsAsyncOperation",
                        "#microsoft.graph.teamworkTag": "#/components/schemas/microsoft.graph.teamworkTag",
                        "#microsoft.graph.teamsTemplate": "#/components/schemas/microsoft.graph.teamsTemplate",
                        "#microsoft.graph.schedule": "#/components/schemas/microsoft.graph.schedule",
                        "#microsoft.graph.groupSetting": "#/components/schemas/microsoft.graph.groupSetting",
                        "#microsoft.graph.conversation": "#/components/schemas/microsoft.graph.conversation",
                        "#microsoft.graph.conversationThread": "#/components/schemas/microsoft.graph.conversationThread",
                        "#microsoft.graph.groupLifecyclePolicy": "#/components/schemas/microsoft.graph.groupLifecyclePolicy",
                        "#microsoft.graph.plannerGroup": "#/components/schemas/microsoft.graph.plannerGroup",
                        "#microsoft.graph.security": "#/components/schemas/microsoft.graph.security",
                        "#microsoft.graph.attackSimulationRoot": "#/components/schemas/microsoft.graph.attackSimulationRoot",
                        "#microsoft.graph.alert": "#/components/schemas/microsoft.graph.alert",
                        "#microsoft.graph.secureScoreControlProfile": "#/components/schemas/microsoft.graph.secureScoreControlProfile",
                        "#microsoft.graph.secureScore": "#/components/schemas/microsoft.graph.secureScore",
                        "#microsoft.graph.itemAnalytics": "#/components/schemas/microsoft.graph.itemAnalytics",
                        "#microsoft.graph.columnDefinition": "#/components/schemas/microsoft.graph.columnDefinition",
                        "#microsoft.graph.contentType": "#/components/schemas/microsoft.graph.contentType",
                        "#microsoft.graph.longRunningOperation": "#/components/schemas/microsoft.graph.longRunningOperation",
                        "#microsoft.graph.richLongRunningOperation": "#/components/schemas/microsoft.graph.richLongRunningOperation",
                        "#microsoft.graph.permission": "#/components/schemas/microsoft.graph.permission",
                        "#microsoft.graph.identityApiConnector": "#/components/schemas/microsoft.graph.identityApiConnector",
                        "#microsoft.graph.identityProviderBase": "#/components/schemas/microsoft.graph.identityProviderBase",
                        "#microsoft.graph.appleManagedIdentityProvider": "#/components/schemas/microsoft.graph.appleManagedIdentityProvider",
                        "#microsoft.graph.builtInIdentityProvider": "#/components/schemas/microsoft.graph.builtInIdentityProvider",
                        "#microsoft.graph.socialIdentityProvider": "#/components/schemas/microsoft.graph.socialIdentityProvider",
                        "#microsoft.graph.samlOrWsFedProvider": "#/components/schemas/microsoft.graph.samlOrWsFedProvider",
                        "#microsoft.graph.internalDomainFederation": "#/components/schemas/microsoft.graph.internalDomainFederation",
                        "#microsoft.graph.samlOrWsFedExternalDomainFederation": "#/components/schemas/microsoft.graph.samlOrWsFedExternalDomainFederation",
                        "#microsoft.graph.identityUserFlow": "#/components/schemas/microsoft.graph.identityUserFlow",
                        "#microsoft.graph.b2xIdentityUserFlow": "#/components/schemas/microsoft.graph.b2xIdentityUserFlow",
                        "#microsoft.graph.identityProvider": "#/components/schemas/microsoft.graph.identityProvider",
                        "#microsoft.graph.userFlowLanguageConfiguration": "#/components/schemas/microsoft.graph.userFlowLanguageConfiguration",
                        "#microsoft.graph.identityUserFlowAttributeAssignment": "#/components/schemas/microsoft.graph.identityUserFlowAttributeAssignment",
                        "#microsoft.graph.identityUserFlowAttribute": "#/components/schemas/microsoft.graph.identityUserFlowAttribute",
                        "#microsoft.graph.identityBuiltInUserFlowAttribute": "#/components/schemas/microsoft.graph.identityBuiltInUserFlowAttribute",
                        "#microsoft.graph.identityCustomUserFlowAttribute": "#/components/schemas/microsoft.graph.identityCustomUserFlowAttribute",
                        "#microsoft.graph.identityContainer": "#/components/schemas/microsoft.graph.identityContainer",
                        "#microsoft.graph.conditionalAccessRoot": "#/components/schemas/microsoft.graph.conditionalAccessRoot",
                        "#microsoft.graph.userFlowLanguagePage": "#/components/schemas/microsoft.graph.userFlowLanguagePage",
                        "#microsoft.graph.appScope": "#/components/schemas/microsoft.graph.appScope",
                        "#microsoft.graph.certificateBasedAuthConfiguration": "#/components/schemas/microsoft.graph.certificateBasedAuthConfiguration",
                        "#microsoft.graph.crossTenantAccessPolicyConfigurationDefault": "#/components/schemas/microsoft.graph.crossTenantAccessPolicyConfigurationDefault",
                        "#microsoft.graph.directory": "#/components/schemas/microsoft.graph.directory",
                        "#microsoft.graph.onPremisesDirectorySynchronization": "#/components/schemas/microsoft.graph.onPremisesDirectorySynchronization",
                        "#microsoft.graph.domain": "#/components/schemas/microsoft.graph.domain",
                        "#microsoft.graph.domainDnsRecord": "#/components/schemas/microsoft.graph.domainDnsRecord",
                        "#microsoft.graph.domainDnsCnameRecord": "#/components/schemas/microsoft.graph.domainDnsCnameRecord",
                        "#microsoft.graph.domainDnsMxRecord": "#/components/schemas/microsoft.graph.domainDnsMxRecord",
                        "#microsoft.graph.domainDnsSrvRecord": "#/components/schemas/microsoft.graph.domainDnsSrvRecord",
                        "#microsoft.graph.domainDnsTxtRecord": "#/components/schemas/microsoft.graph.domainDnsTxtRecord",
                        "#microsoft.graph.domainDnsUnavailableRecord": "#/components/schemas/microsoft.graph.domainDnsUnavailableRecord",
                        "#microsoft.graph.externalDomainName": "#/components/schemas/microsoft.graph.externalDomainName",
                        "#microsoft.graph.organizationalBrandingProperties": "#/components/schemas/microsoft.graph.organizationalBrandingProperties",
                        "#microsoft.graph.organizationalBranding": "#/components/schemas/microsoft.graph.organizationalBranding",
                        "#microsoft.graph.organizationalBrandingLocalization": "#/components/schemas/microsoft.graph.organizationalBrandingLocalization",
                        "#microsoft.graph.permissionGrantConditionSet": "#/components/schemas/microsoft.graph.permissionGrantConditionSet",
                        "#microsoft.graph.rbacApplication": "#/components/schemas/microsoft.graph.rbacApplication",
                        "#microsoft.graph.unifiedRoleAssignment": "#/components/schemas/microsoft.graph.unifiedRoleAssignment",
                        "#microsoft.graph.unifiedRoleDefinition": "#/components/schemas/microsoft.graph.unifiedRoleDefinition",
                        "#microsoft.graph.unifiedRoleScheduleInstanceBase": "#/components/schemas/microsoft.graph.unifiedRoleScheduleInstanceBase",
                        "#microsoft.graph.unifiedRoleAssignmentScheduleInstance": "#/components/schemas/microsoft.graph.unifiedRoleAssignmentScheduleInstance",
                        "#microsoft.graph.unifiedRoleEligibilityScheduleInstance": "#/components/schemas/microsoft.graph.unifiedRoleEligibilityScheduleInstance",
                        "#microsoft.graph.request": "#/components/schemas/microsoft.graph.request",
                        "#microsoft.graph.unifiedRoleAssignmentScheduleRequest": "#/components/schemas/microsoft.graph.unifiedRoleAssignmentScheduleRequest",
                        "#microsoft.graph.unifiedRoleEligibilityScheduleRequest": "#/components/schemas/microsoft.graph.unifiedRoleEligibilityScheduleRequest",
                        "#microsoft.graph.userConsentRequest": "#/components/schemas/microsoft.graph.userConsentRequest",
                        "#microsoft.graph.unifiedRoleScheduleBase": "#/components/schemas/microsoft.graph.unifiedRoleScheduleBase",
                        "#microsoft.graph.unifiedRoleAssignmentSchedule": "#/components/schemas/microsoft.graph.unifiedRoleAssignmentSchedule",
                        "#microsoft.graph.unifiedRoleEligibilitySchedule": "#/components/schemas/microsoft.graph.unifiedRoleEligibilitySchedule",
                        "#microsoft.graph.subscribedSku": "#/components/schemas/microsoft.graph.subscribedSku",
                        "#microsoft.graph.educationAssignment": "#/components/schemas/microsoft.graph.educationAssignment",
                        "#microsoft.graph.educationCategory": "#/components/schemas/microsoft.graph.educationCategory",
                        "#microsoft.graph.educationAssignmentResource": "#/components/schemas/microsoft.graph.educationAssignmentResource",
                        "#microsoft.graph.educationRubric": "#/components/schemas/microsoft.graph.educationRubric",
                        "#microsoft.graph.educationSubmission": "#/components/schemas/microsoft.graph.educationSubmission",
                        "#microsoft.graph.educationAssignmentDefaults": "#/components/schemas/microsoft.graph.educationAssignmentDefaults",
                        "#microsoft.graph.educationAssignmentSettings": "#/components/schemas/microsoft.graph.educationAssignmentSettings",
                        "#microsoft.graph.educationClass": "#/components/schemas/microsoft.graph.educationClass",
                        "#microsoft.graph.educationUser": "#/components/schemas/microsoft.graph.educationUser",
                        "#microsoft.graph.educationOrganization": "#/components/schemas/microsoft.graph.educationOrganization",
                        "#microsoft.graph.educationSchool": "#/components/schemas/microsoft.graph.educationSchool",
                        "#microsoft.graph.educationOutcome": "#/components/schemas/microsoft.graph.educationOutcome",
                        "#microsoft.graph.educationFeedbackOutcome": "#/components/schemas/microsoft.graph.educationFeedbackOutcome",
                        "#microsoft.graph.educationFeedbackResourceOutcome": "#/components/schemas/microsoft.graph.educationFeedbackResourceOutcome",
                        "#microsoft.graph.educationPointsOutcome": "#/components/schemas/microsoft.graph.educationPointsOutcome",
                        "#microsoft.graph.educationRubricOutcome": "#/components/schemas/microsoft.graph.educationRubricOutcome",
                        "#microsoft.graph.educationSubmissionResource": "#/components/schemas/microsoft.graph.educationSubmissionResource",
                        "#microsoft.graph.workbook": "#/components/schemas/microsoft.graph.workbook",
                        "#microsoft.graph.subscription": "#/components/schemas/microsoft.graph.subscription",
                        "#microsoft.graph.thumbnailSet": "#/components/schemas/microsoft.graph.thumbnailSet",
                        "#microsoft.graph.baseItemVersion": "#/components/schemas/microsoft.graph.baseItemVersion",
                        "#microsoft.graph.driveItemVersion": "#/components/schemas/microsoft.graph.driveItemVersion",
                        "#microsoft.graph.listItemVersion": "#/components/schemas/microsoft.graph.listItemVersion",
                        "#microsoft.graph.documentSetVersion": "#/components/schemas/microsoft.graph.documentSetVersion",
                        "#microsoft.graph.workbookApplication": "#/components/schemas/microsoft.graph.workbookApplication",
                        "#microsoft.graph.workbookComment": "#/components/schemas/microsoft.graph.workbookComment",
                        "#microsoft.graph.workbookFunctions": "#/components/schemas/microsoft.graph.workbookFunctions",
                        "#microsoft.graph.workbookNamedItem": "#/components/schemas/microsoft.graph.workbookNamedItem",
                        "#microsoft.graph.workbookOperation": "#/components/schemas/microsoft.graph.workbookOperation",
                        "#microsoft.graph.workbookTable": "#/components/schemas/microsoft.graph.workbookTable",
                        "#microsoft.graph.workbookWorksheet": "#/components/schemas/microsoft.graph.workbookWorksheet",
                        "#microsoft.graph.workbookChart": "#/components/schemas/microsoft.graph.workbookChart",
                        "#microsoft.graph.workbookChartAxes": "#/components/schemas/microsoft.graph.workbookChartAxes",
                        "#microsoft.graph.workbookChartDataLabels": "#/components/schemas/microsoft.graph.workbookChartDataLabels",
                        "#microsoft.graph.workbookChartAreaFormat": "#/components/schemas/microsoft.graph.workbookChartAreaFormat",
                        "#microsoft.graph.workbookChartLegend": "#/components/schemas/microsoft.graph.workbookChartLegend",
                        "#microsoft.graph.workbookChartSeries": "#/components/schemas/microsoft.graph.workbookChartSeries",
                        "#microsoft.graph.workbookChartTitle": "#/components/schemas/microsoft.graph.workbookChartTitle",
                        "#microsoft.graph.workbookChartFill": "#/components/schemas/microsoft.graph.workbookChartFill",
                        "#microsoft.graph.workbookChartFont": "#/components/schemas/microsoft.graph.workbookChartFont",
                        "#microsoft.graph.workbookChartAxis": "#/components/schemas/microsoft.graph.workbookChartAxis",
                        "#microsoft.graph.workbookChartAxisFormat": "#/components/schemas/microsoft.graph.workbookChartAxisFormat",
                        "#microsoft.graph.workbookChartGridlines": "#/components/schemas/microsoft.graph.workbookChartGridlines",
                        "#microsoft.graph.workbookChartAxisTitle": "#/components/schemas/microsoft.graph.workbookChartAxisTitle",
                        "#microsoft.graph.workbookChartLineFormat": "#/components/schemas/microsoft.graph.workbookChartLineFormat",
                        "#microsoft.graph.workbookChartAxisTitleFormat": "#/components/schemas/microsoft.graph.workbookChartAxisTitleFormat",
                        "#microsoft.graph.workbookChartDataLabelFormat": "#/components/schemas/microsoft.graph.workbookChartDataLabelFormat",
                        "#microsoft.graph.workbookChartGridlinesFormat": "#/components/schemas/microsoft.graph.workbookChartGridlinesFormat",
                        "#microsoft.graph.workbookChartLegendFormat": "#/components/schemas/microsoft.graph.workbookChartLegendFormat",
                        "#microsoft.graph.workbookChartPoint": "#/components/schemas/microsoft.graph.workbookChartPoint",
                        "#microsoft.graph.workbookChartPointFormat": "#/components/schemas/microsoft.graph.workbookChartPointFormat",
                        "#microsoft.graph.workbookChartSeriesFormat": "#/components/schemas/microsoft.graph.workbookChartSeriesFormat",
                        "#microsoft.graph.workbookChartTitleFormat": "#/components/schemas/microsoft.graph.workbookChartTitleFormat",
                        "#microsoft.graph.workbookCommentReply": "#/components/schemas/microsoft.graph.workbookCommentReply",
                        "#microsoft.graph.workbookFilter": "#/components/schemas/microsoft.graph.workbookFilter",
                        "#microsoft.graph.workbookFormatProtection": "#/components/schemas/microsoft.graph.workbookFormatProtection",
                        "#microsoft.graph.workbookFunctionResult": "#/components/schemas/microsoft.graph.workbookFunctionResult",
                        "#microsoft.graph.workbookPivotTable": "#/components/schemas/microsoft.graph.workbookPivotTable",
                        "#microsoft.graph.workbookRange": "#/components/schemas/microsoft.graph.workbookRange",
                        "#microsoft.graph.workbookRangeFormat": "#/components/schemas/microsoft.graph.workbookRangeFormat",
                        "#microsoft.graph.workbookRangeSort": "#/components/schemas/microsoft.graph.workbookRangeSort",
                        "#microsoft.graph.workbookRangeBorder": "#/components/schemas/microsoft.graph.workbookRangeBorder",
                        "#microsoft.graph.workbookRangeFill": "#/components/schemas/microsoft.graph.workbookRangeFill",
                        "#microsoft.graph.workbookRangeFont": "#/components/schemas/microsoft.graph.workbookRangeFont",
                        "#microsoft.graph.workbookRangeView": "#/components/schemas/microsoft.graph.workbookRangeView",
                        "#microsoft.graph.workbookTableColumn": "#/components/schemas/microsoft.graph.workbookTableColumn",
                        "#microsoft.graph.workbookTableRow": "#/components/schemas/microsoft.graph.workbookTableRow",
                        "#microsoft.graph.workbookTableSort": "#/components/schemas/microsoft.graph.workbookTableSort",
                        "#microsoft.graph.workbookWorksheetProtection": "#/components/schemas/microsoft.graph.workbookWorksheetProtection",
                        "#microsoft.graph.place": "#/components/schemas/microsoft.graph.place",
                        "#microsoft.graph.room": "#/components/schemas/microsoft.graph.room",
                        "#microsoft.graph.roomList": "#/components/schemas/microsoft.graph.roomList",
                        "#microsoft.graph.attachment": "#/components/schemas/microsoft.graph.attachment",
                        "#microsoft.graph.fileAttachment": "#/components/schemas/microsoft.graph.fileAttachment",
                        "#microsoft.graph.itemAttachment": "#/components/schemas/microsoft.graph.itemAttachment",
                        "#microsoft.graph.referenceAttachment": "#/components/schemas/microsoft.graph.referenceAttachment",
                        "#microsoft.graph.calendarPermission": "#/components/schemas/microsoft.graph.calendarPermission",
                        "#microsoft.graph.multiValueLegacyExtendedProperty": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty",
                        "#microsoft.graph.singleValueLegacyExtendedProperty": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty",
                        "#microsoft.graph.inferenceClassificationOverride": "#/components/schemas/microsoft.graph.inferenceClassificationOverride",
                        "#microsoft.graph.messageRule": "#/components/schemas/microsoft.graph.messageRule",
                        "#microsoft.graph.outlookCategory": "#/components/schemas/microsoft.graph.outlookCategory",
                        "#microsoft.graph.columnLink": "#/components/schemas/microsoft.graph.columnLink",
                        "#microsoft.graph.fieldValueSet": "#/components/schemas/microsoft.graph.fieldValueSet",
                        "#microsoft.graph.itemActivity": "#/components/schemas/microsoft.graph.itemActivity",
                        "#microsoft.graph.itemActivityStat": "#/components/schemas/microsoft.graph.itemActivityStat",
                        "#microsoft.graph.schemaExtension": "#/components/schemas/microsoft.graph.schemaExtension",
                        "#microsoft.graph.cloudCommunications": "#/components/schemas/microsoft.graph.cloudCommunications",
                        "#microsoft.graph.call": "#/components/schemas/microsoft.graph.call",
                        "#microsoft.graph.accessReviewHistoryDefinition": "#/components/schemas/microsoft.graph.accessReviewHistoryDefinition",
                        "#microsoft.graph.accessReviewHistoryInstance": "#/components/schemas/microsoft.graph.accessReviewHistoryInstance",
                        "#microsoft.graph.accessReviewInstance": "#/components/schemas/microsoft.graph.accessReviewInstance",
                        "#microsoft.graph.accessReviewReviewer": "#/components/schemas/microsoft.graph.accessReviewReviewer",
                        "#microsoft.graph.accessReviewInstanceDecisionItem": "#/components/schemas/microsoft.graph.accessReviewInstanceDecisionItem",
                        "#microsoft.graph.accessReviewStage": "#/components/schemas/microsoft.graph.accessReviewStage",
                        "#microsoft.graph.accessReviewScheduleDefinition": "#/components/schemas/microsoft.graph.accessReviewScheduleDefinition",
                        "#microsoft.graph.accessReviewSet": "#/components/schemas/microsoft.graph.accessReviewSet",
                        "#microsoft.graph.appConsentApprovalRoute": "#/components/schemas/microsoft.graph.appConsentApprovalRoute",
                        "#microsoft.graph.appConsentRequest": "#/components/schemas/microsoft.graph.appConsentRequest",
                        "#microsoft.graph.approval": "#/components/schemas/microsoft.graph.approval",
                        "#microsoft.graph.approvalStage": "#/components/schemas/microsoft.graph.approvalStage",
                        "#microsoft.graph.entitlementManagement": "#/components/schemas/microsoft.graph.entitlementManagement",
                        "#microsoft.graph.accessPackage": "#/components/schemas/microsoft.graph.accessPackage",
                        "#microsoft.graph.accessPackageAssignmentPolicy": "#/components/schemas/microsoft.graph.accessPackageAssignmentPolicy",
                        "#microsoft.graph.accessPackageAssignmentRequest": "#/components/schemas/microsoft.graph.accessPackageAssignmentRequest",
                        "#microsoft.graph.accessPackageAssignment": "#/components/schemas/microsoft.graph.accessPackageAssignment",
                        "#microsoft.graph.accessPackageCatalog": "#/components/schemas/microsoft.graph.accessPackageCatalog",
                        "#microsoft.graph.connectedOrganization": "#/components/schemas/microsoft.graph.connectedOrganization",
                        "#microsoft.graph.entitlementManagementSettings": "#/components/schemas/microsoft.graph.entitlementManagementSettings",
                        "#microsoft.graph.termsOfUseContainer": "#/components/schemas/microsoft.graph.termsOfUseContainer",
                        "#microsoft.graph.agreement": "#/components/schemas/microsoft.graph.agreement",
                        "#microsoft.graph.agreementFileProperties": "#/components/schemas/microsoft.graph.agreementFileProperties",
                        "#microsoft.graph.agreementFile": "#/components/schemas/microsoft.graph.agreementFile",
                        "#microsoft.graph.agreementFileLocalization": "#/components/schemas/microsoft.graph.agreementFileLocalization",
                        "#microsoft.graph.agreementFileVersion": "#/components/schemas/microsoft.graph.agreementFileVersion",
                        "#microsoft.graph.authenticationContextClassReference": "#/components/schemas/microsoft.graph.authenticationContextClassReference",
                        "#microsoft.graph.namedLocation": "#/components/schemas/microsoft.graph.namedLocation",
                        "#microsoft.graph.countryNamedLocation": "#/components/schemas/microsoft.graph.countryNamedLocation",
                        "#microsoft.graph.ipNamedLocation": "#/components/schemas/microsoft.graph.ipNamedLocation",
                        "#microsoft.graph.conditionalAccessTemplate": "#/components/schemas/microsoft.graph.conditionalAccessTemplate",
                        "#microsoft.graph.riskDetection": "#/components/schemas/microsoft.graph.riskDetection",
                        "#microsoft.graph.riskyServicePrincipal": "#/components/schemas/microsoft.graph.riskyServicePrincipal",
                        "#microsoft.graph.riskyServicePrincipalHistoryItem": "#/components/schemas/microsoft.graph.riskyServicePrincipalHistoryItem",
                        "#microsoft.graph.riskyUser": "#/components/schemas/microsoft.graph.riskyUser",
                        "#microsoft.graph.riskyUserHistoryItem": "#/components/schemas/microsoft.graph.riskyUserHistoryItem",
                        "#microsoft.graph.servicePrincipalRiskDetection": "#/components/schemas/microsoft.graph.servicePrincipalRiskDetection",
                        "#microsoft.graph.accessPackageQuestion": "#/components/schemas/microsoft.graph.accessPackageQuestion",
                        "#microsoft.graph.accessPackageMultipleChoiceQuestion": "#/components/schemas/microsoft.graph.accessPackageMultipleChoiceQuestion",
                        "#microsoft.graph.accessPackageTextInputQuestion": "#/components/schemas/microsoft.graph.accessPackageTextInputQuestion",
                        "#microsoft.graph.accessPackageSubject": "#/components/schemas/microsoft.graph.accessPackageSubject",
                        "#microsoft.graph.mobileApp": "#/components/schemas/microsoft.graph.mobileApp",
                        "#microsoft.graph.mobileLobApp": "#/components/schemas/microsoft.graph.mobileLobApp",
                        "#microsoft.graph.androidLobApp": "#/components/schemas/microsoft.graph.androidLobApp",
                        "#microsoft.graph.iosLobApp": "#/components/schemas/microsoft.graph.iosLobApp",
                        "#microsoft.graph.macOSLobApp": "#/components/schemas/microsoft.graph.macOSLobApp",
                        "#microsoft.graph.win32LobApp": "#/components/schemas/microsoft.graph.win32LobApp",
                        "#microsoft.graph.windowsMobileMSI": "#/components/schemas/microsoft.graph.windowsMobileMSI",
                        "#microsoft.graph.windowsUniversalAppX": "#/components/schemas/microsoft.graph.windowsUniversalAppX",
                        "#microsoft.graph.androidStoreApp": "#/components/schemas/microsoft.graph.androidStoreApp",
                        "#microsoft.graph.iosiPadOSWebClip": "#/components/schemas/microsoft.graph.iosiPadOSWebClip",
                        "#microsoft.graph.iosStoreApp": "#/components/schemas/microsoft.graph.iosStoreApp",
                        "#microsoft.graph.iosVppApp": "#/components/schemas/microsoft.graph.iosVppApp",
                        "#microsoft.graph.macOSMicrosoftEdgeApp": "#/components/schemas/microsoft.graph.macOSMicrosoftEdgeApp",
                        "#microsoft.graph.macOSOfficeSuiteApp": "#/components/schemas/microsoft.graph.macOSOfficeSuiteApp",
                        "#microsoft.graph.managedApp": "#/components/schemas/microsoft.graph.managedApp",
                        "#microsoft.graph.managedMobileLobApp": "#/components/schemas/microsoft.graph.managedMobileLobApp",
                        "#microsoft.graph.managedAndroidLobApp": "#/components/schemas/microsoft.graph.managedAndroidLobApp",
                        "#microsoft.graph.managedIOSLobApp": "#/components/schemas/microsoft.graph.managedIOSLobApp",
                        "#microsoft.graph.managedAndroidStoreApp": "#/components/schemas/microsoft.graph.managedAndroidStoreApp",
                        "#microsoft.graph.managedIOSStoreApp": "#/components/schemas/microsoft.graph.managedIOSStoreApp",
                        "#microsoft.graph.microsoftStoreForBusinessApp": "#/components/schemas/microsoft.graph.microsoftStoreForBusinessApp",
                        "#microsoft.graph.webApp": "#/components/schemas/microsoft.graph.webApp",
                        "#microsoft.graph.windowsMicrosoftEdgeApp": "#/components/schemas/microsoft.graph.windowsMicrosoftEdgeApp",
                        "#microsoft.graph.windowsWebApp": "#/components/schemas/microsoft.graph.windowsWebApp",
                        "#microsoft.graph.deviceAppManagement": "#/components/schemas/microsoft.graph.deviceAppManagement",
                        "#microsoft.graph.managedEBook": "#/components/schemas/microsoft.graph.managedEBook",
                        "#microsoft.graph.iosVppEBook": "#/components/schemas/microsoft.graph.iosVppEBook",
                        "#microsoft.graph.mobileAppCategory": "#/components/schemas/microsoft.graph.mobileAppCategory",
                        "#microsoft.graph.managedDeviceMobileAppConfiguration": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfiguration",
                        "#microsoft.graph.iosMobileAppConfiguration": "#/components/schemas/microsoft.graph.iosMobileAppConfiguration",
                        "#microsoft.graph.vppToken": "#/components/schemas/microsoft.graph.vppToken",
                        "#microsoft.graph.managedAppPolicy": "#/components/schemas/microsoft.graph.managedAppPolicy",
                        "#microsoft.graph.managedAppProtection": "#/components/schemas/microsoft.graph.managedAppProtection",
                        "#microsoft.graph.targetedManagedAppProtection": "#/components/schemas/microsoft.graph.targetedManagedAppProtection",
                        "#microsoft.graph.androidManagedAppProtection": "#/components/schemas/microsoft.graph.androidManagedAppProtection",
                        "#microsoft.graph.iosManagedAppProtection": "#/components/schemas/microsoft.graph.iosManagedAppProtection",
                        "#microsoft.graph.defaultManagedAppProtection": "#/components/schemas/microsoft.graph.defaultManagedAppProtection",
                        "#microsoft.graph.windowsInformationProtection": "#/components/schemas/microsoft.graph.windowsInformationProtection",
                        "#microsoft.graph.mdmWindowsInformationProtectionPolicy": "#/components/schemas/microsoft.graph.mdmWindowsInformationProtectionPolicy",
                        "#microsoft.graph.windowsInformationProtectionPolicy": "#/components/schemas/microsoft.graph.windowsInformationProtectionPolicy",
                        "#microsoft.graph.managedAppConfiguration": "#/components/schemas/microsoft.graph.managedAppConfiguration",
                        "#microsoft.graph.targetedManagedAppConfiguration": "#/components/schemas/microsoft.graph.targetedManagedAppConfiguration",
                        "#microsoft.graph.managedAppStatus": "#/components/schemas/microsoft.graph.managedAppStatus",
                        "#microsoft.graph.managedAppStatusRaw": "#/components/schemas/microsoft.graph.managedAppStatusRaw",
                        "#microsoft.graph.enterpriseCodeSigningCertificate": "#/components/schemas/microsoft.graph.enterpriseCodeSigningCertificate",
                        "#microsoft.graph.iosLobAppProvisioningConfigurationAssignment": "#/components/schemas/microsoft.graph.iosLobAppProvisioningConfigurationAssignment",
                        "#microsoft.graph.managedDeviceMobileAppConfigurationAssignment": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationAssignment",
                        "#microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationDeviceStatus",
                        "#microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationDeviceSummary",
                        "#microsoft.graph.managedDeviceMobileAppConfigurationUserStatus": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationUserStatus",
                        "#microsoft.graph.managedDeviceMobileAppConfigurationUserSummary": "#/components/schemas/microsoft.graph.managedDeviceMobileAppConfigurationUserSummary",
                        "#microsoft.graph.mobileAppContent": "#/components/schemas/microsoft.graph.mobileAppContent",
                        "#microsoft.graph.mobileAppAssignment": "#/components/schemas/microsoft.graph.mobileAppAssignment",
                        "#microsoft.graph.mobileContainedApp": "#/components/schemas/microsoft.graph.mobileContainedApp",
                        "#microsoft.graph.windowsUniversalAppXContainedApp": "#/components/schemas/microsoft.graph.windowsUniversalAppXContainedApp",
                        "#microsoft.graph.mobileAppContentFile": "#/components/schemas/microsoft.graph.mobileAppContentFile",
                        "#microsoft.graph.auditEvent": "#/components/schemas/microsoft.graph.auditEvent",
                        "#microsoft.graph.deviceManagement": "#/components/schemas/microsoft.graph.deviceManagement",
                        "#microsoft.graph.termsAndConditions": "#/components/schemas/microsoft.graph.termsAndConditions",
                        "#microsoft.graph.deviceCompliancePolicy": "#/components/schemas/microsoft.graph.deviceCompliancePolicy",
                        "#microsoft.graph.androidCompliancePolicy": "#/components/schemas/microsoft.graph.androidCompliancePolicy",
                        "#microsoft.graph.androidWorkProfileCompliancePolicy": "#/components/schemas/microsoft.graph.androidWorkProfileCompliancePolicy",
                        "#microsoft.graph.iosCompliancePolicy": "#/components/schemas/microsoft.graph.iosCompliancePolicy",
                        "#microsoft.graph.macOSCompliancePolicy": "#/components/schemas/microsoft.graph.macOSCompliancePolicy",
                        "#microsoft.graph.windows10CompliancePolicy": "#/components/schemas/microsoft.graph.windows10CompliancePolicy",
                        "#microsoft.graph.windows10MobileCompliancePolicy": "#/components/schemas/microsoft.graph.windows10MobileCompliancePolicy",
                        "#microsoft.graph.windows81CompliancePolicy": "#/components/schemas/microsoft.graph.windows81CompliancePolicy",
                        "#microsoft.graph.windowsPhone81CompliancePolicy": "#/components/schemas/microsoft.graph.windowsPhone81CompliancePolicy",
                        "#microsoft.graph.deviceCompliancePolicyDeviceStateSummary": "#/components/schemas/microsoft.graph.deviceCompliancePolicyDeviceStateSummary",
                        "#microsoft.graph.deviceCompliancePolicySettingStateSummary": "#/components/schemas/microsoft.graph.deviceCompliancePolicySettingStateSummary",
                        "#microsoft.graph.deviceConfigurationDeviceStateSummary": "#/components/schemas/microsoft.graph.deviceConfigurationDeviceStateSummary",
                        "#microsoft.graph.deviceConfiguration": "#/components/schemas/microsoft.graph.deviceConfiguration",
                        "#microsoft.graph.androidCustomConfiguration": "#/components/schemas/microsoft.graph.androidCustomConfiguration",
                        "#microsoft.graph.androidGeneralDeviceConfiguration": "#/components/schemas/microsoft.graph.androidGeneralDeviceConfiguration",
                        "#microsoft.graph.androidWorkProfileCustomConfiguration": "#/components/schemas/microsoft.graph.androidWorkProfileCustomConfiguration",
                        "#microsoft.graph.androidWorkProfileGeneralDeviceConfiguration": "#/components/schemas/microsoft.graph.androidWorkProfileGeneralDeviceConfiguration",
                        "#microsoft.graph.appleDeviceFeaturesConfigurationBase": "#/components/schemas/microsoft.graph.appleDeviceFeaturesConfigurationBase",
                        "#microsoft.graph.iosDeviceFeaturesConfiguration": "#/components/schemas/microsoft.graph.iosDeviceFeaturesConfiguration",
                        "#microsoft.graph.macOSDeviceFeaturesConfiguration": "#/components/schemas/microsoft.graph.macOSDeviceFeaturesConfiguration",
                        "#microsoft.graph.editionUpgradeConfiguration": "#/components/schemas/microsoft.graph.editionUpgradeConfiguration",
                        "#microsoft.graph.iosCertificateProfile": "#/components/schemas/microsoft.graph.iosCertificateProfile",
                        "#microsoft.graph.iosCustomConfiguration": "#/components/schemas/microsoft.graph.iosCustomConfiguration",
                        "#microsoft.graph.iosGeneralDeviceConfiguration": "#/components/schemas/microsoft.graph.iosGeneralDeviceConfiguration",
                        "#microsoft.graph.iosUpdateConfiguration": "#/components/schemas/microsoft.graph.iosUpdateConfiguration",
                        "#microsoft.graph.macOSCustomConfiguration": "#/components/schemas/microsoft.graph.macOSCustomConfiguration",
                        "#microsoft.graph.macOSGeneralDeviceConfiguration": "#/components/schemas/microsoft.graph.macOSGeneralDeviceConfiguration",
                        "#microsoft.graph.sharedPCConfiguration": "#/components/schemas/microsoft.graph.sharedPCConfiguration",
                        "#microsoft.graph.windows10CustomConfiguration": "#/components/schemas/microsoft.graph.windows10CustomConfiguration",
                        "#microsoft.graph.windows10EndpointProtectionConfiguration": "#/components/schemas/microsoft.graph.windows10EndpointProtectionConfiguration",
                        "#microsoft.graph.windows10EnterpriseModernAppManagementConfiguration": "#/components/schemas/microsoft.graph.windows10EnterpriseModernAppManagementConfiguration",
                        "#microsoft.graph.windows10GeneralConfiguration": "#/components/schemas/microsoft.graph.windows10GeneralConfiguration",
                        "#microsoft.graph.windows10SecureAssessmentConfiguration": "#/components/schemas/microsoft.graph.windows10SecureAssessmentConfiguration",
                        "#microsoft.graph.windows10TeamGeneralConfiguration": "#/components/schemas/microsoft.graph.windows10TeamGeneralConfiguration",
                        "#microsoft.graph.windows81GeneralConfiguration": "#/components/schemas/microsoft.graph.windows81GeneralConfiguration",
                        "#microsoft.graph.windowsDefenderAdvancedThreatProtectionConfiguration": "#/components/schemas/microsoft.graph.windowsDefenderAdvancedThreatProtectionConfiguration",
                        "#microsoft.graph.windowsPhone81CustomConfiguration": "#/components/schemas/microsoft.graph.windowsPhone81CustomConfiguration",
                        "#microsoft.graph.windowsPhone81GeneralConfiguration": "#/components/schemas/microsoft.graph.windowsPhone81GeneralConfiguration",
                        "#microsoft.graph.windowsUpdateForBusinessConfiguration": "#/components/schemas/microsoft.graph.windowsUpdateForBusinessConfiguration",
                        "#microsoft.graph.iosUpdateDeviceStatus": "#/components/schemas/microsoft.graph.iosUpdateDeviceStatus",
                        "#microsoft.graph.softwareUpdateStatusSummary": "#/components/schemas/microsoft.graph.softwareUpdateStatusSummary",
                        "#microsoft.graph.complianceManagementPartner": "#/components/schemas/microsoft.graph.complianceManagementPartner",
                        "#microsoft.graph.onPremisesConditionalAccessSettings": "#/components/schemas/microsoft.graph.onPremisesConditionalAccessSettings",
                        "#microsoft.graph.deviceCategory": "#/components/schemas/microsoft.graph.deviceCategory",
                        "#microsoft.graph.deviceEnrollmentConfiguration": "#/components/schemas/microsoft.graph.deviceEnrollmentConfiguration",
                        "#microsoft.graph.deviceEnrollmentLimitConfiguration": "#/components/schemas/microsoft.graph.deviceEnrollmentLimitConfiguration",
                        "#microsoft.graph.deviceEnrollmentPlatformRestrictionsConfiguration": "#/components/schemas/microsoft.graph.deviceEnrollmentPlatformRestrictionsConfiguration",
                        "#microsoft.graph.deviceEnrollmentWindowsHelloForBusinessConfiguration": "#/components/schemas/microsoft.graph.deviceEnrollmentWindowsHelloForBusinessConfiguration",
                        "#microsoft.graph.deviceManagementPartner": "#/components/schemas/microsoft.graph.deviceManagementPartner",
                        "#microsoft.graph.deviceManagementExchangeConnector": "#/components/schemas/microsoft.graph.deviceManagementExchangeConnector",
                        "#microsoft.graph.mobileThreatDefenseConnector": "#/components/schemas/microsoft.graph.mobileThreatDefenseConnector",
                        "#microsoft.graph.applePushNotificationCertificate": "#/components/schemas/microsoft.graph.applePushNotificationCertificate",
                        "#microsoft.graph.detectedApp": "#/components/schemas/microsoft.graph.detectedApp",
                        "#microsoft.graph.managedDeviceOverview": "#/components/schemas/microsoft.graph.managedDeviceOverview",
                        "#microsoft.graph.importedWindowsAutopilotDeviceIdentity": "#/components/schemas/microsoft.graph.importedWindowsAutopilotDeviceIdentity",
                        "#microsoft.graph.windowsAutopilotDeviceIdentity": "#/components/schemas/microsoft.graph.windowsAutopilotDeviceIdentity",
                        "#microsoft.graph.notificationMessageTemplate": "#/components/schemas/microsoft.graph.notificationMessageTemplate",
                        "#microsoft.graph.resourceOperation": "#/components/schemas/microsoft.graph.resourceOperation",
                        "#microsoft.graph.roleAssignment": "#/components/schemas/microsoft.graph.roleAssignment",
                        "#microsoft.graph.deviceAndAppManagementRoleAssignment": "#/components/schemas/microsoft.graph.deviceAndAppManagementRoleAssignment",
                        "#microsoft.graph.roleDefinition": "#/components/schemas/microsoft.graph.roleDefinition",
                        "#microsoft.graph.deviceAndAppManagementRoleDefinition": "#/components/schemas/microsoft.graph.deviceAndAppManagementRoleDefinition",
                        "#microsoft.graph.remoteAssistancePartner": "#/components/schemas/microsoft.graph.remoteAssistancePartner",
                        "#microsoft.graph.deviceManagementReports": "#/components/schemas/microsoft.graph.deviceManagementReports",
                        "#microsoft.graph.telecomExpenseManagementPartner": "#/components/schemas/microsoft.graph.telecomExpenseManagementPartner",
                        "#microsoft.graph.windowsInformationProtectionAppLearningSummary": "#/components/schemas/microsoft.graph.windowsInformationProtectionAppLearningSummary",
                        "#microsoft.graph.windowsInformationProtectionNetworkLearningSummary": "#/components/schemas/microsoft.graph.windowsInformationProtectionNetworkLearningSummary",
                        "#microsoft.graph.deviceInstallState": "#/components/schemas/microsoft.graph.deviceInstallState",
                        "#microsoft.graph.eBookInstallSummary": "#/components/schemas/microsoft.graph.eBookInstallSummary",
                        "#microsoft.graph.managedEBookAssignment": "#/components/schemas/microsoft.graph.managedEBookAssignment",
                        "#microsoft.graph.iosVppEBookAssignment": "#/components/schemas/microsoft.graph.iosVppEBookAssignment",
                        "#microsoft.graph.userInstallStateSummary": "#/components/schemas/microsoft.graph.userInstallStateSummary",
                        "#microsoft.graph.termsAndConditionsAcceptanceStatus": "#/components/schemas/microsoft.graph.termsAndConditionsAcceptanceStatus",
                        "#microsoft.graph.termsAndConditionsAssignment": "#/components/schemas/microsoft.graph.termsAndConditionsAssignment",
                        "#microsoft.graph.deviceComplianceActionItem": "#/components/schemas/microsoft.graph.deviceComplianceActionItem",
                        "#microsoft.graph.deviceComplianceDeviceOverview": "#/components/schemas/microsoft.graph.deviceComplianceDeviceOverview",
                        "#microsoft.graph.deviceComplianceDeviceStatus": "#/components/schemas/microsoft.graph.deviceComplianceDeviceStatus",
                        "#microsoft.graph.deviceCompliancePolicyAssignment": "#/components/schemas/microsoft.graph.deviceCompliancePolicyAssignment",
                        "#microsoft.graph.settingStateDeviceSummary": "#/components/schemas/microsoft.graph.settingStateDeviceSummary",
                        "#microsoft.graph.deviceComplianceScheduledActionForRule": "#/components/schemas/microsoft.graph.deviceComplianceScheduledActionForRule",
                        "#microsoft.graph.deviceComplianceUserStatus": "#/components/schemas/microsoft.graph.deviceComplianceUserStatus",
                        "#microsoft.graph.deviceComplianceUserOverview": "#/components/schemas/microsoft.graph.deviceComplianceUserOverview",
                        "#microsoft.graph.deviceComplianceSettingState": "#/components/schemas/microsoft.graph.deviceComplianceSettingState",
                        "#microsoft.graph.deviceCompliancePolicyState": "#/components/schemas/microsoft.graph.deviceCompliancePolicyState",
                        "#microsoft.graph.deviceConfigurationAssignment": "#/components/schemas/microsoft.graph.deviceConfigurationAssignment",
                        "#microsoft.graph.deviceConfigurationDeviceStatus": "#/components/schemas/microsoft.graph.deviceConfigurationDeviceStatus",
                        "#microsoft.graph.deviceConfigurationDeviceOverview": "#/components/schemas/microsoft.graph.deviceConfigurationDeviceOverview",
                        "#microsoft.graph.deviceConfigurationUserStatus": "#/components/schemas/microsoft.graph.deviceConfigurationUserStatus",
                        "#microsoft.graph.deviceConfigurationUserOverview": "#/components/schemas/microsoft.graph.deviceConfigurationUserOverview",
                        "#microsoft.graph.deviceConfigurationState": "#/components/schemas/microsoft.graph.deviceConfigurationState",
                        "#microsoft.graph.printUsage": "#/components/schemas/microsoft.graph.printUsage",
                        "#microsoft.graph.printUsageByPrinter": "#/components/schemas/microsoft.graph.printUsageByPrinter",
                        "#microsoft.graph.printUsageByUser": "#/components/schemas/microsoft.graph.printUsageByUser",
                        "#microsoft.graph.securityReportsRoot": "#/components/schemas/microsoft.graph.securityReportsRoot",
                        "#microsoft.graph.enrollmentConfigurationAssignment": "#/components/schemas/microsoft.graph.enrollmentConfigurationAssignment",
                        "#microsoft.graph.userExperienceAnalyticsDevicePerformance": "#/components/schemas/microsoft.graph.userExperienceAnalyticsDevicePerformance",
                        "#microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload": "#/components/schemas/microsoft.graph.importedWindowsAutopilotDeviceIdentityUpload",
                        "#microsoft.graph.managedMobileApp": "#/components/schemas/microsoft.graph.managedMobileApp",
                        "#microsoft.graph.managedAppPolicyDeploymentSummary": "#/components/schemas/microsoft.graph.managedAppPolicyDeploymentSummary",
                        "#microsoft.graph.managedAppOperation": "#/components/schemas/microsoft.graph.managedAppOperation",
                        "#microsoft.graph.targetedManagedAppPolicyAssignment": "#/components/schemas/microsoft.graph.targetedManagedAppPolicyAssignment",
                        "#microsoft.graph.windowsInformationProtectionAppLockerFile": "#/components/schemas/microsoft.graph.windowsInformationProtectionAppLockerFile",
                        "#microsoft.graph.localizedNotificationMessage": "#/components/schemas/microsoft.graph.localizedNotificationMessage",
                        "#microsoft.graph.deviceManagementExportJob": "#/components/schemas/microsoft.graph.deviceManagementExportJob",
                        "#microsoft.graph.serviceAnnouncement": "#/components/schemas/microsoft.graph.serviceAnnouncement",
                        "#microsoft.graph.serviceHealth": "#/components/schemas/microsoft.graph.serviceHealth",
                        "#microsoft.graph.serviceAnnouncementBase": "#/components/schemas/microsoft.graph.serviceAnnouncementBase",
                        "#microsoft.graph.serviceHealthIssue": "#/components/schemas/microsoft.graph.serviceHealthIssue",
                        "#microsoft.graph.serviceUpdateMessage": "#/components/schemas/microsoft.graph.serviceUpdateMessage",
                        "#microsoft.graph.serviceAnnouncementAttachment": "#/components/schemas/microsoft.graph.serviceAnnouncementAttachment",
                        "#microsoft.graph.searchEntity": "#/components/schemas/microsoft.graph.searchEntity",
                        "#microsoft.graph.planner": "#/components/schemas/microsoft.graph.planner",
                        "#microsoft.graph.plannerBucket": "#/components/schemas/microsoft.graph.plannerBucket",
                        "#microsoft.graph.plannerPlan": "#/components/schemas/microsoft.graph.plannerPlan",
                        "#microsoft.graph.plannerTask": "#/components/schemas/microsoft.graph.plannerTask",
                        "#microsoft.graph.plannerAssignedToTaskBoardTaskFormat": "#/components/schemas/microsoft.graph.plannerAssignedToTaskBoardTaskFormat",
                        "#microsoft.graph.plannerBucketTaskBoardTaskFormat": "#/components/schemas/microsoft.graph.plannerBucketTaskBoardTaskFormat",
                        "#microsoft.graph.plannerPlanDetails": "#/components/schemas/microsoft.graph.plannerPlanDetails",
                        "#microsoft.graph.plannerProgressTaskBoardTaskFormat": "#/components/schemas/microsoft.graph.plannerProgressTaskBoardTaskFormat",
                        "#microsoft.graph.plannerTaskDetails": "#/components/schemas/microsoft.graph.plannerTaskDetails",
                        "#microsoft.graph.sharedInsight": "#/components/schemas/microsoft.graph.sharedInsight",
                        "#microsoft.graph.trending": "#/components/schemas/microsoft.graph.trending",
                        "#microsoft.graph.usedInsight": "#/components/schemas/microsoft.graph.usedInsight",
                        "#microsoft.graph.changeTrackedEntity": "#/components/schemas/microsoft.graph.changeTrackedEntity",
                        "#microsoft.graph.shiftPreferences": "#/components/schemas/microsoft.graph.shiftPreferences",
                        "#microsoft.graph.workforceIntegration": "#/components/schemas/microsoft.graph.workforceIntegration",
                        "#microsoft.graph.scheduleChangeRequest": "#/components/schemas/microsoft.graph.scheduleChangeRequest",
                        "#microsoft.graph.offerShiftRequest": "#/components/schemas/microsoft.graph.offerShiftRequest",
                        "#microsoft.graph.swapShiftsChangeRequest": "#/components/schemas/microsoft.graph.swapShiftsChangeRequest",
                        "#microsoft.graph.openShiftChangeRequest": "#/components/schemas/microsoft.graph.openShiftChangeRequest",
                        "#microsoft.graph.timeOffRequest": "#/components/schemas/microsoft.graph.timeOffRequest",
                        "#microsoft.graph.openShift": "#/components/schemas/microsoft.graph.openShift",
                        "#microsoft.graph.schedulingGroup": "#/components/schemas/microsoft.graph.schedulingGroup",
                        "#microsoft.graph.shift": "#/components/schemas/microsoft.graph.shift",
                        "#microsoft.graph.timeOffReason": "#/components/schemas/microsoft.graph.timeOffReason",
                        "#microsoft.graph.timeOff": "#/components/schemas/microsoft.graph.timeOff",
                        "#microsoft.graph.onenoteEntityBaseModel": "#/components/schemas/microsoft.graph.onenoteEntityBaseModel",
                        "#microsoft.graph.onenoteEntitySchemaObjectModel": "#/components/schemas/microsoft.graph.onenoteEntitySchemaObjectModel",
                        "#microsoft.graph.onenoteEntityHierarchyModel": "#/components/schemas/microsoft.graph.onenoteEntityHierarchyModel",
                        "#microsoft.graph.notebook": "#/components/schemas/microsoft.graph.notebook",
                        "#microsoft.graph.sectionGroup": "#/components/schemas/microsoft.graph.sectionGroup",
                        "#microsoft.graph.onenoteSection": "#/components/schemas/microsoft.graph.onenoteSection",
                        "#microsoft.graph.onenotePage": "#/components/schemas/microsoft.graph.onenotePage",
                        "#microsoft.graph.onenoteResource": "#/components/schemas/microsoft.graph.onenoteResource",
                        "#microsoft.graph.operation": "#/components/schemas/microsoft.graph.operation",
                        "#microsoft.graph.onenoteOperation": "#/components/schemas/microsoft.graph.onenoteOperation",
                        "#microsoft.graph.delegatedAdminAccessAssignment": "#/components/schemas/microsoft.graph.delegatedAdminAccessAssignment",
                        "#microsoft.graph.delegatedAdminCustomer": "#/components/schemas/microsoft.graph.delegatedAdminCustomer",
                        "#microsoft.graph.delegatedAdminServiceManagementDetail": "#/components/schemas/microsoft.graph.delegatedAdminServiceManagementDetail",
                        "#microsoft.graph.delegatedAdminRelationship": "#/components/schemas/microsoft.graph.delegatedAdminRelationship",
                        "#microsoft.graph.delegatedAdminRelationshipOperation": "#/components/schemas/microsoft.graph.delegatedAdminRelationshipOperation",
                        "#microsoft.graph.delegatedAdminRelationshipRequest": "#/components/schemas/microsoft.graph.delegatedAdminRelationshipRequest",
                        "#microsoft.graph.unifiedRoleManagementPolicyRule": "#/components/schemas/microsoft.graph.unifiedRoleManagementPolicyRule",
                        "#microsoft.graph.unifiedRoleManagementPolicyApprovalRule": "#/components/schemas/microsoft.graph.unifiedRoleManagementPolicyApprovalRule",
                        "#microsoft.graph.unifiedRoleManagementPolicyAuthenticationContextRule": "#/components/schemas/microsoft.graph.unifiedRoleManagementPolicyAuthenticationContextRule",
                        "#microsoft.graph.unifiedRoleManagementPolicyEnablementRule": "#/components/schemas/microsoft.graph.unifiedRoleManagementPolicyEnablementRule",
                        "#microsoft.graph.unifiedRoleManagementPolicyExpirationRule": "#/components/schemas/microsoft.graph.unifiedRoleManagementPolicyExpirationRule",
                        "#microsoft.graph.unifiedRoleManagementPolicyNotificationRule": "#/components/schemas/microsoft.graph.unifiedRoleManagementPolicyNotificationRule",
                        "#microsoft.graph.printConnector": "#/components/schemas/microsoft.graph.printConnector",
                        "#microsoft.graph.printOperation": "#/components/schemas/microsoft.graph.printOperation",
                        "#microsoft.graph.printerCreateOperation": "#/components/schemas/microsoft.graph.printerCreateOperation",
                        "#microsoft.graph.printerBase": "#/components/schemas/microsoft.graph.printerBase",
                        "#microsoft.graph.printer": "#/components/schemas/microsoft.graph.printer",
                        "#microsoft.graph.printerShare": "#/components/schemas/microsoft.graph.printerShare",
                        "#microsoft.graph.printService": "#/components/schemas/microsoft.graph.printService",
                        "#microsoft.graph.printTaskDefinition": "#/components/schemas/microsoft.graph.printTaskDefinition",
                        "#microsoft.graph.printDocument": "#/components/schemas/microsoft.graph.printDocument",
                        "#microsoft.graph.printTaskTrigger": "#/components/schemas/microsoft.graph.printTaskTrigger",
                        "#microsoft.graph.printJob": "#/components/schemas/microsoft.graph.printJob",
                        "#microsoft.graph.printTask": "#/components/schemas/microsoft.graph.printTask",
                        "#microsoft.graph.printServiceEndpoint": "#/components/schemas/microsoft.graph.printServiceEndpoint",
                        "#microsoft.graph.activityHistoryItem": "#/components/schemas/microsoft.graph.activityHistoryItem",
                        "#microsoft.graph.dataPolicyOperation": "#/components/schemas/microsoft.graph.dataPolicyOperation",
                        "#microsoft.graph.simulationAutomation": "#/components/schemas/microsoft.graph.simulationAutomation",
                        "#microsoft.graph.simulation": "#/components/schemas/microsoft.graph.simulation",
                        "#microsoft.graph.simulationAutomationRun": "#/components/schemas/microsoft.graph.simulationAutomationRun",
                        "#microsoft.graph.commsOperation": "#/components/schemas/microsoft.graph.commsOperation",
                        "#microsoft.graph.addLargeGalleryViewOperation": "#/components/schemas/microsoft.graph.addLargeGalleryViewOperation",
                        "#microsoft.graph.cancelMediaProcessingOperation": "#/components/schemas/microsoft.graph.cancelMediaProcessingOperation",
                        "#microsoft.graph.inviteParticipantsOperation": "#/components/schemas/microsoft.graph.inviteParticipantsOperation",
                        "#microsoft.graph.muteParticipantOperation": "#/components/schemas/microsoft.graph.muteParticipantOperation",
                        "#microsoft.graph.playPromptOperation": "#/components/schemas/microsoft.graph.playPromptOperation",
                        "#microsoft.graph.recordOperation": "#/components/schemas/microsoft.graph.recordOperation",
                        "#microsoft.graph.startHoldMusicOperation": "#/components/schemas/microsoft.graph.startHoldMusicOperation",
                        "#microsoft.graph.stopHoldMusicOperation": "#/components/schemas/microsoft.graph.stopHoldMusicOperation",
                        "#microsoft.graph.subscribeToToneOperation": "#/components/schemas/microsoft.graph.subscribeToToneOperation",
                        "#microsoft.graph.unmuteParticipantOperation": "#/components/schemas/microsoft.graph.unmuteParticipantOperation",
                        "#microsoft.graph.updateRecordingStatusOperation": "#/components/schemas/microsoft.graph.updateRecordingStatusOperation",
                        "#microsoft.graph.attendanceRecord": "#/components/schemas/microsoft.graph.attendanceRecord",
                        "#microsoft.graph.audioRoutingGroup": "#/components/schemas/microsoft.graph.audioRoutingGroup",
                        "#microsoft.graph.contentSharingSession": "#/components/schemas/microsoft.graph.contentSharingSession",
                        "#microsoft.graph.participant": "#/components/schemas/microsoft.graph.participant",
                        "#microsoft.graph.meetingAttendanceReport": "#/components/schemas/microsoft.graph.meetingAttendanceReport",
                        "#microsoft.graph.participantJoiningNotification": "#/components/schemas/microsoft.graph.participantJoiningNotification",
                        "#microsoft.graph.participantLeftNotification": "#/components/schemas/microsoft.graph.participantLeftNotification",
                        "#microsoft.graph.authenticationMethod": "#/components/schemas/microsoft.graph.authenticationMethod",
                        "#microsoft.graph.emailAuthenticationMethod": "#/components/schemas/microsoft.graph.emailAuthenticationMethod",
                        "#microsoft.graph.fido2AuthenticationMethod": "#/components/schemas/microsoft.graph.fido2AuthenticationMethod",
                        "#microsoft.graph.microsoftAuthenticatorAuthenticationMethod": "#/components/schemas/microsoft.graph.microsoftAuthenticatorAuthenticationMethod",
                        "#microsoft.graph.passwordAuthenticationMethod": "#/components/schemas/microsoft.graph.passwordAuthenticationMethod",
                        "#microsoft.graph.phoneAuthenticationMethod": "#/components/schemas/microsoft.graph.phoneAuthenticationMethod",
                        "#microsoft.graph.softwareOathAuthenticationMethod": "#/components/schemas/microsoft.graph.softwareOathAuthenticationMethod",
                        "#microsoft.graph.temporaryAccessPassAuthenticationMethod": "#/components/schemas/microsoft.graph.temporaryAccessPassAuthenticationMethod",
                        "#microsoft.graph.windowsHelloForBusinessAuthenticationMethod": "#/components/schemas/microsoft.graph.windowsHelloForBusinessAuthenticationMethod",
                        "#microsoft.graph.appCatalogs": "#/components/schemas/microsoft.graph.appCatalogs",
                        "#microsoft.graph.teamsApp": "#/components/schemas/microsoft.graph.teamsApp",
                        "#microsoft.graph.teamInfo": "#/components/schemas/microsoft.graph.teamInfo",
                        "#microsoft.graph.associatedTeamInfo": "#/components/schemas/microsoft.graph.associatedTeamInfo",
                        "#microsoft.graph.sharedWithChannelTeamInfo": "#/components/schemas/microsoft.graph.sharedWithChannelTeamInfo",
                        "#microsoft.graph.chatMessage": "#/components/schemas/microsoft.graph.chatMessage",
                        "#microsoft.graph.teamsTab": "#/components/schemas/microsoft.graph.teamsTab",
                        "#microsoft.graph.chatMessageInfo": "#/components/schemas/microsoft.graph.chatMessageInfo",
                        "#microsoft.graph.pinnedChatMessageInfo": "#/components/schemas/microsoft.graph.pinnedChatMessageInfo",
                        "#microsoft.graph.teamworkHostedContent": "#/components/schemas/microsoft.graph.teamworkHostedContent",
                        "#microsoft.graph.chatMessageHostedContent": "#/components/schemas/microsoft.graph.chatMessageHostedContent",
                        "#microsoft.graph.deletedTeam": "#/components/schemas/microsoft.graph.deletedTeam",
                        "#microsoft.graph.teamsAppDefinition": "#/components/schemas/microsoft.graph.teamsAppDefinition",
                        "#microsoft.graph.teamworkBot": "#/components/schemas/microsoft.graph.teamworkBot",
                        "#microsoft.graph.teamwork": "#/components/schemas/microsoft.graph.teamwork",
                        "#microsoft.graph.teamworkTagMember": "#/components/schemas/microsoft.graph.teamworkTagMember",
                        "#microsoft.graph.threatAssessmentResult": "#/components/schemas/microsoft.graph.threatAssessmentResult",
                        "#microsoft.graph.attachmentBase": "#/components/schemas/microsoft.graph.attachmentBase",
                        "#microsoft.graph.taskFileAttachment": "#/components/schemas/microsoft.graph.taskFileAttachment",
                        "#microsoft.graph.attachmentSession": "#/components/schemas/microsoft.graph.attachmentSession",
                        "#microsoft.graph.checklistItem": "#/components/schemas/microsoft.graph.checklistItem",
                        "#microsoft.graph.linkedResource": "#/components/schemas/microsoft.graph.linkedResource",
                        "#microsoft.graph.todoTaskList": "#/components/schemas/microsoft.graph.todoTaskList",
                        "#microsoft.graph.todoTask": "#/components/schemas/microsoft.graph.todoTask",
                        "#microsoft.graph.learningProvider": "#/components/schemas/microsoft.graph.learningProvider",
                        "#microsoft.graph.learningContent": "#/components/schemas/microsoft.graph.learningContent",
                        "#microsoft.graph.security.casesRoot": "#/components/schemas/microsoft.graph.security.casesRoot",
                        "#microsoft.graph.security.alert": "#/components/schemas/microsoft.graph.security.alert",
                        "#microsoft.graph.security.incident": "#/components/schemas/microsoft.graph.security.incident",
                        "#microsoft.graph.security.case": "#/components/schemas/microsoft.graph.security.case",
                        "#microsoft.graph.security.ediscoveryCase": "#/components/schemas/microsoft.graph.security.ediscoveryCase",
                        "#microsoft.graph.security.caseOperation": "#/components/schemas/microsoft.graph.security.caseOperation",
                        "#microsoft.graph.security.ediscoveryAddToReviewSetOperation": "#/components/schemas/microsoft.graph.security.ediscoveryAddToReviewSetOperation",
                        "#microsoft.graph.security.ediscoveryIndexOperation": "#/components/schemas/microsoft.graph.security.ediscoveryIndexOperation",
                        "#microsoft.graph.security.ediscoveryEstimateOperation": "#/components/schemas/microsoft.graph.security.ediscoveryEstimateOperation",
                        "#microsoft.graph.security.ediscoveryHoldOperation": "#/components/schemas/microsoft.graph.security.ediscoveryHoldOperation",
                        "#microsoft.graph.security.ediscoveryPurgeDataOperation": "#/components/schemas/microsoft.graph.security.ediscoveryPurgeDataOperation",
                        "#microsoft.graph.security.ediscoveryTagOperation": "#/components/schemas/microsoft.graph.security.ediscoveryTagOperation",
                        "#microsoft.graph.security.dataSet": "#/components/schemas/microsoft.graph.security.dataSet",
                        "#microsoft.graph.security.ediscoveryReviewSet": "#/components/schemas/microsoft.graph.security.ediscoveryReviewSet",
                        "#microsoft.graph.security.dataSource": "#/components/schemas/microsoft.graph.security.dataSource",
                        "#microsoft.graph.security.siteSource": "#/components/schemas/microsoft.graph.security.siteSource",
                        "#microsoft.graph.security.unifiedGroupSource": "#/components/schemas/microsoft.graph.security.unifiedGroupSource",
                        "#microsoft.graph.security.userSource": "#/components/schemas/microsoft.graph.security.userSource",
                        "#microsoft.graph.security.dataSourceContainer": "#/components/schemas/microsoft.graph.security.dataSourceContainer",
                        "#microsoft.graph.security.ediscoveryCustodian": "#/components/schemas/microsoft.graph.security.ediscoveryCustodian",
                        "#microsoft.graph.security.ediscoveryNoncustodialDataSource": "#/components/schemas/microsoft.graph.security.ediscoveryNoncustodialDataSource",
                        "#microsoft.graph.security.search": "#/components/schemas/microsoft.graph.security.search",
                        "#microsoft.graph.security.ediscoverySearch": "#/components/schemas/microsoft.graph.security.ediscoverySearch",
                        "#microsoft.graph.security.ediscoveryReviewSetQuery": "#/components/schemas/microsoft.graph.security.ediscoveryReviewSetQuery",
                        "#microsoft.graph.security.ediscoveryCaseSettings": "#/components/schemas/microsoft.graph.security.ediscoveryCaseSettings",
                        "#microsoft.graph.security.tag": "#/components/schemas/microsoft.graph.security.tag",
                        "#microsoft.graph.security.ediscoveryReviewTag": "#/components/schemas/microsoft.graph.security.ediscoveryReviewTag",
                        "#microsoft.graph.termStore.store": "#/components/schemas/microsoft.graph.termStore.store",
                        "#microsoft.graph.termStore.group": "#/components/schemas/microsoft.graph.termStore.group",
                        "#microsoft.graph.termStore.set": "#/components/schemas/microsoft.graph.termStore.set",
                        "#microsoft.graph.termStore.relation": "#/components/schemas/microsoft.graph.termStore.relation",
                        "#microsoft.graph.termStore.term": "#/components/schemas/microsoft.graph.termStore.term",
                        "#microsoft.graph.callRecords.callRecord": "#/components/schemas/microsoft.graph.callRecords.callRecord",
                        "#microsoft.graph.callRecords.session": "#/components/schemas/microsoft.graph.callRecords.session",
                        "#microsoft.graph.callRecords.segment": "#/components/schemas/microsoft.graph.callRecords.segment",
                        "#microsoft.graph.externalConnectors.connectionOperation": "#/components/schemas/microsoft.graph.externalConnectors.connectionOperation",
                        "#microsoft.graph.externalConnectors.externalConnection": "#/components/schemas/microsoft.graph.externalConnectors.externalConnection",
                        "#microsoft.graph.externalConnectors.externalGroup": "#/components/schemas/microsoft.graph.externalConnectors.externalGroup",
                        "#microsoft.graph.externalConnectors.externalItem": "#/components/schemas/microsoft.graph.externalConnectors.externalItem",
                        "#microsoft.graph.externalConnectors.schema": "#/components/schemas/microsoft.graph.externalConnectors.schema",
                        "#microsoft.graph.externalConnectors.identity": "#/components/schemas/microsoft.graph.externalConnectors.identity"
                    }
                }
            },
            "microsoft.graph.directoryObject": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "directoryObject",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "deletedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Date and time when this object was deleted. Always null when the object hasn't been deleted.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.user": "#/components/schemas/microsoft.graph.user",
                                "#microsoft.graph.appRoleAssignment": "#/components/schemas/microsoft.graph.appRoleAssignment",
                                "#microsoft.graph.application": "#/components/schemas/microsoft.graph.application",
                                "#microsoft.graph.servicePrincipal": "#/components/schemas/microsoft.graph.servicePrincipal",
                                "#microsoft.graph.policyBase": "#/components/schemas/microsoft.graph.policyBase",
                                "#microsoft.graph.appManagementPolicy": "#/components/schemas/microsoft.graph.appManagementPolicy",
                                "#microsoft.graph.stsPolicy": "#/components/schemas/microsoft.graph.stsPolicy",
                                "#microsoft.graph.homeRealmDiscoveryPolicy": "#/components/schemas/microsoft.graph.homeRealmDiscoveryPolicy",
                                "#microsoft.graph.tokenIssuancePolicy": "#/components/schemas/microsoft.graph.tokenIssuancePolicy",
                                "#microsoft.graph.tokenLifetimePolicy": "#/components/schemas/microsoft.graph.tokenLifetimePolicy",
                                "#microsoft.graph.claimsMappingPolicy": "#/components/schemas/microsoft.graph.claimsMappingPolicy",
                                "#microsoft.graph.activityBasedTimeoutPolicy": "#/components/schemas/microsoft.graph.activityBasedTimeoutPolicy",
                                "#microsoft.graph.authorizationPolicy": "#/components/schemas/microsoft.graph.authorizationPolicy",
                                "#microsoft.graph.crossTenantAccessPolicy": "#/components/schemas/microsoft.graph.crossTenantAccessPolicy",
                                "#microsoft.graph.tenantAppManagementPolicy": "#/components/schemas/microsoft.graph.tenantAppManagementPolicy",
                                "#microsoft.graph.permissionGrantPolicy": "#/components/schemas/microsoft.graph.permissionGrantPolicy",
                                "#microsoft.graph.identitySecurityDefaultsEnforcementPolicy": "#/components/schemas/microsoft.graph.identitySecurityDefaultsEnforcementPolicy",
                                "#microsoft.graph.extensionProperty": "#/components/schemas/microsoft.graph.extensionProperty",
                                "#microsoft.graph.endpoint": "#/components/schemas/microsoft.graph.endpoint",
                                "#microsoft.graph.group": "#/components/schemas/microsoft.graph.group",
                                "#microsoft.graph.resourceSpecificPermissionGrant": "#/components/schemas/microsoft.graph.resourceSpecificPermissionGrant",
                                "#microsoft.graph.administrativeUnit": "#/components/schemas/microsoft.graph.administrativeUnit",
                                "#microsoft.graph.contract": "#/components/schemas/microsoft.graph.contract",
                                "#microsoft.graph.device": "#/components/schemas/microsoft.graph.device",
                                "#microsoft.graph.directoryObjectPartnerReference": "#/components/schemas/microsoft.graph.directoryObjectPartnerReference",
                                "#microsoft.graph.directoryRole": "#/components/schemas/microsoft.graph.directoryRole",
                                "#microsoft.graph.directoryRoleTemplate": "#/components/schemas/microsoft.graph.directoryRoleTemplate",
                                "#microsoft.graph.groupSettingTemplate": "#/components/schemas/microsoft.graph.groupSettingTemplate",
                                "#microsoft.graph.organization": "#/components/schemas/microsoft.graph.organization",
                                "#microsoft.graph.orgContact": "#/components/schemas/microsoft.graph.orgContact"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.appRoleAssignment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                    },
                    {
                        "title": "appRoleAssignment",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "appRoleId": {
                                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                "type": "string",
                                "description": "The identifier (id) for the app role which is assigned to the principal. This app role must be exposed in the appRoles property on the resource application's service principal (resourceId). If the resource application has not declared any app roles, a default app role ID of 00000000-0000-0000-0000-000000000000 can be specified to signal that the principal is assigned to the resource app without any specific app roles. Required on create.",
                                "format": "uuid"
                            },
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The time when the app role assignment was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "principalDisplayName": {
                                "type": "string",
                                "description": "The display name of the user, group, or service principal that was granted the app role assignment. Read-only. Supports $filter (eq and startswith).",
                                "nullable": true
                            },
                            "principalId": {
                                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                "type": "string",
                                "description": "The unique identifier (id) for the user, security group, or service principal being granted the app role. Security groups with dynamic memberships are supported. Required on create.",
                                "format": "uuid",
                                "nullable": true
                            },
                            "principalType": {
                                "type": "string",
                                "description": "The type of the assigned principal. This can either be User, Group, or ServicePrincipal. Read-only.",
                                "nullable": true
                            },
                            "resourceDisplayName": {
                                "type": "string",
                                "description": "The display name of the resource app's service principal to which the assignment is made.",
                                "nullable": true
                            },
                            "resourceId": {
                                "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                                "type": "string",
                                "description": "The unique identifier (id) for the resource service principal for which the assignment is made. Required on create. Supports $filter (eq only).",
                                "format": "uuid",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.appRoleAssignment"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.appRoleAssignment"
            },
            "microsoft.graph.outlookItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "outlookItem",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "categories": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "description": "The categories associated with the item"
                            },
                            "changeKey": {
                                "type": "string",
                                "description": "Identifies the version of the item. Every time the item is changed, changeKey changes as well. This allows Exchange to apply changes to the correct version of the object. Read-only.",
                                "nullable": true
                            },
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                                "format": "date-time",
                                "nullable": true
                            },
                            "lastModifiedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                                "format": "date-time",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.event": "#/components/schemas/microsoft.graph.event",
                                "#microsoft.graph.contact": "#/components/schemas/microsoft.graph.contact",
                                "#microsoft.graph.message": "#/components/schemas/microsoft.graph.message",
                                "#microsoft.graph.calendarSharingMessage": "#/components/schemas/microsoft.graph.calendarSharingMessage",
                                "#microsoft.graph.eventMessage": "#/components/schemas/microsoft.graph.eventMessage",
                                "#microsoft.graph.eventMessageRequest": "#/components/schemas/microsoft.graph.eventMessageRequest",
                                "#microsoft.graph.eventMessageResponse": "#/components/schemas/microsoft.graph.eventMessageResponse",
                                "#microsoft.graph.post": "#/components/schemas/microsoft.graph.post"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.event": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.outlookItem"
                    },
                    {
                        "title": "event",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "allowNewTimeProposals": {
                                "type": "boolean",
                                "description": "true if the meeting organizer allows invitees to propose a new time when responding; otherwise, false. Optional. Default is true.",
                                "nullable": true
                            },
                            "attendees": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "The collection of attendees for the event."
                            },
                            "body": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The body of the message associated with the event. It can be in HTML or text format."
                            },
                            "bodyPreview": {
                                "type": "string",
                                "description": "The preview of the message associated with the event. It is in text format.",
                                "nullable": true
                            },
                            "end": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The date, time, and time zone that the event ends. By default, the end time is in UTC."
                            },
                            "hasAttachments": {
                                "type": "boolean",
                                "description": "Set to true if the event has attachments.",
                                "nullable": true
                            },
                            "hideAttendees": {
                                "type": "boolean",
                                "description": "When set to true, each attendee only sees themselves in the meeting request and meeting Tracking list. Default is false.",
                                "nullable": true
                            },
                            "iCalUId": {
                                "type": "string",
                                "description": "A unique identifier for an event across calendars. This ID is different for each occurrence in a recurring series. Read-only.",
                                "nullable": true
                            },
                            "importance": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "isAllDay": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "isCancelled": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "isDraft": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "isOnlineMeeting": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "isOrganizer": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "isReminderOn": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "location": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "locations": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                }
                            },
                            "onlineMeeting": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "onlineMeetingProvider": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "onlineMeetingUrl": {
                                "type": "string",
                                "nullable": true
                            },
                            "organizer": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "originalEndTimeZone": {
                                "type": "string",
                                "nullable": true
                            },
                            "originalStart": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "originalStartTimeZone": {
                                "type": "string",
                                "nullable": true
                            },
                            "recurrence": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "reminderMinutesBeforeStart": {
                                "maximum": 2147483647,
                                "minimum": -2147483648,
                                "type": "integer",
                                "format": "int32",
                                "nullable": true
                            },
                            "responseRequested": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "responseStatus": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "sensitivity": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "seriesMasterId": {
                                "type": "string",
                                "nullable": true
                            },
                            "showAs": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "start": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "subject": {
                                "type": "string",
                                "nullable": true
                            },
                            "transactionId": {
                                "type": "string",
                                "nullable": true
                            },
                            "type": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "webLink": {
                                "type": "string",
                                "nullable": true
                            },
                            "attachments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                                },
                                "description": "The collection of FileAttachment, ItemAttachment, and referenceAttachment attachments for the event. Navigation property. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "calendar": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The calendar that contains the event. Navigation property. Read-only.",
                                "x-ms-navigationProperty": true
                            },
                            "extensions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.extension"
                                },
                                "description": "The collection of open extensions defined for the event. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "instances": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.event"
                                },
                                "description": "The occurrences of a recurring series, if the event is a series master. This property includes occurrences that are part of the recurrence pattern, and exceptions that have been modified, but does not include occurrences that have been cancelled from the series. Navigation property. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "multiValueExtendedProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                                },
                                "description": "The collection of multi-value extended properties defined for the event. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "singleValueExtendedProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                                },
                                "description": "The collection of single-value extended properties defined for the event. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.event"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.event"
            },
            "microsoft.graph.baseItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "baseItem",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "createdBy": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Identity of the user, device, or application which created the item. Read-only."
                            },
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Date and time of item creation. Read-only.",
                                "format": "date-time"
                            },
                            "description": {
                                "type": "string",
                                "description": "Provides a user-visible description of the item. Optional.",
                                "nullable": true
                            },
                            "eTag": {
                                "type": "string",
                                "description": "ETag for the item. Read-only.",
                                "nullable": true
                            },
                            "lastModifiedBy": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Identity of the user, device, and application which last modified the item. Read-only."
                            },
                            "lastModifiedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Date and time the item was last modified. Read-only.",
                                "format": "date-time"
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the item. Read-write.",
                                "nullable": true
                            },
                            "parentReference": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Parent information, if the item has a parent. Read-write."
                            },
                            "webUrl": {
                                "type": "string",
                                "description": "URL that displays the resource in the browser. Read-only.",
                                "nullable": true
                            },
                            "createdByUser": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Identity of the user who created the item. Read-only.",
                                "x-ms-navigationProperty": true
                            },
                            "lastModifiedByUser": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Identity of the user who last modified the item. Read-only.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.drive": "#/components/schemas/microsoft.graph.drive",
                                "#microsoft.graph.site": "#/components/schemas/microsoft.graph.site",
                                "#microsoft.graph.list": "#/components/schemas/microsoft.graph.list",
                                "#microsoft.graph.driveItem": "#/components/schemas/microsoft.graph.driveItem",
                                "#microsoft.graph.listItem": "#/components/schemas/microsoft.graph.listItem",
                                "#microsoft.graph.sharedDriveItem": "#/components/schemas/microsoft.graph.sharedDriveItem"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.drive": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.baseItem"
                    },
                    {
                        "title": "drive",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "driveType": {
                                "type": "string",
                                "description": "Describes the type of drive represented by this resource. OneDrive personal drives will return personal. OneDrive for Business will return business. SharePoint document libraries will return documentLibrary. Read-only.",
                                "nullable": true
                            },
                            "owner": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Optional. The user account that owns the drive. Read-only."
                            },
                            "quota": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Optional. Information about the drive's storage space quota. Read-only."
                            },
                            "sharePointIds": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "system": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "If present, indicates that this is a system-managed drive. Read-only."
                            },
                            "bundles": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                                },
                                "description": "Collection of [bundles][bundle] (albums and multi-select-shared sets of items). Only in personal OneDrive.",
                                "x-ms-navigationProperty": true
                            },
                            "following": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                                },
                                "description": "The list of items the user is following. Only in OneDrive for Business.",
                                "x-ms-navigationProperty": true
                            },
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                                },
                                "description": "All items contained in the drive. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "list": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "For drives in SharePoint, the underlying document library list. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "root": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The root folder of the drive. Read-only.",
                                "x-ms-navigationProperty": true
                            },
                            "special": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                                },
                                "description": "Collection of common folders available in OneDrive. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.drive"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.drive"
            },
            "microsoft.graph.site": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.baseItem"
                    },
                    {
                        "title": "site",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "displayName": {
                                "type": "string",
                                "description": "The full title for the site. Read-only.",
                                "nullable": true
                            },
                            "error": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "root": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "If present, indicates that this is the root site in the site collection. Read-only."
                            },
                            "sharepointIds": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only."
                            },
                            "siteCollection": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Provides details about the site's site collection. Available only on the root site. Read-only."
                            },
                            "analytics": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Analytics about the view activities that took place in this site.",
                                "x-ms-navigationProperty": true
                            },
                            "columns": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                                },
                                "description": "The collection of column definitions reusable across lists under this site.",
                                "x-ms-navigationProperty": true
                            },
                            "contentTypes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.contentType"
                                },
                                "description": "The collection of content types defined for this site.",
                                "x-ms-navigationProperty": true
                            },
                            "drive": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The default drive (document library) for this site.",
                                "x-ms-navigationProperty": true
                            },
                            "drives": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.drive"
                                },
                                "description": "The collection of drives (document libraries) under this site.",
                                "x-ms-navigationProperty": true
                            },
                            "externalColumns": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                                },
                                "x-ms-navigationProperty": true
                            },
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.baseItem"
                                },
                                "description": "Used to address any item contained in this site. This collection can't be enumerated.",
                                "x-ms-navigationProperty": true
                            },
                            "lists": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.list"
                                },
                                "description": "The collection of lists under this site.",
                                "x-ms-navigationProperty": true
                            },
                            "operations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.richLongRunningOperation"
                                },
                                "description": "The collection of long-running operations on the site.",
                                "x-ms-navigationProperty": true
                            },
                            "permissions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.permission"
                                },
                                "description": "The permissions associated with the site. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "sites": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.site"
                                },
                                "description": "The collection of the sub-sites under this site.",
                                "x-ms-navigationProperty": true
                            },
                            "termStore": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The default termStore under this site.",
                                "x-ms-navigationProperty": true
                            },
                            "termStores": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.termStore.store"
                                },
                                "description": "The collection of termStores under this site.",
                                "x-ms-navigationProperty": true
                            },
                            "onenote": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Calls the OneNote service for notebook related operations.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.site"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.site"
            },
            "microsoft.graph.extension": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "extension",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.openTypeExtension": "#/components/schemas/microsoft.graph.openTypeExtension"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.profilePhoto": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "profilePhoto",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "height": {
                                "maximum": 2147483647,
                                "minimum": -2147483648,
                                "type": "integer",
                                "description": "The height of the photo. Read-only.",
                                "format": "int32",
                                "nullable": true
                            },
                            "width": {
                                "maximum": 2147483647,
                                "minimum": -2147483648,
                                "type": "integer",
                                "description": "The width of the photo. Read-only.",
                                "format": "int32",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.profilePhoto"
            },
            "microsoft.graph.team": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "team",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "classification": {
                                "type": "string",
                                "description": "An optional label. Typically describes the data or business sensitivity of the team. Must match one of a pre-configured set in the tenant's directory.",
                                "nullable": true
                            },
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Timestamp at which the team was created.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "description": {
                                "type": "string",
                                "description": "An optional description for the team. Maximum length: 1024 characters.",
                                "nullable": true
                            },
                            "displayName": {
                                "type": "string",
                                "description": "The name of the team.",
                                "nullable": true
                            },
                            "funSettings": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.teamFunSettings"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Settings to configure use of Giphy, memes, and stickers in the team."
                            },
                            "guestSettings": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.teamGuestSettings"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Settings to configure whether guests can create, update, or delete channels in the team."
                            },
                            "internalId": {
                                "type": "string",
                                "description": "A unique ID for the team that has been used in a few places such as the audit log/Office 365 Management Activity API.",
                                "nullable": true
                            },
                            "isArchived": {
                                "type": "boolean",
                                "description": "Whether this team is in read-only mode.",
                                "nullable": true
                            },
                            "memberSettings": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.teamMemberSettings"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Settings to configure whether members can perform certain actions, for example, create channels and add bots, in the team."
                            },
                            "messagingSettings": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.teamMessagingSettings"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Settings to configure messaging and mentions in the team."
                            },
                            "specialization": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.teamSpecialization"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Optional. Indicates whether the team is intended for a particular use case.  Each team specialization has access to unique behaviors and experiences targeted to its use case."
                            },
                            "summary": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.teamSummary"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Contains summary information about the team, including number of owners, members, and guests."
                            },
                            "tenantId": {
                                "type": "string",
                                "description": "The ID of the Azure Active Directory tenant.",
                                "nullable": true
                            },
                            "visibility": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.teamVisibilityType"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The visibility of the group and team. Defaults to Public."
                            },
                            "webUrl": {
                                "type": "string",
                                "description": "A hyperlink that will go to the team in the Microsoft Teams client. This is the URL that you get when you right-click a team in the Microsoft Teams client and select Get link to team. This URL should be treated as an opaque blob, and not parsed.",
                                "nullable": true
                            },
                            "allChannels": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.channel"
                                },
                                "description": "List of channels either hosted in or shared with the team (incoming channels).",
                                "x-ms-navigationProperty": true
                            },
                            "channels": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.channel"
                                },
                                "description": "The collection of channels and messages associated with the team.",
                                "x-ms-navigationProperty": true
                            },
                            "group": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.group"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "x-ms-navigationProperty": true
                            },
                            "incomingChannels": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.channel"
                                },
                                "description": "List of channels shared with the team.",
                                "x-ms-navigationProperty": true
                            },
                            "installedApps": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamsAppInstallation"
                                },
                                "description": "The apps installed in this team.",
                                "x-ms-navigationProperty": true
                            },
                            "members": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                                },
                                "description": "Members and owners of the team.",
                                "x-ms-navigationProperty": true
                            },
                            "operations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamsAsyncOperation"
                                },
                                "description": "The async operations that ran or are running on this team.",
                                "x-ms-navigationProperty": true
                            },
                            "photo": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The profile photo for the team.",
                                "x-ms-navigationProperty": true
                            },
                            "primaryChannel": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.channel"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The general channel for the team.",
                                "x-ms-navigationProperty": true
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamworkTag"
                                },
                                "description": "The tags associated with the team.",
                                "x-ms-navigationProperty": true
                            },
                            "template": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.teamsTemplate"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The template this team was created from. See available templates.",
                                "x-ms-navigationProperty": true
                            },
                            "schedule": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.schedule"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The schedule of shifts for this team.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.team"
            },
            "microsoft.graph.channel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "channel",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Read only. Timestamp at which the channel was created.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "description": {
                                "type": "string",
                                "description": "Optional textual description for the channel.",
                                "nullable": true
                            },
                            "displayName": {
                                "type": "string",
                                "description": "Channel name as it will appear to the user in Microsoft Teams. The maximum length is 50 characters."
                            },
                            "email": {
                                "type": "string",
                                "description": "The email address for sending messages to the channel. Read-only.",
                                "nullable": true
                            },
                            "isFavoriteByDefault": {
                                "type": "boolean",
                                "description": "Indicates whether the channel should automatically be marked 'favorite' for all members of the team. Can only be set programmatically with Create team. Default: false.",
                                "nullable": true
                            },
                            "membershipType": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The type of the channel. Can be set during creation and can't be changed. The possible values are: standard, private, unknownFutureValue, shared. The default value is standard. Note that you must use the Prefer: include-unknown-enum-members request header to get the following value in this evolvable enum: shared."
                            },
                            "tenantId": {
                                "type": "string",
                                "description": "The ID of the Azure Active Directory tenant.",
                                "nullable": true
                            },
                            "webUrl": {
                                "type": "string",
                                "description": "A hyperlink that will go to the channel in Microsoft Teams. This is the URL that you get when you right-click a channel in Microsoft Teams and select Get link to channel. This URL should be treated as an opaque blob, and not parsed. Read-only.",
                                "nullable": true
                            },
                            "filesFolder": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Metadata for the location where the channel's files are stored.",
                                "x-ms-navigationProperty": true
                            },
                            "members": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                                },
                                "description": "A collection of membership records associated with the channel.",
                                "x-ms-navigationProperty": true
                            },
                            "messages": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                                },
                                "description": "A collection of all the messages in the channel. A navigation property. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "sharedWithTeams": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.sharedWithChannelTeamInfo"
                                },
                                "description": "A collection of teams with which a channel is shared.",
                                "x-ms-navigationProperty": true
                            },
                            "tabs": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamsTab"
                                },
                                "description": "A collection of all the tabs in the channel. A navigation property.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.channel"
            },
            "microsoft.graph.group": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                    },
                    {
                        "title": "group",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "assignedLabels": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "The list of sensitivity label pairs (label ID, label name) associated with a Microsoft 365 group. Returned only on $select."
                            },
                            "assignedLicenses": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "The licenses that are assigned to the group. Returned only on $select. Supports $filter (eq).Read-only."
                            },
                            "classification": {
                                "type": "string",
                                "description": "Describes a classification for the group (such as low, medium or high business impact). Valid values for this property are defined by creating a ClassificationList setting value, based on the template definition.Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).",
                                "nullable": true
                            },
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Timestamp of when the group was created. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "description": {
                                "type": "string",
                                "description": "An optional description for the group. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith) and $search.",
                                "nullable": true
                            },
                            "displayName": {
                                "type": "string",
                                "description": "The display name for the group. This property is required when a group is created and cannot be cleared during updates. Maximum length is 256 characters. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values), $search, and $orderBy.",
                                "nullable": true
                            },
                            "expirationDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Timestamp of when the group is set to expire. The value cannot be modified and is automatically populated when the group is created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "groupTypes": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Specifies the group type and its membership. If the collection contains Unified, the group is a Microsoft 365 group; otherwise, it's either a security group or distribution group. For details, see groups overview.If the collection includes DynamicMembership, the group has dynamic membership; otherwise, membership is static. Returned by default. Supports $filter (eq, not)."
                            },
                            "hasMembersWithLicenseErrors": {
                                "type": "boolean",
                                "description": "Indicates whether there are members in this group that have license errors from its group-based license assignment. This property is never returned on a GET operation. You can use it as a $filter argument to get groups that have members with license errors (that is, filter for this property being true). See an example. Supports $filter (eq).",
                                "nullable": true
                            },
                            "isAssignableToRole": {
                                "type": "boolean",
                                "description": "Indicates whether this group can be assigned to an Azure Active Directory role or not. Optional. This property can only be set while creating the group and is immutable. If set to true, the securityEnabled property must also be set to true, visibility must be Hidden, and the group cannot be a dynamic group (that is, groupTypes cannot contain DynamicMembership). Only callers in Global Administrator and Privileged Role Administrator roles can set this property. The caller must also be assigned the RoleManagement.ReadWrite.Directory permission to set this property or update the membership of such groups. For more, see Using a group to manage Azure AD role assignmentsUsing this feature requires a Azure AD Premium P1 license. Returned by default. Supports $filter (eq, ne, not).",
                                "nullable": true
                            },
                            "licenseProcessingState": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Indicates status of the group license assignment to all members of the group. Default value is false. Read-only. Possible values: QueuedForProcessing, ProcessingInProgress, and ProcessingComplete.Returned only on $select. Read-only."
                            },
                            "mail": {
                                "type": "string",
                                "description": "The SMTP address for the group, for example, 'serviceadmins@contoso.onmicrosoft.com'. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).",
                                "nullable": true
                            },
                            "mailEnabled": {
                                "type": "boolean",
                                "description": "Specifies whether the group is mail-enabled. Required. Returned by default. Supports $filter (eq, ne, not).",
                                "nullable": true
                            },
                            "mailNickname": {
                                "type": "string",
                                "description": "The mail alias for the group, unique for Microsoft 365 groups in the organization. Maximum length is 64 characters. This property can contain only characters in the ASCII character set 0 - 127 except the following: @ () / [] ' ; : <> , SPACE. Required. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).",
                                "nullable": true
                            },
                            "membershipRule": {
                                "type": "string",
                                "description": "The rule that determines members for this group if the group is a dynamic group (groupTypes contains DynamicMembership). For more information about the syntax of the membership rule, see Membership Rules syntax. Returned by default. Supports $filter (eq, ne, not, ge, le, startsWith).",
                                "nullable": true
                            },
                            "membershipRuleProcessingState": {
                                "type": "string",
                                "description": "Indicates whether the dynamic membership processing is on or paused. Possible values are On or Paused. Returned by default. Supports $filter (eq, ne, not, in).",
                                "nullable": true
                            },
                            "onPremisesDomainName": {
                                "type": "string",
                                "nullable": true
                            },
                            "onPremisesLastSyncDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Indicates the last time at which the group was synced with the on-premises directory.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Read-only. Supports $filter (eq, ne, not, ge, le, in).",
                                "format": "date-time",
                                "nullable": true
                            },
                            "onPremisesNetBiosName": {
                                "type": "string",
                                "nullable": true
                            },
                            "onPremisesProvisioningErrors": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "Errors when using Microsoft synchronization product during provisioning. Returned by default. Supports $filter (eq, not)."
                            },
                            "onPremisesSamAccountName": {
                                "type": "string",
                                "description": "Contains the on-premises SAM account name synchronized from the on-premises directory. The property is only populated for customers who are synchronizing their on-premises directory to Azure Active Directory via Azure AD Connect.Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith). Read-only.",
                                "nullable": true
                            },
                            "onPremisesSecurityIdentifier": {
                                "type": "string",
                                "description": "Contains the on-premises security identifier (SID) for the group that was synchronized from on-premises to the cloud. Returned by default. Supports $filter (eq including on null values). Read-only.",
                                "nullable": true
                            },
                            "onPremisesSyncEnabled": {
                                "type": "boolean",
                                "description": "true if this group is synced from an on-premises directory; false if this group was originally synced from an on-premises directory but is no longer synced; null if this object has never been synced from an on-premises directory (default). Returned by default. Read-only. Supports $filter (eq, ne, not, in, and eq on null values).",
                                "nullable": true
                            },
                            "preferredDataLocation": {
                                "type": "string",
                                "description": "The preferred data location for the Microsoft 365 group. By default, the group inherits the group creator's preferred data location. To set this property, the calling user must be assigned one of the following Azure AD roles:  Global Administrator  User Account Administrator Directory Writer  Exchange Administrator  SharePoint Administrator  For more information about this property, see OneDrive Online Multi-Geo. Nullable. Returned by default.",
                                "nullable": true
                            },
                            "preferredLanguage": {
                                "type": "string",
                                "description": "The preferred language for a Microsoft 365 group. Should follow ISO 639-1 Code; for example en-US. Returned by default. Supports $filter (eq, ne, not, ge, le, in, startsWith, and eq on null values).",
                                "nullable": true
                            },
                            "proxyAddresses": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Email addresses for the group that direct to the same group mailbox. For example: ['SMTP: bob@contoso.com', 'smtp: bob@sales.contoso.com']. The any operator is required to filter expressions on multi-valued properties. Returned by default. Read-only. Not nullable. Supports $filter (eq, not, ge, le, startsWith, endsWith, /$count eq 0, /$count ne 0)."
                            },
                            "renewedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Timestamp of when the group was last renewed. This cannot be modified directly and is only updated via the renew service action. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Returned by default. Supports $filter (eq, ne, not, ge, le, in). Read-only.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "securityEnabled": {
                                "type": "boolean",
                                "description": "Specifies whether the group is a security group. Required. Returned by default. Supports $filter (eq, ne, not, in).",
                                "nullable": true
                            },
                            "securityIdentifier": {
                                "type": "string",
                                "description": "Security identifier of the group, used in Windows scenarios. Returned by default.",
                                "nullable": true
                            },
                            "theme": {
                                "type": "string",
                                "description": "Specifies a Microsoft 365 group's color theme. Possible values are Teal, Purple, Green, Blue, Pink, Orange or Red. Returned by default.",
                                "nullable": true
                            },
                            "visibility": {
                                "type": "string",
                                "description": "Specifies the group join policy and group content visibility for groups. Possible values are: Private, Public, or HiddenMembership. HiddenMembership can be set only for Microsoft 365 groups, when the groups are created. It can't be updated later. Other values of visibility can be updated after group creation. If visibility value is not specified during group creation on Microsoft Graph, a security group is created as Private by default and Microsoft 365 group is Public. Groups assignable to roles are always Private. See group visibility options to learn more. Returned by default. Nullable.",
                                "nullable": true
                            },
                            "allowExternalSenders": {
                                "type": "boolean",
                                "description": "Indicates if people external to the organization can send messages to the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).",
                                "nullable": true
                            },
                            "autoSubscribeNewMembers": {
                                "type": "boolean",
                                "description": "Indicates if new members added to the group will be auto-subscribed to receive email notifications. You can set this property in a PATCH request for the group; do not set it in the initial POST request that creates the group. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).",
                                "nullable": true
                            },
                            "hideFromAddressLists": {
                                "type": "boolean",
                                "description": "True if the group is not displayed in certain parts of the Outlook UI: the Address Book, address lists for selecting message recipients, and the Browse Groups dialog for searching groups; otherwise, false. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).",
                                "nullable": true
                            },
                            "hideFromOutlookClients": {
                                "type": "boolean",
                                "description": "True if the group is not displayed in Outlook clients, such as Outlook for Windows and Outlook on the web; otherwise, false. Default value is false. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).",
                                "nullable": true
                            },
                            "isSubscribedByMail": {
                                "type": "boolean",
                                "description": "Indicates whether the signed-in user is subscribed to receive email conversations. Default value is true. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).",
                                "nullable": true
                            },
                            "unseenCount": {
                                "maximum": 2147483647,
                                "minimum": -2147483648,
                                "type": "integer",
                                "description": "Count of conversations that have received new posts since the signed-in user last visited the group. Returned only on $select. Supported only on the Get group API (GET /groups/{ID}).",
                                "format": "int32",
                                "nullable": true
                            },
                            "isArchived": {
                                "type": "boolean",
                                "description": "When a group is associated with a team this property determines whether the team is in read-only mode.To read this property, use the /group/{groupId}/team endpoint or the Get team API. To update this property, use the archiveTeam and unarchiveTeam APIs.",
                                "nullable": true
                            },
                            "appRoleAssignments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.appRoleAssignment"
                                },
                                "description": "Represents the app roles a group has been granted for an application. Supports $expand.",
                                "x-ms-navigationProperty": true
                            },
                            "createdOnBehalfOf": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The user (or application) that created the group. NOTE: This is not set if the user is an administrator. Read-only.",
                                "x-ms-navigationProperty": true
                            },
                            "memberOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                                },
                                "description": "Groups that this group is a member of. HTTP Methods: GET (supported for all groups). Read-only. Nullable. Supports $expand.",
                                "x-ms-navigationProperty": true
                            },
                            "members": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                                },
                                "description": "The members of this group, who can be users, devices, other groups, or service principals. Supports the List members, Add member, and Remove member operations. Nullable. Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=members($select=id,userPrincipalName,displayName).",
                                "x-ms-navigationProperty": true
                            },
                            "membersWithLicenseErrors": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                                },
                                "description": "A list of group members with license errors from this group-based license assignment. Read-only.",
                                "x-ms-navigationProperty": true
                            },
                            "owners": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                                },
                                "description": "The owners of the group. Limited to 100 owners. Nullable. If this property is not specified when creating a Microsoft 365 group, the calling user is automatically assigned as the group owner.  Supports $filter (/$count eq 0, /$count ne 0, /$count eq 1, /$count ne 1). Supports $expand including nested $select. For example, /groups?$filter=startsWith(displayName,'Role')&$select=id,displayName&$expand=owners($select=id,userPrincipalName,displayName).",
                                "x-ms-navigationProperty": true
                            },
                            "permissionGrants": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.resourceSpecificPermissionGrant"
                                },
                                "description": "The permission that has been granted for a group to a specific application. Supports $expand.",
                                "x-ms-navigationProperty": true
                            },
                            "settings": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.groupSetting"
                                },
                                "description": "Settings that can govern this group's behavior, like whether members can invite guest users to the group. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "transitiveMemberOf": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                                },
                                "description": "The groups that a group is a member of, either directly and through nested membership. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "transitiveMembers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                                },
                                "description": "The direct and transitive members of a group. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "acceptedSenders": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                                },
                                "description": "The list of users or groups that are allowed to create post's or calendar events in this group. If this list is non-empty then only users or groups listed here are allowed to post.",
                                "x-ms-navigationProperty": true
                            },
                            "calendar": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The group's calendar. Read-only.",
                                "x-ms-navigationProperty": true
                            },
                            "calendarView": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.event"
                                },
                                "description": "The calendar view for the calendar. Read-only.",
                                "x-ms-navigationProperty": true
                            },
                            "conversations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.conversation"
                                },
                                "description": "The group's conversations.",
                                "x-ms-navigationProperty": true
                            },
                            "events": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.event"
                                },
                                "description": "The group's calendar events.",
                                "x-ms-navigationProperty": true
                            },
                            "rejectedSenders": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                                },
                                "description": "The list of users or groups that are not allowed to create posts or calendar events in this group. Nullable",
                                "x-ms-navigationProperty": true
                            },
                            "threads": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                                },
                                "description": "The group's conversation threads. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "drive": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The group's default drive. Read-only.",
                                "x-ms-navigationProperty": true
                            },
                            "drives": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.drive"
                                },
                                "description": "The group's drives. Read-only.",
                                "x-ms-navigationProperty": true
                            },
                            "sites": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.site"
                                },
                                "description": "The list of SharePoint sites in this group. Access the default site with /sites/root.",
                                "x-ms-navigationProperty": true
                            },
                            "extensions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.extension"
                                },
                                "description": "The collection of open extensions defined for the group. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "groupLifecyclePolicies": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.groupLifecyclePolicy"
                                },
                                "description": "The collection of lifecycle policies for this group. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "planner": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Entry-point to Planner resource that might exist for a Unified Group.",
                                "x-ms-navigationProperty": true
                            },
                            "onenote": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "x-ms-navigationProperty": true
                            },
                            "photo": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The group's profile photo",
                                "x-ms-navigationProperty": true
                            },
                            "photos": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.profilePhoto"
                                },
                                "description": "The profile photos owned by the group. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "team": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The team associated with this group.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.group"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.group"
            },
            "microsoft.graph.teamsAppInstallation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "teamsAppInstallation",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "teamsApp": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The app that is installed.",
                                "x-ms-navigationProperty": true
                            },
                            "teamsAppDefinition": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The details of this version of the app.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.userScopeTeamsAppInstallation": "#/components/schemas/microsoft.graph.userScopeTeamsAppInstallation"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.conversationMember": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "conversationMember",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "displayName": {
                                "type": "string",
                                "description": "The display name of the user.",
                                "nullable": true
                            },
                            "roles": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "description": "The roles for that user. This property only contains additional qualifiers when relevant - for example, if the member has owner privileges, the roles property contains owner as one of the values. Similarly, if the member is a guest, the roles property contains guest as one of the values. A basic member should not have any values specified in the roles property."
                            },
                            "visibleHistoryStartDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The timestamp denoting how far back a conversation's history is shared with the conversation member. This property is settable only for members of a chat.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.aadUserConversationMember": "#/components/schemas/microsoft.graph.aadUserConversationMember",
                                "#microsoft.graph.anonymousGuestConversationMember": "#/components/schemas/microsoft.graph.anonymousGuestConversationMember",
                                "#microsoft.graph.azureCommunicationServicesUserConversationMember": "#/components/schemas/microsoft.graph.azureCommunicationServicesUserConversationMember",
                                "#microsoft.graph.microsoftAccountUserConversationMember": "#/components/schemas/microsoft.graph.microsoftAccountUserConversationMember",
                                "#microsoft.graph.skypeForBusinessUserConversationMember": "#/components/schemas/microsoft.graph.skypeForBusinessUserConversationMember",
                                "#microsoft.graph.skypeUserConversationMember": "#/components/schemas/microsoft.graph.skypeUserConversationMember"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.teamsAsyncOperation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "teamsAsyncOperation",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "attemptsCount": {
                                "maximum": 2147483647,
                                "minimum": -2147483648,
                                "type": "integer",
                                "description": "Number of times the operation was attempted before being marked successful or failed.",
                                "format": "int32"
                            },
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Time when the operation was created.",
                                "format": "date-time"
                            },
                            "error": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Any error that causes the async operation to fail."
                            },
                            "lastActionDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Time when the async operation was last updated.",
                                "format": "date-time"
                            },
                            "operationType": {
                                "$ref": "#/components/schemas/microsoft.graph.teamsAsyncOperationType"
                            },
                            "status": {
                                "$ref": "#/components/schemas/microsoft.graph.teamsAsyncOperationStatus"
                            },
                            "targetResourceId": {
                                "type": "string",
                                "description": "The ID of the object that's created or modified as result of this async operation, typically a team.",
                                "nullable": true
                            },
                            "targetResourceLocation": {
                                "type": "string",
                                "description": "The location of the object that's created or modified as result of this async operation. This URL should be treated as an opaque value and not parsed into its component paths.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.teamsAsyncOperation"
            },
            "microsoft.graph.teamworkTag": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "teamworkTag",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string",
                                "description": "The description of the tag as it will appear to the user in Microsoft Teams. A teamworkTag can't have more than 200 teamworkTagMembers.",
                                "nullable": true
                            },
                            "displayName": {
                                "type": "string",
                                "description": "The name of the tag as it will appear to the user in Microsoft Teams.",
                                "nullable": true
                            },
                            "memberCount": {
                                "maximum": 2147483647,
                                "minimum": -2147483648,
                                "type": "integer",
                                "description": "The number of users assigned to the tag.",
                                "format": "int32",
                                "nullable": true
                            },
                            "tagType": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The type of the tag. Default is standard."
                            },
                            "teamId": {
                                "type": "string",
                                "description": "ID of the team in which the tag is defined.",
                                "nullable": true
                            },
                            "members": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamworkTagMember"
                                },
                                "description": "Users assigned to the tag.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.teamworkTag"
            },
            "microsoft.graph.teamsTemplate": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "teamsTemplate",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.teamsTemplate"
            },
            "microsoft.graph.schedule": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "schedule",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "description": "Indicates whether the schedule is enabled for the team. Required.",
                                "nullable": true
                            },
                            "offerShiftRequestsEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether offer shift requests are enabled for the schedule.",
                                "nullable": true
                            },
                            "openShiftsEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether open shifts are enabled for the schedule.",
                                "nullable": true
                            },
                            "provisionStatus": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The status of the schedule provisioning. The possible values are notStarted, running, completed, failed.",
                                "readOnly": true
                            },
                            "provisionStatusCode": {
                                "type": "string",
                                "description": "Additional information about why schedule provisioning failed.",
                                "nullable": true,
                                "readOnly": true
                            },
                            "swapShiftsRequestsEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether swap shifts requests are enabled for the schedule.",
                                "nullable": true
                            },
                            "timeClockEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether time clock is enabled for the schedule.",
                                "nullable": true
                            },
                            "timeOffRequestsEnabled": {
                                "type": "boolean",
                                "description": "Indicates whether time off requests are enabled for the schedule.",
                                "nullable": true
                            },
                            "timeZone": {
                                "type": "string",
                                "description": "Indicates the time zone of the schedule team using tz database format. Required.",
                                "nullable": true
                            },
                            "workforceIntegrationIds": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "nullable": true
                                }
                            },
                            "offerShiftRequests": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.offerShiftRequest"
                                },
                                "x-ms-navigationProperty": true
                            },
                            "openShiftChangeRequests": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.openShiftChangeRequest"
                                },
                                "x-ms-navigationProperty": true
                            },
                            "openShifts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.openShift"
                                },
                                "x-ms-navigationProperty": true
                            },
                            "schedulingGroups": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.schedulingGroup"
                                },
                                "description": "The logical grouping of users in the schedule (usually by role).",
                                "x-ms-navigationProperty": true
                            },
                            "shifts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.shift"
                                },
                                "description": "The shifts in the schedule.",
                                "x-ms-navigationProperty": true
                            },
                            "swapShiftsChangeRequests": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.swapShiftsChangeRequest"
                                },
                                "x-ms-navigationProperty": true
                            },
                            "timeOffReasons": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.timeOffReason"
                                },
                                "description": "The set of reasons for a time off in the schedule.",
                                "x-ms-navigationProperty": true
                            },
                            "timeOffRequests": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.timeOffRequest"
                                },
                                "x-ms-navigationProperty": true
                            },
                            "timesOff": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.timeOff"
                                },
                                "description": "The instances of times off in the schedule.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.schedule"
            },
            "microsoft.graph.resourceSpecificPermissionGrant": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.directoryObject"
                    },
                    {
                        "title": "resourceSpecificPermissionGrant",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "clientAppId": {
                                "type": "string",
                                "description": "ID of the service principal of the Azure AD app that has been granted access. Read-only.",
                                "nullable": true
                            },
                            "clientId": {
                                "type": "string",
                                "description": "ID of the Azure AD app that has been granted access. Read-only.",
                                "nullable": true
                            },
                            "permission": {
                                "type": "string",
                                "description": "The name of the resource-specific permission. Read-only.",
                                "nullable": true
                            },
                            "permissionType": {
                                "type": "string",
                                "description": "The type of permission. Possible values are: Application, Delegated. Read-only.",
                                "nullable": true
                            },
                            "resourceAppId": {
                                "type": "string",
                                "description": "ID of the Azure AD app that is hosting the resource. Read-only.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.resourceSpecificPermissionGrant"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.resourceSpecificPermissionGrant"
            },
            "microsoft.graph.groupSetting": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "groupSetting",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "displayName": {
                                "type": "string",
                                "description": "Display name of this group of settings, which comes from the associated template.",
                                "nullable": true
                            },
                            "templateId": {
                                "type": "string",
                                "description": "Unique identifier for the tenant-level groupSettingTemplates object that's been customized for this group-level settings object. Read-only.",
                                "nullable": true
                            },
                            "values": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.settingValue"
                                },
                                "description": "Collection of name-value pairs corresponding to the name and defaultValue properties in the referenced groupSettingTemplates object."
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.groupSetting"
            },
            "microsoft.graph.conversation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "conversation",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "hasAttachments": {
                                "type": "boolean",
                                "description": "Indicates whether any of the posts within this Conversation has at least one attachment. Supports $filter (eq, ne) and $search."
                            },
                            "lastDeliveredDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                                "format": "date-time"
                            },
                            "preview": {
                                "type": "string",
                                "description": "A short summary from the body of the latest post in this conversation. Supports $filter (eq, ne, le, ge)."
                            },
                            "topic": {
                                "type": "string",
                                "description": "The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated."
                            },
                            "uniqueSenders": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "All the users that sent a message to this Conversation."
                            },
                            "threads": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.conversationThread"
                                },
                                "description": "A collection of all the conversation threads in the conversation. A navigation property. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.conversation"
            },
            "microsoft.graph.conversationThread": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "conversationThread",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "ccRecipients": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                                },
                                "description": "The Cc: recipients for the thread. Returned only on $select."
                            },
                            "hasAttachments": {
                                "type": "boolean",
                                "description": "Indicates whether any of the posts within this thread has at least one attachment. Returned by default."
                            },
                            "isLocked": {
                                "type": "boolean",
                                "description": "Indicates if the thread is locked. Returned by default."
                            },
                            "lastDeliveredDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.Returned by default.",
                                "format": "date-time"
                            },
                            "preview": {
                                "type": "string",
                                "description": "A short summary from the body of the latest post in this conversation. Returned by default."
                            },
                            "topic": {
                                "type": "string",
                                "description": "The topic of the conversation. This property can be set when the conversation is created, but it cannot be updated. Returned by default."
                            },
                            "toRecipients": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                                },
                                "description": "The To: recipients for the thread. Returned only on $select."
                            },
                            "uniqueSenders": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "All the users that sent a message to this thread. Returned by default."
                            },
                            "posts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.post"
                                },
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.conversationThread"
            },
            "microsoft.graph.groupLifecyclePolicy": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "groupLifecyclePolicy",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "alternateNotificationEmails": {
                                "type": "string",
                                "description": "List of email address to send notifications for groups without owners. Multiple email address can be defined by separating email address with a semicolon.",
                                "nullable": true
                            },
                            "groupLifetimeInDays": {
                                "maximum": 2147483647,
                                "minimum": -2147483648,
                                "type": "integer",
                                "description": "Number of days before a group expires and needs to be renewed. Once renewed, the group expiration is extended by the number of days defined.",
                                "format": "int32",
                                "nullable": true
                            },
                            "managedGroupTypes": {
                                "type": "string",
                                "description": "The group type for which the expiration policy applies. Possible values are All, Selected or None.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.groupLifecyclePolicy"
            },
            "microsoft.graph.columnDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "columnDefinition",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "boolean": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores boolean values."
                            },
                            "calculated": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column's data is calculated based on other columns."
                            },
                            "choice": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores data from a list of choices."
                            },
                            "columnGroup": {
                                "type": "string",
                                "description": "For site columns, the name of the group this column belongs to. Helps organize related columns.",
                                "nullable": true
                            },
                            "contentApprovalStatus": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores content approval status."
                            },
                            "currency": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores currency values."
                            },
                            "dateTime": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores DateTime values."
                            },
                            "defaultValue": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The default value for this column."
                            },
                            "description": {
                                "type": "string",
                                "description": "The user-facing description of the column.",
                                "nullable": true
                            },
                            "displayName": {
                                "type": "string",
                                "description": "The user-facing name of the column.",
                                "nullable": true
                            },
                            "enforceUniqueValues": {
                                "type": "boolean",
                                "description": "If true, no two list items may have the same value for this column.",
                                "nullable": true
                            },
                            "geolocation": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores a geolocation."
                            },
                            "hidden": {
                                "type": "boolean",
                                "description": "Specifies whether the column is displayed in the user interface.",
                                "nullable": true
                            },
                            "hyperlinkOrPicture": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores hyperlink or picture values."
                            },
                            "indexed": {
                                "type": "boolean",
                                "description": "Specifies whether the column values can be used for sorting and searching.",
                                "nullable": true
                            },
                            "isDeletable": {
                                "type": "boolean",
                                "description": "Indicates whether this column can be deleted.",
                                "nullable": true
                            },
                            "isReorderable": {
                                "type": "boolean",
                                "description": "Indicates whether values in the column can be reordered. Read-only.",
                                "nullable": true
                            },
                            "isSealed": {
                                "type": "boolean",
                                "description": "Specifies whether the column can be changed.",
                                "nullable": true
                            },
                            "lookup": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column's data is looked up from another source in the site."
                            },
                            "name": {
                                "type": "string",
                                "description": "The API-facing name of the column as it appears in the [fields][] on a [listItem][]. For the user-facing name, see displayName.",
                                "nullable": true
                            },
                            "number": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores number values."
                            },
                            "personOrGroup": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores Person or Group values."
                            },
                            "propagateChanges": {
                                "type": "boolean",
                                "description": "If 'true', changes to this column will be propagated to lists that implement the column.",
                                "nullable": true
                            },
                            "readOnly": {
                                "type": "boolean",
                                "description": "Specifies whether the column values can be modified.",
                                "nullable": true
                            },
                            "required": {
                                "type": "boolean",
                                "description": "Specifies whether the column value isn't optional.",
                                "nullable": true
                            },
                            "sourceContentType": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "ContentType from which this column is inherited from. Present only in contentTypes columns response. Read-only."
                            },
                            "term": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores taxonomy terms."
                            },
                            "text": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores text values."
                            },
                            "thumbnail": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores thumbnail values."
                            },
                            "type": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "For site columns, the type of column. Read-only."
                            },
                            "validation": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "This column stores validation formula and message for the column."
                            },
                            "sourceColumn": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The source column for the content type column.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.columnDefinition"
            },
            "microsoft.graph.contentType": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "contentType",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "associatedHubsUrls": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "description": "List of canonical URLs for hub sites with which this content type is associated to. This will contain all hub sites where this content type is queued to be enforced or is already enforced. Enforcing a content type means that the content type will be applied to the lists in the enforced sites."
                            },
                            "description": {
                                "type": "string",
                                "description": "The descriptive text for the item.",
                                "nullable": true
                            },
                            "documentSet": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Document Set metadata."
                            },
                            "documentTemplate": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Document template metadata. To make sure that documents have consistent content across a site and its subsites, you can associate a Word, Excel, or PowerPoint template with a site content type."
                            },
                            "group": {
                                "type": "string",
                                "description": "The name of the group this content type belongs to. Helps organize related content types.",
                                "nullable": true
                            },
                            "hidden": {
                                "type": "boolean",
                                "description": "Indicates whether the content type is hidden in the list's 'New' menu.",
                                "nullable": true
                            },
                            "inheritedFrom": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "If this content type is inherited from another scope (like a site), provides a reference to the item where the content type is defined."
                            },
                            "isBuiltIn": {
                                "type": "boolean",
                                "description": "Specifies if a content type is a built-in content type.",
                                "nullable": true
                            },
                            "name": {
                                "type": "string",
                                "description": "The name of the content type.",
                                "nullable": true
                            },
                            "order": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Specifies the order in which the content type appears in the selection UI."
                            },
                            "parentId": {
                                "type": "string",
                                "description": "The unique identifier of the content type.",
                                "nullable": true
                            },
                            "propagateChanges": {
                                "type": "boolean",
                                "description": "If true, any changes made to the content type will be pushed to inherited content types and lists that implement the content type.",
                                "nullable": true
                            },
                            "readOnly": {
                                "type": "boolean",
                                "description": "If true, the content type can't be modified unless this value is first set to false.",
                                "nullable": true
                            },
                            "sealed": {
                                "type": "boolean",
                                "description": "If true, the content type can't be modified by users or through push-down operations. Only site collection administrators can seal or unseal content types.",
                                "nullable": true
                            },
                            "base": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Parent contentType from which this content type is derived.",
                                "x-ms-navigationProperty": true
                            },
                            "baseTypes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.contentType"
                                },
                                "description": "The collection of content types that are ancestors of this content type.",
                                "x-ms-navigationProperty": true
                            },
                            "columnLinks": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.columnLink"
                                },
                                "description": "The collection of columns that are required by this content type.",
                                "x-ms-navigationProperty": true
                            },
                            "columnPositions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                                },
                                "description": "Column order information in a content type.",
                                "x-ms-navigationProperty": true
                            },
                            "columns": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                                },
                                "description": "The collection of column definitions for this contentType.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.contentType"
            },
            "microsoft.graph.list": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.baseItem"
                    },
                    {
                        "title": "list",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "displayName": {
                                "type": "string",
                                "description": "The displayable title of the list.",
                                "nullable": true
                            },
                            "list": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Provides additional details about the list."
                            },
                            "sharepointIds": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only."
                            },
                            "system": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "If present, indicates that this is a system-managed list. Read-only."
                            },
                            "columns": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.columnDefinition"
                                },
                                "description": "The collection of field definitions for this list.",
                                "x-ms-navigationProperty": true
                            },
                            "contentTypes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.contentType"
                                },
                                "description": "The collection of content types present in this list.",
                                "x-ms-navigationProperty": true
                            },
                            "drive": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Only present on document libraries. Allows access to the list as a [drive][] resource with [driveItems][driveItem].",
                                "x-ms-navigationProperty": true
                            },
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.listItem"
                                },
                                "description": "All items contained in the list.",
                                "x-ms-navigationProperty": true
                            },
                            "operations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.richLongRunningOperation"
                                },
                                "description": "The collection of long-running operations on the list.",
                                "x-ms-navigationProperty": true
                            },
                            "subscriptions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.subscription"
                                },
                                "description": "The set of subscriptions on the list.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.list"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.list"
            },
            "microsoft.graph.longRunningOperation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "longRunningOperation",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The start time of the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "lastActionDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The time of the last action in the operation. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "resourceLocation": {
                                "type": "string",
                                "description": "URI of the resource that the operation is performed on.",
                                "nullable": true
                            },
                            "status": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The status of the operation. The possible values are: notStarted, running, succeeded, failed, unknownFutureValue."
                            },
                            "statusDetail": {
                                "type": "string",
                                "description": "Details about the status of the operation.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.richLongRunningOperation": "#/components/schemas/microsoft.graph.richLongRunningOperation"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.richLongRunningOperation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.longRunningOperation"
                    },
                    {
                        "title": "richLongRunningOperation",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "error": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Error that caused the operation to fail."
                            },
                            "percentageComplete": {
                                "maximum": 2147483647,
                                "minimum": -2147483648,
                                "type": "integer",
                                "description": "A value between 0 and 100 that indicates the progress of the operation.",
                                "format": "int32",
                                "nullable": true
                            },
                            "resourceId": {
                                "type": "string",
                                "description": "The unique identifier for the result.",
                                "nullable": true
                            },
                            "type": {
                                "type": "string",
                                "description": "The type of the operation.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.richLongRunningOperation"
            },
            "microsoft.graph.permission": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "permission",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "expirationDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "A format of yyyy-MM-ddTHH:mm:ssZ of DateTimeOffset indicates the expiration time of the permission. DateTime.MinValue indicates there is no expiration set for this permission. Optional.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "grantedTo": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "grantedToIdentities": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                }
                            },
                            "grantedToIdentitiesV2": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "For link type permissions, the details of the users to whom permission was granted. Read-only."
                            },
                            "grantedToV2": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "For user type permissions, the details of the users and applications for this permission. Read-only."
                            },
                            "hasPassword": {
                                "type": "boolean",
                                "description": "Indicates whether the password is set for this permission. This property only appears in the response. Optional. Read-only. For OneDrive Personal only..",
                                "nullable": true
                            },
                            "inheritedFrom": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Provides a reference to the ancestor of the current permission, if it is inherited from an ancestor. Read-only."
                            },
                            "invitation": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Details of any associated sharing invitation for this permission. Read-only."
                            },
                            "link": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Provides the link details of the current permission, if it is a link type permissions. Read-only."
                            },
                            "roles": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "description": "The type of permission, for example, read. See below for the full list of roles. Read-only."
                            },
                            "shareId": {
                                "type": "string",
                                "description": "A unique token that can be used to access this shared item via the **shares** API. Read-only.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.permission"
            },
            "microsoft.graph.driveItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.baseItem"
                    },
                    {
                        "title": "driveItem",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "audio": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Audio metadata, if the item is an audio file. Read-only. Read-only. Only on OneDrive Personal."
                            },
                            "bundle": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Bundle metadata, if the item is a bundle. Read-only."
                            },
                            "content": {
                                "type": "string",
                                "description": "The content stream, if the item represents a file.",
                                "format": "base64url",
                                "nullable": true
                            },
                            "cTag": {
                                "type": "string",
                                "description": "An eTag for the content of the item. This eTag is not changed if only the metadata is changed. Note This property is not returned if the item is a folder. Read-only.",
                                "nullable": true
                            },
                            "deleted": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Information about the deleted state of the item. Read-only."
                            },
                            "file": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "File metadata, if the item is a file. Read-only."
                            },
                            "fileSystemInfo": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "File system information on client. Read-write."
                            },
                            "folder": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Folder metadata, if the item is a folder. Read-only."
                            },
                            "image": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Image metadata, if the item is an image. Read-only."
                            },
                            "location": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Location metadata, if the item has location data. Read-only."
                            },
                            "malware": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Malware metadata, if the item was detected to contain malware. Read-only."
                            },
                            "package": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only."
                            },
                            "pendingOperations": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "If present, indicates that one or more operations that might affect the state of the driveItem are pending completion. Read-only."
                            },
                            "photo": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Photo metadata, if the item is a photo. Read-only."
                            },
                            "publication": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Provides information about the published or checked-out state of an item, in locations that support such actions. This property is not returned by default. Read-only."
                            },
                            "remoteItem": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Remote item data, if the item is shared from a drive other than the one being accessed. Read-only."
                            },
                            "root": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "If this property is non-null, it indicates that the driveItem is the top-most driveItem in the drive."
                            },
                            "searchResult": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Search metadata, if the item is from a search result. Read-only."
                            },
                            "shared": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only."
                            },
                            "sharepointIds": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only."
                            },
                            "size": {
                                "type": "integer",
                                "description": "Size of the item in bytes. Read-only.",
                                "format": "int64",
                                "nullable": true
                            },
                            "specialFolder": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "If the current item is also available as a special folder, this facet is returned. Read-only."
                            },
                            "video": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Video metadata, if the item is a video. Read-only."
                            },
                            "webDavUrl": {
                                "type": "string",
                                "description": "WebDAV compatible URL for the item.",
                                "nullable": true
                            },
                            "workbook": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "For files that are Excel spreadsheets, accesses the workbook API to work with the spreadsheet's contents. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "analytics": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Analytics about the view activities that took place on this item.",
                                "x-ms-navigationProperty": true
                            },
                            "children": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.driveItem"
                                },
                                "description": "Collection containing Item objects for the immediate children of Item. Only items representing folders have children. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "listItem": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "For drives in SharePoint, the associated document library list item. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "permissions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.permission"
                                },
                                "description": "The set of permissions for the item. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "subscriptions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.subscription"
                                },
                                "description": "The set of subscriptions on the item. Only supported on the root of a drive.",
                                "x-ms-navigationProperty": true
                            },
                            "thumbnails": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.thumbnailSet"
                                },
                                "description": "Collection containing [ThumbnailSet][] objects associated with the item. For more info, see [getting thumbnails][]. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "versions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.driveItemVersion"
                                },
                                "description": "The list of previous versions of the item. For more info, see [getting previous versions][]. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.driveItem"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.driveItem"
            },
            "microsoft.graph.listItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.baseItem"
                    },
                    {
                        "title": "listItem",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "contentType": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The content type of this list item"
                            },
                            "sharepointIds": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Returns identifiers useful for SharePoint REST compatibility. Read-only."
                            },
                            "analytics": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Analytics about the view activities that took place on this item.",
                                "x-ms-navigationProperty": true
                            },
                            "documentSetVersions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.documentSetVersion"
                                },
                                "description": "Version information for a document set version created by a user.",
                                "x-ms-navigationProperty": true
                            },
                            "driveItem": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "For document libraries, the driveItem relationship exposes the listItem as a [driveItem][]",
                                "x-ms-navigationProperty": true
                            },
                            "fields": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The values of the columns set on this list item.",
                                "x-ms-navigationProperty": true
                            },
                            "versions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.listItemVersion"
                                },
                                "description": "The list of previous versions of the list item.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.listItem"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.listItem"
            },
            "microsoft.graph.subscription": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "subscription",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "applicationId": {
                                "type": "string",
                                "description": "Optional. Identifier of the application used to create the subscription. Read-only.",
                                "nullable": true
                            },
                            "changeType": {
                                "type": "string",
                                "description": "Required. Indicates the type of change in the subscribed resource that will raise a change notification. The supported values are: created, updated, deleted. Multiple values can be combined using a comma-separated list. Note:  Drive root item and list change notifications support only the updated changeType. User and group change notifications support updated and deleted changeType. Use updated to receive notifications when user or group is created, updated or soft deleted.  Use deleted to receive notifications when user or group is permanently deleted."
                            },
                            "clientState": {
                                "type": "string",
                                "description": "Required. Specifies the value of the clientState property sent by the service in each change notification. The maximum length is 128 characters. The client can check that the change notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each change notification.",
                                "nullable": true
                            },
                            "creatorId": {
                                "type": "string",
                                "description": "Optional. Identifier of the user or service principal that created the subscription. If the app used delegated permissions to create the subscription, this field contains the id of the signed-in user the app called on behalf of. If the app used application permissions, this field contains the id of the service principal corresponding to the app. Read-only.",
                                "nullable": true
                            },
                            "encryptionCertificate": {
                                "type": "string",
                                "description": "Optional. A base64-encoded representation of a certificate with a public key used to encrypt resource data in change notifications. Optional but required when includeResourceData is true.",
                                "nullable": true
                            },
                            "encryptionCertificateId": {
                                "type": "string",
                                "description": "Optional. A custom app-provided identifier to help identify the certificate needed to decrypt resource data.",
                                "nullable": true
                            },
                            "expirationDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Required. Specifies the date and time when the webhook subscription expires. The time is in UTC, and can be an amount of time from subscription creation that varies for the resource subscribed to. For the maximum supported subscription length of time, see the table below.",
                                "format": "date-time"
                            },
                            "includeResourceData": {
                                "type": "boolean",
                                "description": "Optional. When set to true, change notifications include resource data (such as content of a chat message).",
                                "nullable": true
                            },
                            "latestSupportedTlsVersion": {
                                "type": "string",
                                "description": "Optional. Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by notificationUrl, supports. The possible values are: v1_0, v1_1, v1_2, v1_3. For subscribers whose notification endpoint supports a version lower than the currently recommended version (TLS 1.2), specifying this property by a set timeline allows them to temporarily use their deprecated version of TLS before completing their upgrade to TLS 1.2. For these subscribers, not setting this property per the timeline would result in subscription operations failing. For subscribers whose notification endpoint already supports TLS 1.2, setting this property is optional. In such cases, Microsoft Graph defaults the property to v1_2.",
                                "nullable": true
                            },
                            "lifecycleNotificationUrl": {
                                "type": "string",
                                "description": "Optional. The URL of the endpoint that receives lifecycle notifications, including subscriptionRemoved, reauthorizationRequired, and missed notifications. This URL must make use of the HTTPS protocol.",
                                "nullable": true
                            },
                            "notificationQueryOptions": {
                                "type": "string",
                                "description": "Optional. OData query options for specifying value for the targeting resource. Clients receive notifications when resource reaches the state matching the query options provided here. With this new property in the subscription creation payload along with all existing properties, Webhooks will deliver notifications whenever a resource reaches the desired state mentioned in the notificationQueryOptions property. For example, when the print job is completed or when a print job resource isFetchable property value becomes true etc.  Supported only for Universal Print Service. For more information, see Subscribe to change notifications from cloud printing APIs using Microsoft Graph.",
                                "nullable": true
                            },
                            "notificationUrl": {
                                "type": "string",
                                "description": "Required. The URL of the endpoint that will receive the change notifications. This URL must make use of the HTTPS protocol."
                            },
                            "notificationUrlAppId": {
                                "type": "string",
                                "description": "Optional. The app ID that the subscription service can use to generate the validation token. This allows the client to validate the authenticity of the notification received.",
                                "nullable": true
                            },
                            "resource": {
                                "type": "string",
                                "description": "Required. Specifies the resource that will be monitored for changes. Do not include the base URL (https://graph.microsoft.com/v1.0/). See the possible resource path values for each supported resource."
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.subscription"
            },
            "microsoft.graph.thumbnailSet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "thumbnailSet",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "large": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "A 1920x1920 scaled thumbnail."
                            },
                            "medium": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "A 176x176 scaled thumbnail."
                            },
                            "small": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "A 48x48 cropped thumbnail."
                            },
                            "source": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "A custom thumbnail image or the original image used to generate other thumbnails."
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.thumbnailSet"
            },
            "microsoft.graph.baseItemVersion": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "baseItemVersion",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "lastModifiedBy": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Identity of the user which last modified the version. Read-only."
                            },
                            "lastModifiedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Date and time the version was last modified. Read-only.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "publication": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Indicates the publication status of this particular version. Read-only."
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.driveItemVersion": "#/components/schemas/microsoft.graph.driveItemVersion",
                                "#microsoft.graph.listItemVersion": "#/components/schemas/microsoft.graph.listItemVersion",
                                "#microsoft.graph.documentSetVersion": "#/components/schemas/microsoft.graph.documentSetVersion"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.driveItemVersion": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.baseItemVersion"
                    },
                    {
                        "title": "driveItemVersion",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "content": {
                                "type": "string",
                                "description": "The content stream for this version of the item.",
                                "format": "base64url",
                                "nullable": true
                            },
                            "size": {
                                "type": "integer",
                                "description": "Indicates the size of the content stream for this version of the item.",
                                "format": "int64",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.driveItemVersion"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.driveItemVersion"
            },
            "microsoft.graph.attachment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "attachment",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "contentType": {
                                "type": "string",
                                "description": "The MIME type.",
                                "nullable": true
                            },
                            "isInline": {
                                "type": "boolean",
                                "description": "true if the attachment is an inline attachment; otherwise, false."
                            },
                            "lastModifiedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                                "format": "date-time",
                                "nullable": true
                            },
                            "name": {
                                "type": "string",
                                "description": "The attachment's file name.",
                                "nullable": true
                            },
                            "size": {
                                "maximum": 2147483647,
                                "minimum": -2147483648,
                                "type": "integer",
                                "description": "The length of the attachment in bytes.",
                                "format": "int32"
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.fileAttachment": "#/components/schemas/microsoft.graph.fileAttachment",
                                "#microsoft.graph.itemAttachment": "#/components/schemas/microsoft.graph.itemAttachment",
                                "#microsoft.graph.referenceAttachment": "#/components/schemas/microsoft.graph.referenceAttachment"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.multiValueLegacyExtendedProperty": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "multiValueLegacyExtendedProperty",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "description": "A collection of property values."
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.multiValueLegacyExtendedProperty"
            },
            "microsoft.graph.singleValueLegacyExtendedProperty": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "singleValueLegacyExtendedProperty",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "value": {
                                "type": "string",
                                "description": "A property value.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.singleValueLegacyExtendedProperty"
            },
            "microsoft.graph.post": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.outlookItem"
                    },
                    {
                        "title": "post",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "body": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The contents of the post. This is a default property. This property can be null."
                            },
                            "conversationId": {
                                "type": "string",
                                "description": "Unique ID of the conversation. Read-only.",
                                "nullable": true
                            },
                            "conversationThreadId": {
                                "type": "string",
                                "description": "Unique ID of the conversation thread. Read-only.",
                                "nullable": true
                            },
                            "from": {
                                "$ref": "#/components/schemas/microsoft.graph.recipient"
                            },
                            "hasAttachments": {
                                "type": "boolean",
                                "description": "Indicates whether the post has at least one attachment. This is a default property."
                            },
                            "newParticipants": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.recipient"
                                },
                                "description": "Conversation participants that were added to the thread as part of this post."
                            },
                            "receivedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Specifies when the post was received. The DateTimeOffset type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                                "format": "date-time"
                            },
                            "sender": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Contains the address of the sender. The value of Sender is assumed to be the address of the authenticated user in the case when Sender is not specified. This is a default property."
                            },
                            "attachments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.attachment"
                                },
                                "description": "Read-only. Nullable. Supports $expand.",
                                "x-ms-navigationProperty": true
                            },
                            "extensions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.extension"
                                },
                                "description": "The collection of open extensions defined for the post. Read-only. Nullable. Supports $expand.",
                                "x-ms-navigationProperty": true
                            },
                            "inReplyTo": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Read-only. Supports $expand.",
                                "x-ms-navigationProperty": true
                            },
                            "multiValueExtendedProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.multiValueLegacyExtendedProperty"
                                },
                                "description": "The collection of multi-value extended properties defined for the post. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "singleValueExtendedProperties": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.singleValueLegacyExtendedProperty"
                                },
                                "description": "The collection of single-value extended properties defined for the post. Read-only. Nullable.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.post"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.post"
            },
            "microsoft.graph.columnLink": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "columnLink",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "The name of the column  in this content type.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.columnLink"
            },
            "microsoft.graph.listItemVersion": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.baseItemVersion"
                    },
                    {
                        "title": "listItemVersion",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "fields": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "A collection of the fields and values for this version of the list item.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.listItemVersion"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.documentSetVersion": "#/components/schemas/microsoft.graph.documentSetVersion"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.documentSetVersion": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.listItemVersion"
                    },
                    {
                        "title": "documentSetVersion",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "comment": {
                                "type": "string",
                                "description": "Comment about the captured version.",
                                "nullable": true
                            },
                            "createdBy": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "User who captured the version."
                            },
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Date and time when this version was created.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "items": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "Items within the document set that are captured as part of this version."
                            },
                            "shouldCaptureMinorVersion": {
                                "type": "boolean",
                                "description": "If true, minor versions of items are also captured; otherwise, only major versions will be captured. Default value is false.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.documentSetVersion"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.documentSetVersion"
            },
            "microsoft.graph.changeTrackedEntity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "changeTrackedEntity",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                                "format": "date-time",
                                "nullable": true,
                                "readOnly": true
                            },
                            "lastModifiedBy": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Identity of the person who last modified the entity.",
                                "readOnly": true
                            },
                            "lastModifiedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                                "format": "date-time",
                                "nullable": true,
                                "readOnly": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.shiftPreferences": "#/components/schemas/microsoft.graph.shiftPreferences",
                                "#microsoft.graph.workforceIntegration": "#/components/schemas/microsoft.graph.workforceIntegration",
                                "#microsoft.graph.scheduleChangeRequest": "#/components/schemas/microsoft.graph.scheduleChangeRequest",
                                "#microsoft.graph.offerShiftRequest": "#/components/schemas/microsoft.graph.offerShiftRequest",
                                "#microsoft.graph.swapShiftsChangeRequest": "#/components/schemas/microsoft.graph.swapShiftsChangeRequest",
                                "#microsoft.graph.openShiftChangeRequest": "#/components/schemas/microsoft.graph.openShiftChangeRequest",
                                "#microsoft.graph.timeOffRequest": "#/components/schemas/microsoft.graph.timeOffRequest",
                                "#microsoft.graph.openShift": "#/components/schemas/microsoft.graph.openShift",
                                "#microsoft.graph.schedulingGroup": "#/components/schemas/microsoft.graph.schedulingGroup",
                                "#microsoft.graph.shift": "#/components/schemas/microsoft.graph.shift",
                                "#microsoft.graph.timeOffReason": "#/components/schemas/microsoft.graph.timeOffReason",
                                "#microsoft.graph.timeOff": "#/components/schemas/microsoft.graph.timeOff"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.teamsApp": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "teamsApp",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "displayName": {
                                "type": "string",
                                "description": "The name of the catalog app provided by the app developer in the Microsoft Teams zip app package.",
                                "nullable": true
                            },
                            "distributionMethod": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The method of distribution for the app. Read-only."
                            },
                            "externalId": {
                                "type": "string",
                                "description": "The ID of the catalog provided by the app developer in the Microsoft Teams zip app package.",
                                "nullable": true
                            },
                            "appDefinitions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.teamsAppDefinition"
                                },
                                "description": "The details for each version of the app.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.teamsApp"
            },
            "microsoft.graph.teamInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "teamInfo",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "displayName": {
                                "type": "string",
                                "description": "The name of the team.",
                                "nullable": true
                            },
                            "tenantId": {
                                "type": "string",
                                "description": "The ID of the Azure Active Directory tenant.",
                                "nullable": true
                            },
                            "team": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.associatedTeamInfo": "#/components/schemas/microsoft.graph.associatedTeamInfo",
                                "#microsoft.graph.sharedWithChannelTeamInfo": "#/components/schemas/microsoft.graph.sharedWithChannelTeamInfo"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.chatMessage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "chatMessage",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "attachments": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/microsoft.graph.chatMessageAttachment"
                                        },
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "References to attached objects like files, tabs, meetings etc."
                            },
                            "body": {
                                "$ref": "#/components/schemas/microsoft.graph.itemBody"
                            },
                            "channelIdentity": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.channelIdentity"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "If the message was sent in a channel, represents identity of the channel."
                            },
                            "chatId": {
                                "type": "string",
                                "description": "If the message was sent in a chat, represents the identity of the chat.",
                                "nullable": true
                            },
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Timestamp of when the chat message was created.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "deletedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Read only. Timestamp at which the chat message was deleted, or null if not deleted.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "etag": {
                                "type": "string",
                                "description": "Read-only. Version number of the chat message.",
                                "nullable": true
                            },
                            "eventDetail": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.eventMessageDetail"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Read-only. If present, represents details of an event that happened in a chat, a channel, or a team, for example, adding new members. For event messages, the messageType property will be set to systemEventMessage."
                            },
                            "from": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.chatMessageFromIdentitySet"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Details of the sender of the chat message. Can only be set during migration."
                            },
                            "importance": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessageImportance"
                            },
                            "lastEditedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Read only. Timestamp when edits to the chat message were made. Triggers an 'Edited' flag in the Teams UI. If no edits are made the value is null.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "lastModifiedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Read only. Timestamp when the chat message is created (initial setting) or modified, including when a reaction is added or removed.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "locale": {
                                "type": "string",
                                "description": "Locale of the chat message set by the client. Always set to en-us."
                            },
                            "mentions": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/microsoft.graph.chatMessageMention"
                                        },
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "List of entities mentioned in the chat message. Supported entities are: user, bot, team, and channel."
                            },
                            "messageType": {
                                "$ref": "#/components/schemas/microsoft.graph.chatMessageType"
                            },
                            "policyViolation": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.chatMessagePolicyViolation"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Defines the properties of a policy violation set by a data loss prevention (DLP) application."
                            },
                            "reactions": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/microsoft.graph.chatMessageReaction"
                                        },
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "Reactions for this chat message (for example, Like)."
                            },
                            "replyToId": {
                                "type": "string",
                                "description": "Read-only. ID of the parent chat message or root chat message of the thread. (Only applies to chat messages in channels, not chats.)",
                                "nullable": true
                            },
                            "subject": {
                                "type": "string",
                                "description": "The subject of the chat message, in plaintext.",
                                "nullable": true
                            },
                            "summary": {
                                "type": "string",
                                "description": "Summary text of the chat message that could be used for push notifications and summary views or fall back views. Only applies to channel chat messages, not chat messages in a chat.",
                                "nullable": true
                            },
                            "webUrl": {
                                "type": "string",
                                "description": "Read-only. Link to the message in Microsoft Teams.",
                                "nullable": true
                            },
                            "hostedContents": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                                },
                                "description": "Content in a message hosted by Microsoft Teams - for example, images or code snippets.",
                                "x-ms-navigationProperty": true
                            },
                            "replies": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.chatMessage"
                                },
                                "description": "Replies for a specified message. Supports $expand for channel messages.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.chatMessage"
            },
            "microsoft.graph.sharedWithChannelTeamInfo": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.teamInfo"
                    },
                    {
                        "title": "sharedWithChannelTeamInfo",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "isHostTeam": {
                                "type": "boolean",
                                "description": "Indicates whether the team is the host of the channel.",
                                "nullable": true
                            },
                            "allowedMembers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.conversationMember"
                                },
                                "description": "A collection of team members who have access to the shared channel.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.sharedWithChannelTeamInfo"
            },
            "microsoft.graph.teamsTab": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "teamsTab",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "configuration": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.teamsTabConfiguration"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Container for custom settings applied to a tab. The tab is considered configured only once this property is set."
                            },
                            "displayName": {
                                "type": "string",
                                "description": "Name of the tab.",
                                "nullable": true
                            },
                            "webUrl": {
                                "type": "string",
                                "description": "Deep link URL of the tab instance. Read only.",
                                "nullable": true
                            },
                            "teamsApp": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.teamsApp"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The application that is linked to the tab. This cannot be changed after tab creation.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.teamsTab"
            },
            "microsoft.graph.teamworkHostedContent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "teamworkHostedContent",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "contentBytes": {
                                "type": "string",
                                "description": "Write only. Bytes for the hosted content (such as images).",
                                "format": "base64url",
                                "nullable": true
                            },
                            "contentType": {
                                "type": "string",
                                "description": "Write only. Content type. sicj as image/png, image/jpg.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.chatMessageHostedContent": "#/components/schemas/microsoft.graph.chatMessageHostedContent"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.chatMessageHostedContent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.teamworkHostedContent"
                    },
                    {
                        "title": "chatMessageHostedContent",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.chatMessageHostedContent"
            },
            "microsoft.graph.teamsAppDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "teamsAppDefinition",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "createdBy": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "description": {
                                "type": "string",
                                "description": "Verbose description of the application.",
                                "nullable": true
                            },
                            "displayName": {
                                "type": "string",
                                "description": "The name of the app provided by the app developer.",
                                "nullable": true
                            },
                            "lastModifiedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                            },
                            "publishingState": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The published status of a specific version of a Teams app. Possible values are:submitted — The specific version of the Teams app has been submitted and is under review. published  — The request to publish the specific version of the Teams app has been approved by the admin and the app is published.  rejected — The request to publish the specific version of the Teams app was rejected by the admin."
                            },
                            "shortDescription": {
                                "type": "string",
                                "description": "Short description of the application.",
                                "nullable": true
                            },
                            "teamsAppId": {
                                "type": "string",
                                "description": "The ID from the Teams app manifest.",
                                "nullable": true
                            },
                            "version": {
                                "type": "string",
                                "description": "The version number of the application.",
                                "nullable": true
                            },
                            "bot": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The details of the bot specified in the Teams app manifest.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.teamsAppDefinition"
            },
            "microsoft.graph.teamworkTagMember": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "teamworkTagMember",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "displayName": {
                                "type": "string",
                                "description": "The member's display name.",
                                "nullable": true
                            },
                            "tenantId": {
                                "type": "string",
                                "description": "The ID of the tenant that the tag member is a part of.",
                                "nullable": true
                            },
                            "userId": {
                                "type": "string",
                                "description": "The user ID of the member.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.teamworkTagMember"
            },
            "microsoft.graph.scheduleChangeRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.changeTrackedEntity"
                    },
                    {
                        "title": "scheduleChangeRequest",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "assignedTo": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "managerActionDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "readOnly": true
                            },
                            "managerActionMessage": {
                                "type": "string",
                                "nullable": true
                            },
                            "managerUserId": {
                                "type": "string",
                                "nullable": true,
                                "readOnly": true
                            },
                            "senderDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "format": "date-time",
                                "nullable": true,
                                "readOnly": true
                            },
                            "senderMessage": {
                                "type": "string",
                                "nullable": true
                            },
                            "senderUserId": {
                                "type": "string",
                                "nullable": true,
                                "readOnly": true
                            },
                            "state": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ]
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.scheduleChangeRequest"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.offerShiftRequest": "#/components/schemas/microsoft.graph.offerShiftRequest",
                                "#microsoft.graph.swapShiftsChangeRequest": "#/components/schemas/microsoft.graph.swapShiftsChangeRequest",
                                "#microsoft.graph.openShiftChangeRequest": "#/components/schemas/microsoft.graph.openShiftChangeRequest",
                                "#microsoft.graph.timeOffRequest": "#/components/schemas/microsoft.graph.timeOffRequest"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.offerShiftRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.scheduleChangeRequest"
                    },
                    {
                        "title": "offerShiftRequest",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "recipientActionDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                                "format": "date-time",
                                "nullable": true,
                                "readOnly": true
                            },
                            "recipientActionMessage": {
                                "type": "string",
                                "description": "Custom message sent by recipient of the offer shift request.",
                                "nullable": true
                            },
                            "recipientUserId": {
                                "type": "string",
                                "description": "User ID of the recipient of the offer shift request.",
                                "nullable": true
                            },
                            "senderShiftId": {
                                "type": "string",
                                "description": "User ID of the sender of the offer shift request.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.offerShiftRequest"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.swapShiftsChangeRequest": "#/components/schemas/microsoft.graph.swapShiftsChangeRequest"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.openShift": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.changeTrackedEntity"
                    },
                    {
                        "title": "openShift",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "draftOpenShift": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.openShiftItem"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "An unpublished open shift."
                            },
                            "schedulingGroupId": {
                                "type": "string",
                                "description": "ID for the scheduling group that the open shift belongs to.",
                                "nullable": true
                            },
                            "sharedOpenShift": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.openShiftItem"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "A published open shift."
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.openShift"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.openShift"
            },
            "microsoft.graph.openShiftChangeRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.scheduleChangeRequest"
                    },
                    {
                        "title": "openShiftChangeRequest",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "openShiftId": {
                                "type": "string",
                                "description": "ID for the open shift.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.openShiftChangeRequest"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.openShiftChangeRequest"
            },
            "microsoft.graph.schedulingGroup": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.changeTrackedEntity"
                    },
                    {
                        "title": "schedulingGroup",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "displayName": {
                                "type": "string",
                                "description": "The display name for the schedulingGroup. Required.",
                                "nullable": true
                            },
                            "isActive": {
                                "type": "boolean",
                                "description": "Indicates whether the schedulingGroup can be used when creating new entities or updating existing ones. Required.",
                                "nullable": true,
                                "readOnly": true
                            },
                            "userIds": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "nullable": true
                                },
                                "description": "The list of user IDs that are a member of the schedulingGroup. Required."
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.schedulingGroup"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.schedulingGroup"
            },
            "microsoft.graph.shift": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.changeTrackedEntity"
                    },
                    {
                        "title": "shift",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "draftShift": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.shiftItem"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The draft version of this shift that is viewable by managers. Required."
                            },
                            "schedulingGroupId": {
                                "type": "string",
                                "description": "ID of the scheduling group the shift is part of. Required.",
                                "nullable": true
                            },
                            "sharedShift": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.shiftItem"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The shared version of this shift that is viewable by both employees and managers. Required."
                            },
                            "userId": {
                                "type": "string",
                                "description": "ID of the user assigned to the shift. Required.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.shift"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.shift"
            },
            "microsoft.graph.swapShiftsChangeRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.offerShiftRequest"
                    },
                    {
                        "title": "swapShiftsChangeRequest",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "recipientShiftId": {
                                "type": "string",
                                "description": "ShiftId for the recipient user with whom the request is to swap.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.swapShiftsChangeRequest"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.swapShiftsChangeRequest"
            },
            "microsoft.graph.timeOffReason": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.changeTrackedEntity"
                    },
                    {
                        "title": "timeOffReason",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "displayName": {
                                "type": "string",
                                "description": "The name of the timeOffReason. Required.",
                                "nullable": true
                            },
                            "iconType": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Supported icon types are: none, car, calendar, running, plane, firstAid, doctor, notWorking, clock, juryDuty, globe, cup, phone, weather, umbrella, piggyBank, dog, cake, trafficCone, pin, sunny. Required."
                            },
                            "isActive": {
                                "type": "boolean",
                                "description": "Indicates whether the timeOffReason can be used when creating new entities or updating existing ones. Required.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.timeOffReason"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.timeOffReason"
            },
            "microsoft.graph.timeOffRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.scheduleChangeRequest"
                    },
                    {
                        "title": "timeOffRequest",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "endDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                                "format": "date-time",
                                "nullable": true
                            },
                            "startDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                                "format": "date-time",
                                "nullable": true
                            },
                            "timeOffReasonId": {
                                "type": "string",
                                "description": "The reason for the time off.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.timeOffRequest"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.timeOffRequest"
            },
            "microsoft.graph.timeOff": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.changeTrackedEntity"
                    },
                    {
                        "title": "timeOff",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "draftTimeOff": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.timeOffItem"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The draft version of this timeOff that is viewable by managers. Required."
                            },
                            "sharedTimeOff": {
                                "anyOf": [
                                    {
                                        "$ref": "#/components/schemas/microsoft.graph.timeOffItem"
                                    },
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The shared version of this timeOff that is viewable by both employees and managers. Required."
                            },
                            "userId": {
                                "type": "string",
                                "description": "ID of the user assigned to the timeOff. Required.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.timeOff"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.timeOff"
            },
            "microsoft.graph.recipient": {
                "title": "recipient",
                "required": [],
                "type": "object",
                "properties": {
                    "emailAddress": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "The recipient's email address."
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "@odata.type",
                    "mapping": {
                        "#microsoft.graph.attendeeBase": "#/components/schemas/microsoft.graph.attendeeBase",
                        "#microsoft.graph.attendee": "#/components/schemas/microsoft.graph.attendee"
                    }
                }
            },
            "microsoft.graph.identitySet": {
                "title": "identitySet",
                "required": [],
                "type": "object",
                "properties": {
                    "application": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "Optional. The application associated with this action."
                    },
                    "device": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "Optional. The device associated with this action."
                    },
                    "user": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "Optional. The user associated with this action."
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "@odata.type",
                    "mapping": {
                        "#microsoft.graph.sharePointIdentitySet": "#/components/schemas/microsoft.graph.sharePointIdentitySet",
                        "#microsoft.graph.chatMessageFromIdentitySet": "#/components/schemas/microsoft.graph.chatMessageFromIdentitySet",
                        "#microsoft.graph.chatMessageMentionedIdentitySet": "#/components/schemas/microsoft.graph.chatMessageMentionedIdentitySet",
                        "#microsoft.graph.chatMessageReactionIdentitySet": "#/components/schemas/microsoft.graph.chatMessageReactionIdentitySet"
                    }
                }
            },
            "microsoft.graph.itemBody": {
                "title": "itemBody",
                "required": [],
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The content of the item.",
                        "nullable": true
                    },
                    "contentType": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "The type of the content. Possible values are text and html."
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.keyValuePair": {
                "title": "keyValuePair",
                "required": [],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name for this key-value pair"
                    },
                    "value": {
                        "type": "string",
                        "description": "Value for this key-value pair",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.teamFunSettings": {
                "title": "teamFunSettings",
                "required": [],
                "type": "object",
                "properties": {
                    "allowCustomMemes": {
                        "type": "boolean",
                        "description": "If set to true, enables users to include custom memes.",
                        "nullable": true
                    },
                    "allowGiphy": {
                        "type": "boolean",
                        "description": "If set to true, enables Giphy use.",
                        "nullable": true
                    },
                    "allowStickersAndMemes": {
                        "type": "boolean",
                        "description": "If set to true, enables users to include stickers and memes.",
                        "nullable": true
                    },
                    "giphyContentRating": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "Giphy content rating. Possible values are: moderate, strict."
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.teamGuestSettings": {
                "title": "teamGuestSettings",
                "required": [],
                "type": "object",
                "properties": {
                    "allowCreateUpdateChannels": {
                        "type": "boolean",
                        "description": "If set to true, guests can add and update channels.",
                        "nullable": true
                    },
                    "allowDeleteChannels": {
                        "type": "boolean",
                        "description": "If set to true, guests can delete channels.",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.teamMemberSettings": {
                "title": "teamMemberSettings",
                "required": [],
                "type": "object",
                "properties": {
                    "allowAddRemoveApps": {
                        "type": "boolean",
                        "description": "If set to true, members can add and remove apps.",
                        "nullable": true
                    },
                    "allowCreatePrivateChannels": {
                        "type": "boolean",
                        "description": "If set to true, members can add and update private channels.",
                        "nullable": true
                    },
                    "allowCreateUpdateChannels": {
                        "type": "boolean",
                        "description": "If set to true, members can add and update channels.",
                        "nullable": true
                    },
                    "allowCreateUpdateRemoveConnectors": {
                        "type": "boolean",
                        "description": "If set to true, members can add, update, and remove connectors.",
                        "nullable": true
                    },
                    "allowCreateUpdateRemoveTabs": {
                        "type": "boolean",
                        "description": "If set to true, members can add, update, and remove tabs.",
                        "nullable": true
                    },
                    "allowDeleteChannels": {
                        "type": "boolean",
                        "description": "If set to true, members can delete channels.",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.teamMessagingSettings": {
                "title": "teamMessagingSettings",
                "required": [],
                "type": "object",
                "properties": {
                    "allowChannelMentions": {
                        "type": "boolean",
                        "description": "If set to true, @channel mentions are allowed.",
                        "nullable": true
                    },
                    "allowOwnerDeleteMessages": {
                        "type": "boolean",
                        "description": "If set to true, owners can delete any message.",
                        "nullable": true
                    },
                    "allowTeamMentions": {
                        "type": "boolean",
                        "description": "If set to true, @team mentions are allowed.",
                        "nullable": true
                    },
                    "allowUserDeleteMessages": {
                        "type": "boolean",
                        "description": "If set to true, users can delete their messages.",
                        "nullable": true
                    },
                    "allowUserEditMessages": {
                        "type": "boolean",
                        "description": "If set to true, users can edit their messages.",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.teamSummary": {
                "title": "teamSummary",
                "required": [],
                "type": "object",
                "properties": {
                    "guestsCount": {
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer",
                        "description": "Count of guests in a team.",
                        "format": "int32",
                        "nullable": true
                    },
                    "membersCount": {
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer",
                        "description": "Count of members in a team.",
                        "format": "int32",
                        "nullable": true
                    },
                    "ownersCount": {
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer",
                        "description": "Count of owners in a team.",
                        "format": "int32",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.settingValue": {
                "title": "settingValue",
                "required": [],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the setting (as defined by the groupSettingTemplate).",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "description": "Value of the setting.",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.teamworkNotificationRecipient": {
                "title": "teamworkNotificationRecipient",
                "required": [],
                "type": "object",
                "properties": {
                    "@odata.type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "@odata.type",
                    "mapping": {
                        "#microsoft.graph.aadUserNotificationRecipient": "#/components/schemas/microsoft.graph.aadUserNotificationRecipient",
                        "#microsoft.graph.channelMembersNotificationRecipient": "#/components/schemas/microsoft.graph.channelMembersNotificationRecipient",
                        "#microsoft.graph.chatMembersNotificationRecipient": "#/components/schemas/microsoft.graph.chatMembersNotificationRecipient",
                        "#microsoft.graph.teamMembersNotificationRecipient": "#/components/schemas/microsoft.graph.teamMembersNotificationRecipient"
                    }
                }
            },
            "microsoft.graph.eventMessageDetail": {
                "title": "eventMessageDetail",
                "required": [],
                "type": "object",
                "properties": {
                    "@odata.type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "@odata.type",
                    "mapping": {
                        "#microsoft.graph.callEndedEventMessageDetail": "#/components/schemas/microsoft.graph.callEndedEventMessageDetail",
                        "#microsoft.graph.callRecordingEventMessageDetail": "#/components/schemas/microsoft.graph.callRecordingEventMessageDetail",
                        "#microsoft.graph.callStartedEventMessageDetail": "#/components/schemas/microsoft.graph.callStartedEventMessageDetail",
                        "#microsoft.graph.callTranscriptEventMessageDetail": "#/components/schemas/microsoft.graph.callTranscriptEventMessageDetail",
                        "#microsoft.graph.channelAddedEventMessageDetail": "#/components/schemas/microsoft.graph.channelAddedEventMessageDetail",
                        "#microsoft.graph.channelDeletedEventMessageDetail": "#/components/schemas/microsoft.graph.channelDeletedEventMessageDetail",
                        "#microsoft.graph.channelDescriptionUpdatedEventMessageDetail": "#/components/schemas/microsoft.graph.channelDescriptionUpdatedEventMessageDetail",
                        "#microsoft.graph.channelRenamedEventMessageDetail": "#/components/schemas/microsoft.graph.channelRenamedEventMessageDetail",
                        "#microsoft.graph.channelSetAsFavoriteByDefaultEventMessageDetail": "#/components/schemas/microsoft.graph.channelSetAsFavoriteByDefaultEventMessageDetail",
                        "#microsoft.graph.channelUnsetAsFavoriteByDefaultEventMessageDetail": "#/components/schemas/microsoft.graph.channelUnsetAsFavoriteByDefaultEventMessageDetail",
                        "#microsoft.graph.chatRenamedEventMessageDetail": "#/components/schemas/microsoft.graph.chatRenamedEventMessageDetail",
                        "#microsoft.graph.conversationMemberRoleUpdatedEventMessageDetail": "#/components/schemas/microsoft.graph.conversationMemberRoleUpdatedEventMessageDetail",
                        "#microsoft.graph.meetingPolicyUpdatedEventMessageDetail": "#/components/schemas/microsoft.graph.meetingPolicyUpdatedEventMessageDetail",
                        "#microsoft.graph.membersAddedEventMessageDetail": "#/components/schemas/microsoft.graph.membersAddedEventMessageDetail",
                        "#microsoft.graph.membersDeletedEventMessageDetail": "#/components/schemas/microsoft.graph.membersDeletedEventMessageDetail",
                        "#microsoft.graph.membersJoinedEventMessageDetail": "#/components/schemas/microsoft.graph.membersJoinedEventMessageDetail",
                        "#microsoft.graph.membersLeftEventMessageDetail": "#/components/schemas/microsoft.graph.membersLeftEventMessageDetail",
                        "#microsoft.graph.messagePinnedEventMessageDetail": "#/components/schemas/microsoft.graph.messagePinnedEventMessageDetail",
                        "#microsoft.graph.messageUnpinnedEventMessageDetail": "#/components/schemas/microsoft.graph.messageUnpinnedEventMessageDetail",
                        "#microsoft.graph.tabUpdatedEventMessageDetail": "#/components/schemas/microsoft.graph.tabUpdatedEventMessageDetail",
                        "#microsoft.graph.teamArchivedEventMessageDetail": "#/components/schemas/microsoft.graph.teamArchivedEventMessageDetail",
                        "#microsoft.graph.teamCreatedEventMessageDetail": "#/components/schemas/microsoft.graph.teamCreatedEventMessageDetail",
                        "#microsoft.graph.teamDescriptionUpdatedEventMessageDetail": "#/components/schemas/microsoft.graph.teamDescriptionUpdatedEventMessageDetail",
                        "#microsoft.graph.teamJoiningDisabledEventMessageDetail": "#/components/schemas/microsoft.graph.teamJoiningDisabledEventMessageDetail",
                        "#microsoft.graph.teamJoiningEnabledEventMessageDetail": "#/components/schemas/microsoft.graph.teamJoiningEnabledEventMessageDetail",
                        "#microsoft.graph.teamRenamedEventMessageDetail": "#/components/schemas/microsoft.graph.teamRenamedEventMessageDetail",
                        "#microsoft.graph.teamsAppInstalledEventMessageDetail": "#/components/schemas/microsoft.graph.teamsAppInstalledEventMessageDetail",
                        "#microsoft.graph.teamsAppRemovedEventMessageDetail": "#/components/schemas/microsoft.graph.teamsAppRemovedEventMessageDetail",
                        "#microsoft.graph.teamsAppUpgradedEventMessageDetail": "#/components/schemas/microsoft.graph.teamsAppUpgradedEventMessageDetail",
                        "#microsoft.graph.teamUnarchivedEventMessageDetail": "#/components/schemas/microsoft.graph.teamUnarchivedEventMessageDetail"
                    }
                }
            },
            "microsoft.graph.channelIdentity": {
                "title": "channelIdentity",
                "required": [],
                "type": "object",
                "properties": {
                    "channelId": {
                        "type": "string",
                        "description": "The identity of the channel in which the message was posted.",
                        "nullable": true
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The identity of the team in which the message was posted.",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.chatMessageAttachment": {
                "title": "chatMessageAttachment",
                "required": [],
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "The content of the attachment. If the attachment is a rich card, set the property to the rich card object. This property and contentUrl are mutually exclusive.",
                        "nullable": true
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The media type of the content attachment. It can have the following values: reference: Attachment is a link to another file. Populate the contentURL with the link to the object.Any contentTypes supported by the Bot Framework's Attachment objectapplication/vnd.microsoft.card.codesnippet: A code snippet. application/vnd.microsoft.card.announcement: An announcement header.",
                        "nullable": true
                    },
                    "contentUrl": {
                        "type": "string",
                        "description": "URL for the content of the attachment. Supported protocols: http, https, file and data.",
                        "nullable": true
                    },
                    "id": {
                        "type": "string",
                        "description": "Read-only. Unique id of the attachment.",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the attachment.",
                        "nullable": true
                    },
                    "teamsAppId": {
                        "type": "string",
                        "description": "The ID of the Teams app that is associated with the attachment. The property is specifically used to attribute a Teams message card to the specified app.",
                        "nullable": true
                    },
                    "thumbnailUrl": {
                        "type": "string",
                        "description": "URL to a thumbnail image that the channel can use if it supports using an alternative, smaller form of content or contentUrl. For example, if you set contentType to application/word and set contentUrl to the location of the Word document, you might include a thumbnail image that represents the document. The channel could display the thumbnail image instead of the document. When the user clicks the image, the channel would open the document.",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.chatMessageFromIdentitySet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.identitySet"
                    },
                    {
                        "title": "chatMessageFromIdentitySet",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.chatMessageFromIdentitySet"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.chatMessageFromIdentitySet"
            },
            "microsoft.graph.chatMessageMention": {
                "title": "chatMessageMention",
                "required": [],
                "type": "object",
                "properties": {
                    "id": {
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "type": "integer",
                        "description": "Index of an entity being mentioned in the specified chatMessage. Matches the {index} value in the corresponding <at id='{index}'> tag in the message body.",
                        "format": "int32",
                        "nullable": true
                    },
                    "mentioned": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "The entity (user, application, team, or channel) that was @mentioned."
                    },
                    "mentionText": {
                        "type": "string",
                        "description": "String used to represent the mention. For example, a user's display name, a team name.",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.chatMessagePolicyViolation": {
                "title": "chatMessagePolicyViolation",
                "required": [],
                "type": "object",
                "properties": {
                    "dlpAction": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "The action taken by the DLP provider on the message with sensitive content. Supported values are: NoneNotifySender -- Inform the sender of the violation but allow readers to read the message.BlockAccess -- Block readers from reading the message.BlockAccessExternal -- Block users outside the organization from reading the message, while allowing users within the organization to read the message."
                    },
                    "justificationText": {
                        "type": "string",
                        "description": "Justification text provided by the sender of the message when overriding a policy violation.",
                        "nullable": true
                    },
                    "policyTip": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "Information to display to the message sender about why the message was flagged as a violation."
                    },
                    "userAction": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "Indicates the action taken by the user on a message blocked by the DLP provider. Supported values are: NoneOverrideReportFalsePositiveWhen the DLP provider is updating the message for blocking sensitive content, userAction is not required."
                    },
                    "verdictDetails": {
                        "anyOf": [
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "Indicates what actions the sender may take in response to the policy violation. Supported values are: NoneAllowFalsePositiveOverride -- Allows the sender to declare the policyViolation to be an error in the DLP app and its rules, and allow readers to see the message again if the dlpAction had hidden it.AllowOverrideWithoutJustification -- Allows the sender to overriide the DLP violation and allow readers to see the message again if the dlpAction had hidden it, without needing to provide an explanation for doing so. AllowOverrideWithJustification -- Allows the sender to overriide the DLP violation and allow readers to see the message again if the dlpAction had hidden it, after providing an explanation for doing so.AllowOverrideWithoutJustification and AllowOverrideWithJustification are mutually exclusive."
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.chatMessageReaction": {
                "title": "chatMessageReaction",
                "required": [],
                "type": "object",
                "properties": {
                    "createdDateTime": {
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string",
                        "description": "The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z",
                        "format": "date-time"
                    },
                    "reactionType": {
                        "type": "string",
                        "description": "Supported values are like, angry, sad, laugh, heart, surprised."
                    },
                    "user": {
                        "$ref": "#/components/schemas/microsoft.graph.chatMessageReactionIdentitySet"
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.chatMessageReactionIdentitySet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.identitySet"
                    },
                    {
                        "title": "chatMessageReactionIdentitySet",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.chatMessageReactionIdentitySet"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.chatMessageReactionIdentitySet"
            },
            "microsoft.graph.operationError": {
                "title": "operationError",
                "required": [],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Operation error code.",
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "description": "Operation error message.",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.teamsTabConfiguration": {
                "title": "teamsTabConfiguration",
                "required": [],
                "type": "object",
                "properties": {
                    "contentUrl": {
                        "type": "string",
                        "description": "Url used for rendering tab contents in Teams. Required.",
                        "nullable": true
                    },
                    "entityId": {
                        "type": "string",
                        "description": "Identifier for the entity hosted by the tab provider.",
                        "nullable": true
                    },
                    "removeUrl": {
                        "type": "string",
                        "description": "Url called by Teams client when a Tab is removed using the Teams Client.",
                        "nullable": true
                    },
                    "websiteUrl": {
                        "type": "string",
                        "description": "Url for showing tab contents outside of Teams.",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.teamworkActivityTopic": {
                "title": "teamworkActivityTopic",
                "required": [],
                "type": "object",
                "properties": {
                    "source": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/microsoft.graph.teamworkActivityTopicSource"
                            },
                            {
                                "type": "object",
                                "nullable": true
                            }
                        ],
                        "description": "Type of source. Possible values are: entityUrl, text. For supported Microsoft Graph URLs, use entityUrl. For custom text, use text."
                    },
                    "value": {
                        "type": "string",
                        "description": "The topic value. If the value of the source property is entityUrl, this must be a Microsoft Graph URL. If the vaule is text, this must be a plain text value."
                    },
                    "webUrl": {
                        "type": "string",
                        "description": "The link the user clicks when they select the notification. Optional when source is entityUrl; required when source is text.",
                        "nullable": true
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                }
            },
            "microsoft.graph.scheduleEntity": {
                "title": "scheduleEntity",
                "required": [],
                "type": "object",
                "properties": {
                    "endDateTime": {
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "startDateTime": {
                        "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "theme": {
                        "$ref": "#/components/schemas/microsoft.graph.scheduleEntityTheme"
                    },
                    "@odata.type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "@odata.type",
                    "mapping": {
                        "#microsoft.graph.shiftItem": "#/components/schemas/microsoft.graph.shiftItem",
                        "#microsoft.graph.openShiftItem": "#/components/schemas/microsoft.graph.openShiftItem",
                        "#microsoft.graph.timeOffItem": "#/components/schemas/microsoft.graph.timeOffItem"
                    }
                }
            },
            "microsoft.graph.shiftItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.scheduleEntity"
                    },
                    {
                        "title": "shiftItem",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "activities": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "An incremental part of a shift which can cover details of when and where an employee is during their shift. For example, an assignment or a scheduled break or lunch. Required."
                            },
                            "displayName": {
                                "type": "string",
                                "description": "The shift label of the shiftItem.",
                                "nullable": true
                            },
                            "notes": {
                                "type": "string",
                                "description": "The shift notes for the shiftItem.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        },
                        "discriminator": {
                            "propertyName": "@odata.type",
                            "mapping": {
                                "#microsoft.graph.openShiftItem": "#/components/schemas/microsoft.graph.openShiftItem"
                            }
                        }
                    }
                ]
            },
            "microsoft.graph.openShiftItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.shiftItem"
                    },
                    {
                        "title": "openShiftItem",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "openSlotCount": {
                                "maximum": 2147483647,
                                "minimum": -2147483648,
                                "type": "integer",
                                "description": "Count of the number of slots for the given open shift.",
                                "format": "int32"
                            },
                            "@odata.type": {
                                "type": "string",
                                "default": "#microsoft.graph.openShiftItem"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.openShiftItem"
            },
            "microsoft.graph.timeOffItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.scheduleEntity"
                    },
                    {
                        "title": "timeOffItem",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "timeOffReasonId": {
                                "type": "string",
                                "description": "ID of the timeOffReason for this timeOffItem. Required.",
                                "nullable": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.timeOffItem"
            },
            "microsoft.graph.bodyType": {
                "title": "bodyType",
                "enum": [
                    "text",
                    "html"
                ],
                "type": "string"
            },
            "microsoft.graph.operationStatus": {
                "title": "operationStatus",
                "enum": [
                    "NotStarted",
                    "Running",
                    "Completed",
                    "Failed"
                ],
                "type": "string"
            },
            "microsoft.graph.channelMembershipType": {
                "title": "channelMembershipType",
                "enum": [
                    "standard",
                    "private",
                    "unknownFutureValue",
                    "shared"
                ],
                "type": "string"
            },
            "microsoft.graph.chatMessageImportance": {
                "title": "chatMessageImportance",
                "enum": [
                    "normal",
                    "high",
                    "urgent",
                    "unknownFutureValue"
                ],
                "type": "string"
            },
            "microsoft.graph.chatMessageType": {
                "title": "chatMessageType",
                "enum": [
                    "message",
                    "chatEvent",
                    "typing",
                    "unknownFutureValue",
                    "systemEventMessage"
                ],
                "type": "string"
            },
            "microsoft.graph.clonableTeamParts": {
                "title": "clonableTeamParts",
                "enum": [
                    "apps",
                    "tabs",
                    "settings",
                    "channels",
                    "members"
                ],
                "type": "string"
            },
            "microsoft.graph.teamsAsyncOperationStatus": {
                "title": "teamsAsyncOperationStatus",
                "enum": [
                    "invalid",
                    "notStarted",
                    "inProgress",
                    "succeeded",
                    "failed",
                    "unknownFutureValue"
                ],
                "type": "string"
            },
            "microsoft.graph.teamsAsyncOperationType": {
                "title": "teamsAsyncOperationType",
                "enum": [
                    "invalid",
                    "cloneTeam",
                    "archiveTeam",
                    "unarchiveTeam",
                    "createTeam",
                    "unknownFutureValue",
                    "teamifyGroup",
                    "createChannel"
                ],
                "type": "string"
            },
            "microsoft.graph.teamSpecialization": {
                "title": "teamSpecialization",
                "enum": [
                    "none",
                    "educationStandard",
                    "educationClass",
                    "educationProfessionalLearningCommunity",
                    "educationStaff",
                    "healthcareStandard",
                    "healthcareCareCoordination",
                    "unknownFutureValue"
                ],
                "type": "string"
            },
            "microsoft.graph.teamVisibilityType": {
                "title": "teamVisibilityType",
                "enum": [
                    "private",
                    "public",
                    "hiddenMembership",
                    "unknownFutureValue"
                ],
                "type": "string"
            },
            "microsoft.graph.teamworkActivityTopicSource": {
                "title": "teamworkActivityTopicSource",
                "enum": [
                    "entityUrl",
                    "text"
                ],
                "type": "string"
            },
            "microsoft.graph.teamworkTagType": {
                "title": "teamworkTagType",
                "enum": [
                    "standard",
                    "unknownFutureValue"
                ],
                "type": "string"
            },
            "microsoft.graph.scheduleEntityTheme": {
                "title": "scheduleEntityTheme",
                "enum": [
                    "white",
                    "blue",
                    "green",
                    "purple",
                    "pink",
                    "yellow",
                    "gray",
                    "darkBlue",
                    "darkGreen",
                    "darkPurple",
                    "darkPink",
                    "darkYellow",
                    "unknownFutureValue"
                ],
                "type": "string"
            },
            "microsoft.graph.timeOffReasonIconType": {
                "title": "timeOffReasonIconType",
                "enum": [
                    "none",
                    "car",
                    "calendar",
                    "running",
                    "plane",
                    "firstAid",
                    "doctor",
                    "notWorking",
                    "clock",
                    "juryDuty",
                    "globe",
                    "cup",
                    "phone",
                    "weather",
                    "umbrella",
                    "piggyBank",
                    "dog",
                    "cake",
                    "trafficCone",
                    "pin",
                    "sunny",
                    "unknownFutureValue"
                ],
                "type": "string"
            },
            "microsoft.graph.termStore.store": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "store",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "defaultLanguageTag": {
                                "type": "string",
                                "description": "Default language of the term store."
                            },
                            "languageTags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "List of languages for the term store."
                            },
                            "groups": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.termStore.group"
                                },
                                "description": "Collection of all groups available in the term store.",
                                "x-ms-navigationProperty": true
                            },
                            "sets": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.termStore.set"
                                },
                                "description": "Collection of all sets available in the term store. This relationship can only be used to load a specific term set.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.termStore.store"
            },
            "microsoft.graph.termStore.group": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "group",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Date and time of the group creation. Read-only.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "description": {
                                "type": "string",
                                "description": "Description that gives details on the term usage.",
                                "nullable": true
                            },
                            "displayName": {
                                "type": "string",
                                "description": "Name of the group.",
                                "nullable": true
                            },
                            "parentSiteId": {
                                "type": "string",
                                "description": "ID of the parent site of this group.",
                                "nullable": true
                            },
                            "scope": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "Returns the type of the group. Possible values are: global, system, and siteCollection."
                            },
                            "sets": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.termStore.set"
                                },
                                "description": "All sets under the group in a term [store].",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.termStore.group"
            },
            "microsoft.graph.termStore.set": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "set",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Date and time of set creation. Read-only.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "description": {
                                "type": "string",
                                "description": "Description that gives details on the term usage.",
                                "nullable": true
                            },
                            "localizedNames": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "Name of the set for each languageTag."
                            },
                            "properties": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "Custom properties for the set."
                            },
                            "children": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.termStore.term"
                                },
                                "description": "Children terms of set in term [store].",
                                "x-ms-navigationProperty": true
                            },
                            "parentGroup": {
                                "$ref": "#/components/schemas/microsoft.graph.termStore.group"
                            },
                            "relations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.termStore.relation"
                                },
                                "description": "Indicates which terms have been pinned or reused directly under the set.",
                                "x-ms-navigationProperty": true
                            },
                            "terms": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.termStore.term"
                                },
                                "description": "All the terms under the set.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.termStore.set"
            },
            "microsoft.graph.termStore.relation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "relation",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "relationship": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The type of relation. Possible values are: pin, reuse."
                            },
                            "fromTerm": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The from [term] of the relation. The term from which the relationship is defined. A null value would indicate the relation is directly with the [set].",
                                "x-ms-navigationProperty": true
                            },
                            "set": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The [set] in which the relation is relevant.",
                                "x-ms-navigationProperty": true
                            },
                            "toTerm": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The to [term] of the relation. The term to which the relationship is defined.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.termStore.relation"
            },
            "microsoft.graph.termStore.term": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/microsoft.graph.entity"
                    },
                    {
                        "title": "term",
                        "required": [],
                        "type": "object",
                        "properties": {
                            "createdDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Date and time of term creation. Read-only.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "descriptions": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "Description about term that is dependent on the languageTag."
                            },
                            "labels": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "Label metadata for a term."
                            },
                            "lastModifiedDateTime": {
                                "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
                                "type": "string",
                                "description": "Last date and time of term modification. Read-only.",
                                "format": "date-time",
                                "nullable": true
                            },
                            "properties": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "nullable": true
                                        }
                                    ]
                                },
                                "description": "Collection of properties on the term."
                            },
                            "children": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.termStore.term"
                                },
                                "description": "Children of current term.",
                                "x-ms-navigationProperty": true
                            },
                            "relations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/microsoft.graph.termStore.relation"
                                },
                                "description": "To indicate which terms are related to the current term as either pinned or reused.",
                                "x-ms-navigationProperty": true
                            },
                            "set": {
                                "anyOf": [
                                    {
                                        "type": "object",
                                        "nullable": true
                                    }
                                ],
                                "description": "The [set] in which the term is created.",
                                "x-ms-navigationProperty": true
                            },
                            "@odata.type": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "x-ms-discriminator-value": "#microsoft.graph.termStore.term"
            }
        },
        "parameters": {
            "top": {
                "name": "$top",
                "in": "query",
                "description": "Show only the first n items",
                "style": "form",
                "explode": false,
                "schema": {
                    "minimum": 0,
                    "type": "integer"
                },
                "example": 50
            },
            "skip": {
                "name": "$skip",
                "in": "query",
                "description": "Skip the first n items",
                "style": "form",
                "explode": false,
                "schema": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "count": {
                "name": "$count",
                "in": "query",
                "description": "Include count of items",
                "style": "form",
                "explode": false,
                "schema": {
                    "type": "boolean"
                }
            },
            "filter": {
                "name": "$filter",
                "in": "query",
                "description": "Filter items by property values",
                "style": "form",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            },
            "search": {
                "name": "$search",
                "in": "query",
                "description": "Search items by search phrases",
                "style": "form",
                "explode": false,
                "schema": {
                    "type": "string"
                }
            }
        }
    }
}