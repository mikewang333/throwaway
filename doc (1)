components:
  schemas:
    Application:
      properties:
        application_id:
          description: The application unique identifier
          type: string
        internal_bi_name:
          description: Internal BI name
          type: string
        live_campaigns:
          $ref: '#/components/schemas/Trend'
        name:
          description: The application name.
          type: string
        segment_schema:
          $ref: '#/components/schemas/SegmentSchema'
        total_clicked:
          $ref: '#/components/schemas/Trend'
        total_received:
          $ref: '#/components/schemas/Trend'
        total_sent:
          $ref: '#/components/schemas/Trend'
      required:
      - application_id
      - internal_bi_name
      - name
      type: object
    Campaign:
      properties:
        channel_id:
          description: Channel ID
          type: string
        delivery_hour:
          description: At what hour is message delivered
          type: integer
        delivery_time:
          description: When is campaign delivered. (U - UTC, L - local time, O - user
            optimal time)
          enum:
          - U
          - L
          - O
          example: U
          type: string
        end_date:
          description: End date of the campaign
          type: integer
        frequency:
          description: Campaign frequency (D - daily, W - weekly, M - monthly)
          enum:
          - D
          - W
          - M
          example: D
          type: string
        pn_text:
          description: The campaign push notification text
          type: string
        reward_tag:
          description: Reward tag
          type: string
        segment_id:
          description: Segment ID
          type: string
        start_date:
          description: Start date of the campaign
          type: integer
        tag:
          description: The campaign tag
          type: string
        title:
          description: Campaign title
          type: string
      required:
      - delivery_time
      - frequency
      - pn_text
      - segment_id
      - start_date
      - tag
      - title
      type: object
    CampaignStatistics:
      properties:
        campaign_id:
          description: Campaign Id
          type: string
        delivery_time_type:
          description: When was campaign delivered. (U - UTC, L - local time, O -
            user optimal time)
          enum:
          - U
          - L
          - O
          example: U
          type: string
        received:
          description: Number of received push notifications
          type: integer
        sent:
          description: Number of sent push notifications
          type: integer
        tag:
          description: Campaign tag
          type: string
      required:
      - campaign_id
      - delivery_time_type
      - received
      - sent
      - tag
      type: object
    Channel:
      properties:
        optimove_default:
          description: Is this channel default for Optimove campaigns
          type: boolean
        value:
          description: Channel value
          type: string
      required:
      - optimove_default
      - value
      type: object
    CreateApplication:
      properties:
        internal_bi_name:
          description: Internal BI segmentation table name
          type: string
        name:
          description: Application name
          type: string
      required:
      - internal_bi_name
      - name
      type: object
    CreateCampaign:
      allOf:
      - $ref: '#/components/schemas/Campaign'
      - properties:
          save_as_draft:
            description: Is this campaign a draft
            type: boolean
        required:
        - save_as_draft
        type: object
    Device:
      properties:
        device_id:
          description: Device unique identifier
          type: string
      required:
      - device_id
      type: object
    DeviceArray:
      description: Array of devices
      properties:
        devices:
          description: Array of devices
          items:
            $ref: '#/components/schemas/Device'
          type: array
      required:
      - devices
      type: object
    Error:
      properties:
        error:
          description: Error details
          type: integer
        message:
          description: Error description
          type: string
      required:
      - message
      - error
      type: object
    FullCampaign:
      allOf:
      - $ref: '#/components/schemas/Campaign'
      - properties:
          campaign_id:
            description: Campaign ID
            type: string
          clicked:
            description: Number of messages opened
            type: integer
          received:
            description: Number of messages received
            type: integer
          sent:
            description: Number of sent notifications
            type: integer
          state:
            description: Campaign status. S - scheduled, D - draft, R - running, P
              - paused, X - inactive
            enum:
            - S
            - D
            - R
            - P
            - X
            example: S
            type: string
        required:
        - campaign_id
        - state
        type: object
    FullChannel:
      allOf:
      - $ref: '#/components/schemas/Channel'
      - properties:
          channel_id:
            description: Channel ID
            type: string
        required:
        - channel_id
        type: object
    FullSegment:
      allOf:
      - $ref: '#/components/schemas/Segment'
      - properties:
          estimated_size:
            description: Estimated latest size of the segment
            type: integer
          segment_id:
            description: Segment ID
            type: string
        required:
        - segment_id
        type: object
    FullTemplate:
      allOf:
      - $ref: '#/components/schemas/Template'
      - properties:
          template_id:
            description: Template ID
            type: string
          template_nr:
            description: Numerical template ID
            type: integer
        required:
        - template_id
        - template_nr
        type: object
    FullTestDevice:
      allOf:
      - $ref: '#/components/schemas/TestDevice'
      - properties:
          device_id:
            description: Device unique identifier
            type: string
        required:
        - device_id
        type: object
    NameLabel:
      properties:
        label:
          type: string
        name:
          type: string
      required:
      - name
      - label
      type: object
    OptimoveCampaignStatistics:
      properties:
        campaign_id:
          description: Campaign ID
          type: integer
        delivery_time_type:
          description: When was campaign delivered. (L - local time, O - user optimal
            time)
          enum:
          - L
          - O
          example: L
          type: string
        received:
          description: Number of received push notifications
          type: integer
        sent:
          description: Number of sent push notifications
          type: integer
        tag:
          description: Template tag
          type: string
        template_id:
          description: Template ID
          type: integer
      required:
      - campaign_id
      - delivery_time_type
      - received
      - sent
      - tag
      - template_id
      type: object
    OptimoveDaily:
      properties:
        CampaignID:
          description: Campaign ID
          type: integer
        EventTypeID:
          description: Event type ID
          type: integer
        TimeStamp:
          description: Event timestamp
          type: string
      required:
      - CampaignID
      - EventTypeID
      - TimeStamp
      type: object
    OptimoveRealtime:
      properties:
        actionID:
          description: Action ID
          type: integer
        channelID:
          description: Channel ID
          type: integer
        isVisitor:
          description: Is visitor?
          type: boolean
        personalization:
          $ref: '#/components/schemas/Personalisation'
        promoCode:
          description: Promotion code
          type: string
        templateID:
          description: Template ID
          type: integer
        timestamp:
          description: UNIX timestamp of execution time
          type: integer
      required:
      - actionID
      - channelID
      - templateID
      - timestamp
      type: object
    Personalisation:
      properties:
        push_platform:
          description: Token platform
          type: integer
        push_token:
          description: User push token
          type: string
      required:
      - push_platform
      - push_token
      type: object
    PushTestResult:
      properties:
        failure:
          description: List of failed devices IDs
          items:
            type: string
          type: array
        success:
          description: List of succesful devices IDs
          items:
            type: string
          type: array
      required:
      - failure
      - success
      type: object
    Segment:
      properties:
        query:
          $ref: '#/components/schemas/SegmentCombinator'
        schema:
          $ref: '#/components/schemas/SegmentSchema'
        tag:
          description: Segment tag
          type: string
      required:
      - tag
      - query
      - schema
      type: object
    SegmentCombinator:
      properties:
        combinator:
          description: Combinator type
          enum:
          - and
          - or
          type: string
        objectType:
          description: Object type
          enum:
          - combinator
          type: string
        rules:
          description: List of rules
          items:
            discriminator:
              mapping:
                combinator: '#/components/schemas/SegmentCombinator'
                rule: '#/components/schemas/SegmentRule'
              propertyName: objectType
            oneOf:
            - $ref: '#/components/schemas/SegmentRule'
            - $ref: '#/components/schemas/SegmentCombinator'
          type: array
      required:
      - combinator
      - rules
      - objectType
      type: object
    SegmentFields:
      description: Segment query schema fields
      items:
        allOf:
        - $ref: '#/components/schemas/NameLabel'
        - properties:
            operators:
              items:
                $ref: '#/components/schemas/NameLabel'
              type: array
            type:
              enum:
              - text
              - number
              - datediff_timestamp
              - datediff_date
              - country
              - platform
              type: string
            values:
              items:
                $ref: '#/components/schemas/NameLabel'
              type: array
          required:
          - type
          type: object
      type: array
    SegmentRule:
      properties:
        field:
          description: Field name
          type: string
        objectType:
          description: Object type
          enum:
          - rule
          type: string
        operator:
          description: Operator
          type: string
        value:
          description: Value
          type: string
      required:
      - field
      - operator
      - value
      - objectType
      type: object
    SegmentSchema:
      properties:
        fields:
          $ref: '#/components/schemas/SegmentFields'
        table:
          description: Table name
          type: string
      required:
      - fields
      - table
      type: object
    SegmentUsage:
      properties:
        campaigns:
          description: Campaign IDs where segment is used
          items:
            type: string
          type: array
      required:
      - campaigns
      type: object
    Template:
      properties:
        pn_text:
          description: The campaign push notification text
          type: string
        reward_tag:
          description: Reward tag
          type: string
        tag:
          description: The campaign tag
          type: string
        title:
          description: Campaign title
          type: string
      required:
      - pn_text
      - tag
      - title
      type: object
    TestDevice:
      properties:
        name:
          description: A human readable name for the device
          type: string
        platform:
          description: The push notification token platform
          enum:
          - APNS
          - GCM
          - ADM
          example: APNS
          type: string
        token:
          description: The push notification token
          type: string
      required:
      - name
      - platform
      - token
      type: object
    Trend:
      properties:
        previous_value:
          description: Previous value
          type: integer
        value:
          description: Value
          type: integer
      required:
      - value
      - previous_value
      type: object
    UpdateSegment:
      properties:
        query:
          $ref: '#/components/schemas/SegmentCombinator'
        tag:
          description: Segment tag
          type: string
      required:
      - tag
      - query
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Cf-Access-Jwt-Assertion
      type: apiKey
info:
  description: Push backoffice
  title: Push backoffice API
  version: "1.0"
openapi: 3.1.0
paths:
  /v2.0/applications:
    get:
      description: Returns all applications and the statistics for last 24 hours
      operationId: GetApplications
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
      summary: Returns all applications and the statistics for last 24 hours
      tags:
      - v2.0
    post:
      description: Creates a new application
      operationId: PostApplications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplication'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
      summary: Creates a new application
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/applications/{application_id}:
    delete:
      description: Deletes an application
      operationId: DeleteApplication
      parameters:
      - in: path
        name: application_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Deletes an application
      tags:
      - v2.0
    get:
      description: Returns application and the statistics for last 24 hours
      operationId: GetApplication
      parameters:
      - in: path
        name: application_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Returns application and the statistics for last 24 hours
      tags:
      - v2.0
  /v2.0/applications/{application_id}/campaigns:
    get:
      operationId: GetCampaigns
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FullCampaign'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Returns application campaings
      tags:
      - v2.0
    post:
      operationId: PostCampaigns
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaign'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullCampaign'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Creates a new campaign
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/applications/{application_id}/campaigns/{campaign_id}:
    delete:
      description: Deletes a campaign
      operationId: DeleteCampaign
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: The campaign identifier
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Deletes a campaign
      tags:
      - v2.0
    put:
      description: Updates a campaign
      operationId: PutCampaign
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: The campaign identifier
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCampaign'
        required: true
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Updates a campaign
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/applications/{application_id}/campaigns/{campaign_id}/paused:
    put:
      description: Sets campaign to paused state
      operationId: PutCampaignPaused
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: The campaign identifier
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Sets campaign to paused state
      tags:
      - v2.0
  /v2.0/applications/{application_id}/campaigns/{campaign_id}/running:
    put:
      description: Sets campaign to running state
      operationId: PutCampaignRunning
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: The campaign identifier
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Sets campaign to running state
      tags:
      - v2.0
  /v2.0/applications/{application_id}/campaigns/{campaign_id}/stopped:
    put:
      description: Sets campaign to stopped state
      operationId: PutCampaignStopped
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: The campaign identifier
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Sets campaign to stopped state
      tags:
      - v2.0
  /v2.0/applications/{application_id}/campaigns/{campaign_id}/test-campaign:
    put:
      description: Sends test campaign
      operationId: PutCampaignTest
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: The campaign identifier
        in: path
        name: campaign_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceArray'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushTestResult'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Sends test campaign
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/applications/{application_id}/campaigns/{start}/{end}:
    get:
      description: Returns application campaigns and statistics for given timeframe
      operationId: GetCampaignsTimeframe
      parameters:
      - description: Timeframe filter start
        in: path
        name: end
        required: true
        schema:
          type: integer
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: Timeframe filter start
        in: path
        name: start
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FullCampaign'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Returns application campaigns and statistics for given timeframe
      tags:
      - v2.0
  /v2.0/applications/{application_id}/channels:
    get:
      description: Lists all channels
      operationId: GetChannels
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FullChannel'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Lists all channel definitions
      tags:
      - v2.0
    post:
      description: Creates a channel definition
      operationId: PostChannels
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullChannel'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
      summary: Creates a channel definition
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/applications/{application_id}/channels/{channel_id}:
    delete:
      description: Deletes a channel
      operationId: DeleteChannel
      parameters:
      - description: The channel identifier
        in: path
        name: channel_id
        required: true
        schema:
          type: string
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Deletes a channel
      tags:
      - v2.0
  /v2.0/applications/{application_id}/segment_schema:
    post:
      description: Creates a segmentation query schema field
      operationId: PostSegmentSchemaFields
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SegmentSchema'
        required: true
      responses:
        "204":
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Creates a segmentation query schema field
      tags:
      - v2.0
  /v2.0/applications/{application_id}/segments:
    get:
      description: Lists all segment definitions
      operationId: GetSegments
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullSegment'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Lists all segment definitions
      tags:
      - v2.0
    post:
      description: Creates a segment definition
      operationId: PostSegments
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Segment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullSegment'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
      summary: Creates a segment definition
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/applications/{application_id}/segments/{segment_id}:
    delete:
      description: Deletes a segment
      operationId: DeleteSegment
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: The segment identifier
        in: path
        name: segment_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentUsage'
          description: Segment in use
      summary: Deletes a segment
      tags:
      - v2.0
    put:
      description: Updates a segment definition
      operationId: PutSegment
      parameters:
      - description: The segment identifier
        in: path
        name: segment_id
        required: true
        schema:
          type: string
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSegment'
        required: true
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SegmentUsage'
          description: Segment in use
      summary: Updates a segment definition
      tags:
      - v2.0
  /v2.0/applications/{application_id}/templates:
    get:
      operationId: GetTemplates
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FullTemplate'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Returns application templates
      tags:
      - v2.0
    post:
      operationId: PostTemplates
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTemplate'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Creates a template
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/applications/{application_id}/templates/{template_id}:
    delete:
      description: Deletes template
      operationId: DeleteTemplate
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: The template identifier
        in: path
        name: template_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Deletes Optimove campaign
      tags:
      - v2.0
    put:
      description: Updates template
      operationId: PutTemplate
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: The template identifier
        in: path
        name: template_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
        required: true
      responses:
        "204":
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Updates template
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/applications/{application_id}/test-devices:
    get:
      operationId: GetTestDevices
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FullTestDevice'
                type: array
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Gets all appliocation test devices
      tags:
      - v2.0
    post:
      operationId: PostTestDevices
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestDevice'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTestDevice'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Creates a test device
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/applications/{application_id}/test-devices/{device_id}:
    delete:
      description: Removes test device
      operationId: DeleteTestDevice
      parameters:
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: The device identifier
        in: path
        name: device_id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Resource does not exist
      summary: Removes test device
      tags:
      - v2.0
  /v2.0/applications/{start}/{end}:
    get:
      description: Returns all applications and the statistics of live campaigns during
        the timeframe
      operationId: GetApplicationsTimeframe
      parameters:
      - description: Statistics timeframe end
        in: path
        name: end
        required: true
        schema:
          type: integer
      - description: Statistics timeframe start
        in: path
        name: start
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Application'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Permission denied
      summary: Returns all applications and the statistics of live campaigns during
        the timeframe
      tags:
      - v2.0
  /v2.0/optimove/daily:
    post:
      description: Handles daily event
      operationId: PostOptimoveDaily
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimoveDaily'
        required: true
      responses:
        "204":
          description: Success
      summary: Optimove daily notification handler
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/optimove/realtime:
    post:
      description: Handles realtime event
      operationId: PostOptimoveRealtime
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptimoveRealtime'
        required: true
      responses:
        "204":
          description: Success
      summary: Optimove realtime notification handler
      tags:
      - v2.0
      x-codegen-request-body-name: payload
  /v2.0/optimove_statistics/{application_id}/{start}/{end}:
    get:
      description: Handles Optimove statistics requests
      operationId: GetOptimoveStatistics
      parameters:
      - description: Timeframe start
        in: path
        name: start
        required: true
        schema:
          type: integer
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: Timeframe end
        in: path
        name: end
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/OptimoveCampaignStatistics'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
      summary: Returns statistics for last day
      tags:
      - v2.0
  /v2.0/statistics/{application_id}/{start}/{end}:
    get:
      description: Handles statistics requests
      operationId: GetStatistics
      parameters:
      - description: Timeframe start
        in: path
        name: start
        required: true
        schema:
          type: integer
      - description: The application identifier
        in: path
        name: application_id
        required: true
        schema:
          type: string
      - description: Timeframe end
        in: path
        name: end
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CampaignStatistics'
                type: array
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid parameter
      summary: Returns statistics for last day
      tags:
      - v2.0
servers:
- url: /
tags:
- description: Default namespace
  name: default
- description: Push backoffice related operations
  name: v2.0
